<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.25">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="uni3042"/>
    <GlyphID id="2" name="uni3044"/>
    <GlyphID id="3" name="uni3046"/>
    <GlyphID id="4" name="uni3048"/>
    <GlyphID id="5" name="uni304A"/>
    <GlyphID id="6" name="uni304B"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="1.06099"/>
    <checkSumAdjustment value="0xb73bd743"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000010 00101011"/>
    <unitsPerEm value="1000"/>
    <created value="Tue Apr 12 05:33:16 2016"/>
    <modified value="Thu May  3 18:21:19 2018"/>
    <xMin value="-115"/>
    <yMin value="-343"/>
    <xMax value="1403"/>
    <yMax value="1075"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="8"/>
    <fontDirectionHint value="0"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="1075"/>
    <descent value="-320"/>
    <lineGap value="90"/>
    <advanceWidthMax value="1428"/>
    <minLeftSideBearing value="-115"/>
    <minRightSideBearing value="-920"/>
    <xMaxExtent value="1403"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="2"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="7"/>
    <maxPoints value="209"/>
    <maxContours value="22"/>
    <maxCompositePoints value="128"/>
    <maxCompositeContours value="12"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="1"/>
    <maxStorage value="2"/>
    <maxFunctionDefs value="22"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="256"/>
    <maxSizeOfInstructions value="46"/>
    <maxComponentElements value="1"/>
    <maxComponentDepth value="1"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="1"/>
    <xAvgCharWidth value="907"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="650"/>
    <ySubscriptYSize value="700"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="140"/>
    <ySuperscriptXSize value="650"/>
    <ySuperscriptYSize value="700"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="480"/>
    <yStrikeoutSize value="49"/>
    <yStrikeoutPosition value="258"/>
    <sFamilyClass value="2054"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="11"/>
      <bWeight value="5"/>
      <bProportion value="2"/>
      <bContrast value="2"/>
      <bStrokeVariation value="2"/>
      <bArmStyle value="3"/>
      <bLetterForm value="2"/>
      <bMidline value="2"/>
      <bXHeight value="7"/>
    </panose>
    <ulUnicodeRange1 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange2 value="00000000 00000010 00000000 00000000"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="M+  "/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="12354"/>
    <usLastCharIndex value="12363"/>
    <sTypoAscender value="860"/>
    <sTypoDescender value="-140"/>
    <sTypoLineGap value="90"/>
    <usWinAscent value="1075"/>
    <usWinDescent value="320"/>
    <ulCodePageRange1 value="01100000 00010010 00000001 10111111"/>
    <ulCodePageRange2 value="11011111 11110111 00000000 00000000"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="364" lsb="33"/>
    <mtx name="uni3042" width="1000" lsb="97"/>
    <mtx name="uni3044" width="1000" lsb="117"/>
    <mtx name="uni3046" width="1000" lsb="132"/>
    <mtx name="uni3048" width="1000" lsb="102"/>
    <mtx name="uni304A" width="1000" lsb="87"/>
    <mtx name="uni304B" width="1000" lsb="85"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x3042" name="uni3042"/><!-- HIRAGANA LETTER A -->
      <map code="0x3044" name="uni3044"/><!-- HIRAGANA LETTER I -->
      <map code="0x3046" name="uni3046"/><!-- HIRAGANA LETTER U -->
      <map code="0x3048" name="uni3048"/><!-- HIRAGANA LETTER E -->
      <map code="0x304a" name="uni304A"/><!-- HIRAGANA LETTER O -->
      <map code="0x304b" name="uni304B"/><!-- HIRAGANA LETTER KA -->
    </cmap_format_4>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x3042" name="uni3042"/><!-- HIRAGANA LETTER A -->
      <map code="0x3044" name="uni3044"/><!-- HIRAGANA LETTER I -->
      <map code="0x3046" name="uni3046"/><!-- HIRAGANA LETTER U -->
      <map code="0x3048" name="uni3048"/><!-- HIRAGANA LETTER E -->
      <map code="0x304a" name="uni304A"/><!-- HIRAGANA LETTER O -->
      <map code="0x304b" name="uni304B"/><!-- HIRAGANA LETTER KA -->
    </cmap_format_4>
    <cmap_format_12 platformID="3" platEncID="10" format="12" reserved="0" length="76" language="0" nGroups="5">
      <map code="0x3042" name="uni3042"/><!-- HIRAGANA LETTER A -->
      <map code="0x3044" name="uni3044"/><!-- HIRAGANA LETTER I -->
      <map code="0x3046" name="uni3046"/><!-- HIRAGANA LETTER U -->
      <map code="0x3048" name="uni3048"/><!-- HIRAGANA LETTER E -->
      <map code="0x304a" name="uni304A"/><!-- HIRAGANA LETTER O -->
      <map code="0x304b" name="uni304B"/><!-- HIRAGANA LETTER KA -->
    </cmap_format_12>
  </cmap>

  <fpgm>
    <assembly>
      PUSHB[ ]	/* 1 value pushed */
      0
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP0[ ]	/* SetZonePointer0 */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        42
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          74
          SROUND[ ]	/* SuperRound */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        0
        SWAP[ ]	/* SwapTopStack */
        MIAP[1]	/* MoveIndirectAbsPt */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        6
        CALL[ ]	/* CallFunction */
        IF[ ]	/* If */
          RTDG[ ]	/* RoundToDoubleGrid */
        EIF[ ]	/* EndIf */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        42
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          RDTG[ ]	/* RoundDownToGrid */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        MDRP[10100]	/* MoveDirectRelPt */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP0[ ]	/* SetZonePointer0 */
        MDAP[0]	/* MoveDirectAbsPt */
        RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      1
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDRP[11010]	/* MoveDirectRelPt */
        PUSHB[ ]	/* 1 value pushed */
        12
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      2
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      3
      FDEF[ ]	/* FunctionDefinition */
        ROUND[01]	/* Round */
        RTG[ ]	/* RoundToGrid */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      4
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        6
        CALL[ ]	/* CallFunction */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          ROFF[ ]	/* RoundOff */
          IF[ ]	/* If */
            MDRP[11101]	/* MoveDirectRelPt */
          ELSE[ ]	/* Else */
            MDRP[01101]	/* MoveDirectRelPt */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            IF[ ]	/* If */
              MIRP[11101]	/* MoveIndirectRelPt */
            ELSE[ ]	/* Else */
              MIRP[01101]	/* MoveIndirectRelPt */
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            SWAP[ ]	/* SwapTopStack */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            5
            CALL[ ]	/* CallFunction */
            IF[ ]	/* If */
              PUSHB[ ]	/* 1 value pushed */
              70
              SROUND[ ]	/* SuperRound */
            EIF[ ]	/* EndIf */
            IF[ ]	/* If */
              MDRP[11101]	/* MoveDirectRelPt */
            ELSE[ ]	/* Else */
              MDRP[01101]	/* MoveDirectRelPt */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      5
      FDEF[ ]	/* FunctionDefinition */
        GFV[ ]	/* GetFVector */
        NOT[ ]	/* LogicalNot */
        AND[ ]	/* LogicalAnd */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      6
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        34 1
        GETINFO[ ]	/* GetInfo */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          32
          GETINFO[ ]	/* GetInfo */
          NOT[ ]	/* LogicalNot */
          NOT[ ]	/* LogicalNot */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          0
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      7
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        36 1
        GETINFO[ ]	/* GetInfo */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          GETINFO[ ]	/* GetInfo */
          NOT[ ]	/* LogicalNot */
          NOT[ ]	/* LogicalNot */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          0
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      8
      FDEF[ ]	/* FunctionDefinition */
        SRP2[ ]	/* SetRefPoint2 */
        SRP1[ ]	/* SetRefPoint1 */
        DUP[ ]	/* DuplicateTopStack */
        IP[ ]	/* InterpolatePts */
        MDAP[1]	/* MoveDirectAbsPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      9
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RDTG[ ]	/* RoundDownToGrid */
        PUSHB[ ]	/* 1 value pushed */
        6
        CALL[ ]	/* CallFunction */
        IF[ ]	/* If */
          MDRP[00100]	/* MoveDirectRelPt */
        ELSE[ ]	/* Else */
          MDRP[01101]	/* MoveDirectRelPt */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          ROLL[ ]	/* RollTopThreeStack */
          NEG[ ]	/* Negate */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          ROLL[ ]	/* RollTopThreeStack */
          SUB[ ]	/* Subtract */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
        RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      10
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        6
        CALL[ ]	/* CallFunction */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          SRP0[ ]	/* SetRefPoint0 */
        ELSE[ ]	/* Else */
          SRP0[ ]	/* SetRefPoint0 */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      11
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDRP[10010]	/* MoveDirectRelPt */
        PUSHB[ ]	/* 1 value pushed */
        12
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      12
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[1]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        7
        CALL[ ]	/* CallFunction */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          ROUND[10]	/* Round */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            DUP[ ]	/* DuplicateTopStack */
            ABS[ ]	/* Absolute */
            DIV[ ]	/* Divide */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      13
      FDEF[ ]	/* FunctionDefinition */
        SRP2[ ]	/* SetRefPoint2 */
        SRP1[ ]	/* SetRefPoint1 */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        IP[ ]	/* InterpolatePts */
        MDAP[1]	/* MoveDirectAbsPt */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[1]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        GC[0]	/* GetCoordOnPVector */
        SUB[ ]	/* Subtract */
        SWAP[ ]	/* SwapTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        MD[1]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          SWAP[ ]	/* SwapTopStack */
          PUSHB[ ]	/* 1 value pushed */
          0
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 1 value pushed */
            64
            NEG[ ]	/* Negate */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      14
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        6
        CALL[ ]	/* CallFunction */
        IF[ ]	/* If */
          RTDG[ ]	/* RoundToDoubleGrid */
          MDRP[10110]	/* MoveDirectRelPt */
          RTG[ ]	/* RoundToGrid */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        ELSE[ ]	/* Else */
          DUP[ ]	/* DuplicateTopStack */
          MDRP[10110]	/* MoveDirectRelPt */
          ROLL[ ]	/* RollTopThreeStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            DUP[ ]	/* DuplicateTopStack */
            ROLL[ ]	/* RollTopThreeStack */
            SWAP[ ]	/* SwapTopStack */
            MD[0]	/* MeasureDistance */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            0
            NEQ[ ]	/* NotEqual */
            IF[ ]	/* If */
              SHPIX[ ]	/* ShiftZoneByPixel */
            ELSE[ ]	/* Else */
              POP[ ]	/* PopTopStack */
              POP[ ]	/* PopTopStack */
            EIF[ ]	/* EndIf */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      15
      FDEF[ ]	/* FunctionDefinition */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        MDRP[10110]	/* MoveDirectRelPt */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[1]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        7
        CALL[ ]	/* CallFunction */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            MPPEM[ ]	/* MeasurePixelPerEm */
            GTEQ[ ]	/* GreaterThanOrEqual */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            1
          EIF[ ]	/* EndIf */
          IF[ ]	/* If */
            ROLL[ ]	/* RollTopThreeStack */
            PUSHB[ ]	/* 1 value pushed */
            4
            MINDEX[ ]	/* MoveXToTopStack */
            MD[0]	/* MeasureDistance */
            SWAP[ ]	/* SwapTopStack */
            ROLL[ ]	/* RollTopThreeStack */
            SWAP[ ]	/* SwapTopStack */
            DUP[ ]	/* DuplicateTopStack */
            ROLL[ ]	/* RollTopThreeStack */
            MD[0]	/* MeasureDistance */
            ROLL[ ]	/* RollTopThreeStack */
            SWAP[ ]	/* SwapTopStack */
            SUB[ ]	/* Subtract */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      16
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDRP[11010]	/* MoveDirectRelPt */
        PUSHB[ ]	/* 1 value pushed */
        18
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      17
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDRP[10010]	/* MoveDirectRelPt */
        PUSHB[ ]	/* 1 value pushed */
        18
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      18
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        MDAP[1]	/* MoveDirectAbsPt */
        PUSHB[ ]	/* 1 value pushed */
        7
        CALL[ ]	/* CallFunction */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SUB[ ]	/* Subtract */
          ROUND[10]	/* Round */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[1]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          GC[0]	/* GetCoordOnPVector */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          ROUND[10]	/* Round */
          ADD[ ]	/* Add */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            DUP[ ]	/* DuplicateTopStack */
            ABS[ ]	/* Absolute */
            DIV[ ]	/* Divide */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      19
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SDPVTL[1]	/* SetDualPVectorToLine */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        MD[1]	/* MeasureDistance */
        ABS[ ]	/* Absolute */
        SWAP[ ]	/* SwapTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SPVTL[1]	/* SetPVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        32
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          ALIGNRP[ ]	/* AlignRelativePt */
        ELSE[ ]	/* Else */
          MDRP[00000]	/* MoveDirectRelPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      20
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 4 values pushed */
        0 64 1 64
        WS[ ]	/* WriteStore */
        WS[ ]	/* WriteStore */
        SVTCA[1]	/* SetFPVectorToAxis */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHW[ ]	/* 1 value pushed */
        4096
        MUL[ ]	/* Multiply */
        SVTCA[0]	/* SetFPVectorToAxis */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHW[ ]	/* 1 value pushed */
        4096
        MUL[ ]	/* Multiply */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        NEQ[ ]	/* NotEqual */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          DUP[ ]	/* DuplicateTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            SWAP[ ]	/* SwapTopStack */
            DIV[ ]	/* Divide */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            0
            SWAP[ ]	/* SwapTopStack */
            WS[ ]	/* WriteStore */
          ELSE[ ]	/* Else */
            DIV[ ]	/* Divide */
            DUP[ ]	/* DuplicateTopStack */
            PUSHB[ ]	/* 1 value pushed */
            1
            SWAP[ ]	/* SwapTopStack */
            WS[ ]	/* WriteStore */
          EIF[ ]	/* EndIf */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          GT[ ]	/* GreaterThan */
          IF[ ]	/* If */
            PUSHB[ ]	/* 3 values pushed */
            0 32 0
            RS[ ]	/* ReadStore */
            MUL[ ]	/* Multiply */
            WS[ ]	/* WriteStore */
            PUSHB[ ]	/* 3 values pushed */
            1 32 1
            RS[ ]	/* ReadStore */
            MUL[ ]	/* Multiply */
            WS[ ]	/* WriteStore */
            PUSHB[ ]	/* 1 value pushed */
            32
            MUL[ ]	/* Multiply */
            PUSHB[ ]	/* 1 value pushed */
            25
            NEG[ ]	/* Negate */
            JMPR[ ]	/* Jump */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      21
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        1
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHB[ ]	/* 1 value pushed */
      1
      SCANTYPE[ ]	/* ScanType */
      SVTCA[0]	/* SetFPVectorToAxis */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      8
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
        PUSHB[ ]	/* 2 values pushed */
        1 1
        INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 2 values pushed */
      70 6
      CALL[ ]	/* CallFunction */
      IF[ ]	/* If */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        16
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      20
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        128
      EIF[ ]	/* EndIf */
      SCVTCI[ ]	/* SetCVTCutIn */
      PUSHB[ ]	/* 1 value pushed */
      6
      CALL[ ]	/* CallFunction */
      NOT[ ]	/* LogicalNot */
      IF[ ]	/* If */
      EIF[ ]	/* EndIf */
      PUSHB[ ]	/* 1 value pushed */
      20
      CALL[ ]	/* CallFunction */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="-220"/>
    <cv index="1" value="-10"/>
    <cv index="2" value="520"/>
    <cv index="3" value="730"/>
    <cv index="4" value="750"/>
    <cv index="5" value="33"/>
    <cv index="6" value="633"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef"/><!-- contains no outline data -->

    <TTGlyph name="uni3042" xMin="97" yMin="-63" xMax="903" yMax="803">
      <contour>
        <pt x="596" y="3" on="1"/>
        <pt x="705" y="24" on="0"/>
        <pt x="830" y="144" on="0"/>
        <pt x="830" y="227" on="1"/>
        <pt x="830" y="357" on="0"/>
        <pt x="704" y="406" on="1"/>
        <pt x="638" y="213" on="0"/>
        <pt x="387" y="-13" on="0"/>
        <pt x="263" y="-13" on="1"/>
        <pt x="185" y="-13" on="0"/>
        <pt x="97" y="80" on="0"/>
        <pt x="97" y="163" on="1"/>
        <pt x="97" y="265" on="0"/>
        <pt x="230" y="426" on="0"/>
        <pt x="347" y="465" on="1"/>
        <pt x="347" y="613" on="1"/>
        <pt x="133" y="613" on="1"/>
        <pt x="133" y="677" on="1"/>
        <pt x="347" y="677" on="1"/>
        <pt x="347" y="803" on="1"/>
        <pt x="420" y="803" on="1"/>
        <pt x="420" y="677" on="1"/>
        <pt x="867" y="677" on="1"/>
        <pt x="867" y="613" on="1"/>
        <pt x="420" y="613" on="1"/>
        <pt x="420" y="484" on="1"/>
        <pt x="487" y="497" on="0"/>
        <pt x="553" y="497" on="1"/>
        <pt x="717" y="497" on="0"/>
        <pt x="903" y="352" on="0"/>
        <pt x="903" y="227" on="1"/>
        <pt x="903" y="116" on="0"/>
        <pt x="749" y="-38" on="0"/>
        <pt x="614" y="-63" on="1"/>
      </contour>
      <contour>
        <pt x="637" y="424" on="1"/>
        <pt x="599" y="430" on="0"/>
        <pt x="553" y="430" on="1"/>
        <pt x="482" y="430" on="0"/>
        <pt x="420" y="415" on="1"/>
        <pt x="420" y="111" on="1"/>
        <pt x="486" y="159" on="0"/>
        <pt x="601" y="320" on="0"/>
      </contour>
      <contour>
        <pt x="347" y="392" on="1"/>
        <pt x="265" y="358" on="0"/>
        <pt x="170" y="241" on="0"/>
        <pt x="170" y="170" on="1"/>
        <pt x="170" y="114" on="0"/>
        <pt x="222" y="53" on="0"/>
        <pt x="270" y="53" on="1"/>
        <pt x="308" y="53" on="0"/>
        <pt x="347" y="69" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni3044" xMin="117" yMin="-33" xMax="910" yMax="697">
      <contour>
        <pt x="701" y="673" on="1"/>
        <pt x="771" y="697" on="1"/>
        <pt x="838" y="572" on="0"/>
        <pt x="910" y="244" on="0"/>
        <pt x="910" y="70" on="1"/>
        <pt x="833" y="70" on="1"/>
        <pt x="833" y="234" on="0"/>
        <pt x="764" y="552" on="0"/>
      </contour>
      <contour>
        <pt x="236" y="682" on="1"/>
        <pt x="193" y="527" on="0"/>
        <pt x="193" y="350" on="1"/>
        <pt x="193" y="220" on="0"/>
        <pt x="285" y="43" on="0"/>
        <pt x="332" y="43" on="1"/>
        <pt x="364" y="43" on="0"/>
        <pt x="465" y="172" on="0"/>
        <pt x="510" y="291" on="1"/>
        <pt x="580" y="264" on="1"/>
        <pt x="531" y="125" on="0"/>
        <pt x="388" y="-33" on="0"/>
        <pt x="327" y="-33" on="1"/>
        <pt x="249" y="-33" on="0"/>
        <pt x="117" y="191" on="0"/>
        <pt x="117" y="350" on="1"/>
        <pt x="117" y="539" on="0"/>
        <pt x="162" y="692" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni3046" xMin="132" yMin="-40" xMax="870" yMax="770">
      <contour>
        <pt x="132" y="460" on="1"/>
        <pt x="390" y="523" on="0"/>
        <pt x="577" y="523" on="1"/>
        <pt x="733" y="523" on="0"/>
        <pt x="870" y="409" on="0"/>
        <pt x="870" y="320" on="1"/>
        <pt x="870" y="173" on="0"/>
        <pt x="587" y="-19" on="0"/>
        <pt x="331" y="-40" on="1"/>
        <pt x="313" y="30" on="1"/>
        <pt x="545" y="52" on="0"/>
        <pt x="793" y="208" on="0"/>
        <pt x="793" y="317" on="1"/>
        <pt x="793" y="453" on="0"/>
        <pt x="573" y="453" on="1"/>
        <pt x="410" y="453" on="0"/>
        <pt x="148" y="392" on="1"/>
      </contour>
      <contour>
        <pt x="272" y="702" on="1"/>
        <pt x="281" y="770" on="1"/>
        <pt x="513" y="733" on="0"/>
        <pt x="723" y="733" on="1"/>
        <pt x="723" y="663" on="1"/>
        <pt x="525" y="663" on="0"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni3048" xMin="102" yMin="-38" xMax="908" yMax="773">
      <contour>
        <pt x="167" y="553" on="1"/>
        <pt x="788" y="553" on="1"/>
        <pt x="788" y="479" on="1"/>
        <pt x="540" y="275" on="1"/>
        <pt x="541" y="274" on="1"/>
        <pt x="551" y="276" on="0"/>
        <pt x="557" y="276" on="1"/>
        <pt x="591" y="276" on="0"/>
        <pt x="632" y="222" on="0"/>
        <pt x="653" y="142" on="1"/>
        <pt x="671" y="74" on="0"/>
        <pt x="712" y="38" on="0"/>
        <pt x="767" y="38" on="1"/>
        <pt x="832" y="38" on="0"/>
        <pt x="895" y="56" on="1"/>
        <pt x="908" y="-10" on="1"/>
        <pt x="835" y="-30" on="0"/>
        <pt x="760" y="-30" on="1"/>
        <pt x="680" y="-30" on="0"/>
        <pt x="606" y="26" on="0"/>
        <pt x="587" y="102" on="1"/>
        <pt x="570" y="170" on="0"/>
        <pt x="534" y="219" on="0"/>
        <pt x="507" y="219" on="1"/>
        <pt x="491" y="219" on="0"/>
        <pt x="471" y="213" on="0"/>
        <pt x="392" y="158" on="0"/>
        <pt x="274" y="65" on="0"/>
        <pt x="146" y="-38" on="1"/>
        <pt x="102" y="18" on="1"/>
        <pt x="681" y="485" on="1"/>
        <pt x="680" y="487" on="1"/>
        <pt x="167" y="487" on="1"/>
      </contour>
      <contour>
        <pt x="272" y="707" on="1"/>
        <pt x="281" y="773" on="1"/>
        <pt x="506" y="737" on="0"/>
        <pt x="723" y="737" on="1"/>
        <pt x="723" y="668" on="1"/>
        <pt x="525" y="668" on="0"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni304A" xMin="87" yMin="-47" xMax="955" yMax="803">
      <contour>
        <pt x="123" y="667" on="1"/>
        <pt x="370" y="667" on="1"/>
        <pt x="370" y="803" on="1"/>
        <pt x="443" y="803" on="1"/>
        <pt x="443" y="667" on="1"/>
        <pt x="700" y="667" on="1"/>
        <pt x="700" y="603" on="1"/>
        <pt x="443" y="603" on="1"/>
        <pt x="443" y="432" on="1"/>
        <pt x="490" y="437" on="0"/>
        <pt x="533" y="437" on="1"/>
        <pt x="683" y="437" on="0"/>
        <pt x="863" y="304" on="0"/>
        <pt x="863" y="213" on="1"/>
        <pt x="863" y="99" on="0"/>
        <pt x="720" y="-34" on="0"/>
        <pt x="581" y="-47" on="1"/>
        <pt x="566" y="20" on="1"/>
        <pt x="788" y="44" on="0"/>
        <pt x="788" y="210" on="1"/>
        <pt x="788" y="273" on="0"/>
        <pt x="650" y="367" on="0"/>
        <pt x="533" y="367" on="1"/>
        <pt x="490" y="367" on="0"/>
        <pt x="443" y="362" on="1"/>
        <pt x="443" y="107" on="1"/>
        <pt x="443" y="32" on="0"/>
        <pt x="381" y="-30" on="0"/>
        <pt x="307" y="-30" on="1"/>
        <pt x="220" y="-30" on="0"/>
        <pt x="87" y="88" on="0"/>
        <pt x="87" y="167" on="1"/>
        <pt x="87" y="253" on="0"/>
        <pt x="235" y="393" on="0"/>
        <pt x="370" y="421" on="1"/>
        <pt x="370" y="603" on="1"/>
        <pt x="123" y="603" on="1"/>
      </contour>
      <contour>
        <pt x="740" y="663" on="1"/>
        <pt x="792" y="705" on="1"/>
        <pt x="880" y="610" on="0"/>
        <pt x="955" y="495" on="1"/>
        <pt x="900" y="459" on="1"/>
        <pt x="831" y="566" on="0"/>
      </contour>
      <contour>
        <pt x="370" y="350" on="1"/>
        <pt x="269" y="327" on="0"/>
        <pt x="160" y="227" on="0"/>
        <pt x="160" y="167" on="1"/>
        <pt x="160" y="117" on="0"/>
        <pt x="248" y="35" on="0"/>
        <pt x="300" y="35" on="1"/>
        <pt x="338" y="35" on="0"/>
        <pt x="370" y="68" on="0"/>
        <pt x="370" y="108" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni304B" xMin="85" yMin="-40" xMax="963" yMax="811">
      <contour>
        <pt x="97" y="533" on="1"/>
        <pt x="97" y="600" on="1"/>
        <pt x="292" y="600" on="1"/>
        <pt x="320" y="723" on="0"/>
        <pt x="335" y="811" on="1"/>
        <pt x="407" y="803" on="1"/>
        <pt x="393" y="715" on="0"/>
        <pt x="367" y="600" on="1"/>
        <pt x="457" y="600" on="1"/>
        <pt x="494" y="600" on="0"/>
        <pt x="535" y="600" on="0"/>
        <pt x="585" y="594" on="0"/>
        <pt x="609" y="590" on="0"/>
        <pt x="639" y="572" on="0"/>
        <pt x="650" y="559" on="0"/>
        <pt x="665" y="523" on="0"/>
        <pt x="668" y="495" on="0"/>
        <pt x="673" y="435" on="0"/>
        <pt x="673" y="387" on="0"/>
        <pt x="673" y="343" on="1"/>
        <pt x="673" y="158" on="0"/>
        <pt x="585" y="-33" on="0"/>
        <pt x="517" y="-33" on="1"/>
        <pt x="432" y="-33" on="0"/>
        <pt x="314" y="21" on="1"/>
        <pt x="338" y="88" on="1"/>
        <pt x="450" y="40" on="0"/>
        <pt x="503" y="40" on="1"/>
        <pt x="525" y="40" on="0"/>
        <pt x="566" y="102" on="0"/>
        <pt x="597" y="250" on="0"/>
        <pt x="597" y="353" on="1"/>
        <pt x="597" y="386" on="0"/>
        <pt x="597" y="418" on="0"/>
        <pt x="594" y="463" on="0"/>
        <pt x="593" y="480" on="0"/>
        <pt x="583" y="507" on="0"/>
        <pt x="579" y="514" on="0"/>
        <pt x="559" y="528" on="0"/>
        <pt x="548" y="529" on="0"/>
        <pt x="515" y="533" on="0"/>
        <pt x="494" y="533" on="0"/>
        <pt x="470" y="533" on="1"/>
        <pt x="351" y="533" on="1"/>
        <pt x="277" y="233" on="0"/>
        <pt x="153" y="-40" on="1"/>
        <pt x="85" y="-13" on="1"/>
        <pt x="202" y="246" on="0"/>
        <pt x="276" y="533" on="1"/>
      </contour>
      <contour>
        <pt x="717" y="665" on="1"/>
        <pt x="786" y="690" on="1"/>
        <pt x="897" y="438" on="0"/>
        <pt x="963" y="182" on="1"/>
        <pt x="892" y="164" on="1"/>
        <pt x="823" y="423" on="0"/>
      </contour>
      <instructions/>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright 2016 The M+ Project Authors.
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Mplus 1p
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      1.061g;GoogleFonts;Mplus1p-Regular
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      Mplus 1p
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 1.061
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      Mplus1p-Regular
    </namerecord>
  </name>

  <post>
    <formatType value="3.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-125"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="2"/>
  </gasp>

  <GDEF>
    <Version value="0x00010000"/>
    <GlyphClassDef>
      <ClassDef glyph="uni3042" class="1"/>
      <ClassDef glyph="uni3044" class="1"/>
      <ClassDef glyph="uni3046" class="1"/>
      <ClassDef glyph="uni3048" class="1"/>
      <ClassDef glyph="uni304A" class="1"/>
      <ClassDef glyph="uni304B" class="1"/>
    </GlyphClassDef>
  </GDEF>

  <GPOS>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=1 -->
      <ScriptRecord index="0">
        <ScriptTag value="DFLT"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=0 -->
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=0 -->
    </FeatureList>
    <LookupList>
      <!-- LookupCount=0 -->
    </LookupList>
  </GPOS>

  <GSUB>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=6 -->
      <ScriptRecord index="0">
        <ScriptTag value="DFLT"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=0 -->
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
      <ScriptRecord index="1">
        <ScriptTag value="cyrl"/>
        <Script>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
      <ScriptRecord index="2">
        <ScriptTag value="grek"/>
        <Script>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
      <ScriptRecord index="3">
        <ScriptTag value="hani"/>
        <Script>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
      <ScriptRecord index="4">
        <ScriptTag value="kana"/>
        <Script>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
      <ScriptRecord index="5">
        <ScriptTag value="latn"/>
        <Script>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=0 -->
    </FeatureList>
    <LookupList>
      <!-- LookupCount=0 -->
    </LookupList>
  </GSUB>

  <vhea>
    <tableVersion value="0x00011000"/>
    <ascent value="903"/>
    <descent value="-615"/>
    <lineGap value="90"/>
    <advanceHeightMax value="1000"/>
    <minTopSideBearing value="-215"/>
    <minBottomSideBearing value="-203"/>
    <yMaxExtent value="1203"/>
    <caretSlopeRise value="0"/>
    <caretSlopeRun value="1"/>
    <caretOffset value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <reserved4 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfVMetrics value="1"/>
  </vhea>

  <vmtx>
    <mtx name=".notdef" height="1000" tsb="666"/>
    <mtx name="uni3042" height="1000" tsb="57"/>
    <mtx name="uni3044" height="1000" tsb="163"/>
    <mtx name="uni3046" height="1000" tsb="90"/>
    <mtx name="uni3048" height="1000" tsb="87"/>
    <mtx name="uni304A" height="1000" tsb="57"/>
    <mtx name="uni304B" height="1000" tsb="49"/>
  </vmtx>

</ttFont>
