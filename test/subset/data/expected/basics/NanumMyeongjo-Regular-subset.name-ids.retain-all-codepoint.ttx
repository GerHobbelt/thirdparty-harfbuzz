<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.25">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="a"/>
    <GlyphID id="2" name="b"/>
    <GlyphID id="3" name="c"/>
    <GlyphID id="4" name="d"/>
    <GlyphID id="5" name="e"/>
    <GlyphID id="6" name="f"/>
    <GlyphID id="7" name="g"/>
    <GlyphID id="8" name="h"/>
    <GlyphID id="9" name="i"/>
    <GlyphID id="10" name="j"/>
    <GlyphID id="11" name="k"/>
    <GlyphID id="12" name="l"/>
    <GlyphID id="13" name="m"/>
    <GlyphID id="14" name="n"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="2.03"/>
    <checkSumAdjustment value="0xf1e5ad83"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00011011"/>
    <unitsPerEm value="1024"/>
    <created value="Thu Feb 26 11:51:41 2009"/>
    <modified value="Fri Feb 23 19:45:12 2018"/>
    <xMin value="-42"/>
    <yMin value="-237"/>
    <xMax value="1137"/>
    <yMax value="929"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="6"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="819"/>
    <descent value="-205"/>
    <lineGap value="256"/>
    <advanceWidthMax value="1241"/>
    <minLeftSideBearing value="-42"/>
    <minRightSideBearing value="-46"/>
    <xMaxExtent value="1137"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="15"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="15"/>
    <maxPoints value="447"/>
    <maxContours value="25"/>
    <maxCompositePoints value="310"/>
    <maxCompositeContours value="11"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="10"/>
    <maxStorage value="31"/>
    <maxFunctionDefs value="50"/>
    <maxInstructionDefs value="24"/>
    <maxStackElements value="512"/>
    <maxSizeOfInstructions value="1466"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="1"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="4"/>
    <xAvgCharWidth value="969"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00000000"/>
    <ySubscriptXSize value="205"/>
    <ySubscriptYSize value="205"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="287"/>
    <ySuperscriptXSize value="205"/>
    <ySuperscriptYSize value="205"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="963"/>
    <yStrikeoutSize value="102"/>
    <yStrikeoutPosition value="512"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="0"/>
      <bSerifStyle value="0"/>
      <bWeight value="0"/>
      <bProportion value="0"/>
      <bContrast value="0"/>
      <bStrokeVariation value="0"/>
      <bArmStyle value="0"/>
      <bLetterForm value="0"/>
      <bMidline value="0"/>
      <bXHeight value="0"/>
    </panose>
    <ulUnicodeRange1 value="00000000 00000000 00000000 00000001"/>
    <ulUnicodeRange2 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange3 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="RIXF"/>
    <fsSelection value="00000000 11000000"/>
    <usFirstCharIndex value="97"/>
    <usLastCharIndex value="110"/>
    <sTypoAscender value="819"/>
    <sTypoDescender value="-205"/>
    <sTypoLineGap value="256"/>
    <usWinAscent value="932"/>
    <usWinDescent value="247"/>
    <ulCodePageRange1 value="00000000 00001000 00000000 00000001"/>
    <ulCodePageRange2 value="00000000 00000000 00000000 00000000"/>
    <sxHeight value="480"/>
    <sCapHeight value="755"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="2"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="1024" lsb="0"/>
    <mtx name="a" width="515" lsb="44"/>
    <mtx name="b" width="575" lsb="40"/>
    <mtx name="c" width="475" lsb="42"/>
    <mtx name="d" width="575" lsb="46"/>
    <mtx name="e" width="455" lsb="41"/>
    <mtx name="f" width="336" lsb="36"/>
    <mtx name="g" width="515" lsb="26"/>
    <mtx name="h" width="575" lsb="30"/>
    <mtx name="i" width="276" lsb="36"/>
    <mtx name="j" width="276" lsb="16"/>
    <mtx name="k" width="575" lsb="30"/>
    <mtx name="l" width="276" lsb="36"/>
    <mtx name="m" width="864" lsb="28"/>
    <mtx name="n" width="575" lsb="30"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
    </cmap_format_4>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x61" name="a"/><!-- LATIN SMALL LETTER A -->
      <map code="0x62" name="b"/><!-- LATIN SMALL LETTER B -->
      <map code="0x63" name="c"/><!-- LATIN SMALL LETTER C -->
      <map code="0x64" name="d"/><!-- LATIN SMALL LETTER D -->
      <map code="0x65" name="e"/><!-- LATIN SMALL LETTER E -->
      <map code="0x66" name="f"/><!-- LATIN SMALL LETTER F -->
      <map code="0x67" name="g"/><!-- LATIN SMALL LETTER G -->
      <map code="0x68" name="h"/><!-- LATIN SMALL LETTER H -->
      <map code="0x69" name="i"/><!-- LATIN SMALL LETTER I -->
      <map code="0x6a" name="j"/><!-- LATIN SMALL LETTER J -->
      <map code="0x6b" name="k"/><!-- LATIN SMALL LETTER K -->
      <map code="0x6c" name="l"/><!-- LATIN SMALL LETTER L -->
      <map code="0x6d" name="m"/><!-- LATIN SMALL LETTER M -->
      <map code="0x6e" name="n"/><!-- LATIN SMALL LETTER N -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      NPUSHB[ ]	/* 30 values pushed */
      29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5
      4 3 2 1 0
      FDEF[ ]	/* FunctionDefinition */
        INSTR147[ ]
        SHP[0]	/* ShiftPointByLastPoint */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        INSTR147[ ]
        SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR147[ ]
        IP[ ]	/* InterpolatePts */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR147[ ]
        ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR147[ ]
        FLIPPT[ ]	/* FlipPoint */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        INSTR154[ ]
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        INSTR167[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        72
        MPPEM[ ]	/* MeasurePixelPerEm */
        MUL[ ]	/* Multiply */
        MPS[ ]	/* MeasurePointSize */
        DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        SVTCA[1]	/* SetFPVectorToAxis */
        INSTR161[ ]
        DUP[ ]	/* DuplicateTopStack */
        SVTCA[0]	/* SetFPVectorToAxis */
        INSTR161[ ]
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        8
        LOOPCALL[ ]	/* LoopAndCallFunction */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        SVTCA[1]	/* SetFPVectorToAxis */
        INSTR152[ ]
        DUP[ ]	/* DuplicateTopStack */
        SVTCA[0]	/* SetFPVectorToAxis */
        INSTR152[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR162[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR162[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR162[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR162[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR162[ ]
        RTG[ ]	/* RoundToGrid */
        INSTR164[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR166[ ]
        RTG[ ]	/* RoundToGrid */
        INSTR164[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR162[ ]
        RTG[ ]	/* RoundToGrid */
        INSTR164[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR166[ ]
        RTG[ ]	/* RoundToGrid */
        INSTR164[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR162[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
        RTG[ ]	/* RoundToGrid */
        INSTR164[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR166[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
        RTG[ ]	/* RoundToGrid */
        INSTR164[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR162[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
        RTG[ ]	/* RoundToGrid */
        INSTR164[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR166[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
        RTG[ ]	/* RoundToGrid */
        INSTR164[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        INSTR159[ ]
        PUSHB[ ]	/* 1 value pushed */
        3
        MINDEX[ ]	/* MoveXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        INSTR160[ ]
        DIV[ ]	/* Divide */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        INSTR160[ ]
        MUL[ ]	/* Multiply */
        SWAP[ ]	/* SwapTopStack */
        INSTR158[ ]
        ADD[ ]	/* Add */
        ROUND[00]	/* Round */
        INSTR168[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR158[ ]
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        INSTR168[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        INSTR170[ ]
        SFVTPV[ ]	/* SetFVectorToPVector */
        INSTR158[ ]
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        INSTR168[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        INSTR169[ ]
        SFVTPV[ ]	/* SetFVectorToPVector */
        INSTR158[ ]
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        INSTR168[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        INSTR161[ ]
        INSTR158[ ]
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        INSTR168[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        INSTR170[ ]
        SFVTPV[ ]	/* SetFVectorToPVector */
        DUP[ ]	/* DuplicateTopStack */
        INSTR161[ ]
        INSTR158[ ]
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        INSTR168[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        INSTR169[ ]
        SFVTPV[ ]	/* SetFVectorToPVector */
        DUP[ ]	/* DuplicateTopStack */
        INSTR161[ ]
        INSTR158[ ]
        SWAP[ ]	/* SwapTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 1 value pushed */
        1
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        INSTR168[ ]
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 3 values pushed */
        0 0 0
        SVTCA[1]	/* SetFPVectorToAxis */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 3 values pushed */
        0 0 0
        SVTCA[0]	/* SetFPVectorToAxis */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        SWAP[ ]	/* SwapTopStack */
        INSTR147[ ]
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        SDPVTL[0]	/* SetDualPVectorToLine */
        SFVTPV[ ]	/* SetFVectorToPVector */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP2[ ]	/* SetZonePointer2 */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        SCFS[ ]	/* SetCoordFromStackFP */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 3 values pushed */
        0 0 0
        SVTCA[1]	/* SetFPVectorToAxis */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 3 values pushed */
        0 0 0
        SVTCA[0]	/* SetFPVectorToAxis */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        SWAP[ ]	/* SwapTopStack */
        INSTR147[ ]
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        SDPVTL[0]	/* SetDualPVectorToLine */
        SFVTPV[ ]	/* SetFVectorToPVector */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP2[ ]	/* SetZonePointer2 */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        SCFS[ ]	/* SetCoordFromStackFP */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP2[ ]	/* SetZonePointer2 */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        INSTR147[ ]
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP0[ ]	/* SetZonePointer0 */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP1[ ]	/* SetZonePointer1 */
        PUSHB[ ]	/* 4 values pushed */
        1 2 3 4
        ISECT[ ]	/* MovePtToIntersect */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP0[ ]	/* SetZonePointer0 */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP1[ ]	/* SetZonePointer1 */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZP2[ ]	/* SetZonePointer2 */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 8 values pushed */
        1 0 2 0 3 0 4 0
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 8 values pushed */
        1 0 2 0 3 0 4 0
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZP2[ ]	/* SetZonePointer2 */
      ENDF[ ]	/* EndFunctionDefinition */
      NPUSHB[ ]	/* 24 values pushed */
      170 169 168 167 166 165 164 163 162 161 160 159 158 157 156 155 154 153 152 151 150 149 148 147
      IDEF[ ]	/* InstructionDefinition */
      PUSHB[ ]	/* 1 value pushed */
      30
      RS[ ]	/* ReadStore */
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SHPIX[ ]	/* ShiftZoneByPixel */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 0
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 2
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 3
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      PUSHB[ ]	/* 2 values pushed */
      1 4
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SRP0[ ]	/* SetRefPoint0 */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SRP1[ ]	/* SetRefPoint1 */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SRP2[ ]	/* SetRefPoint2 */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      ALIGNPTS[ ]	/* AlignPts */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      GC[0]	/* GetCoordOnPVector */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      MD[0]	/* MeasureDistance */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      MD[1]	/* MeasureDistance */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      MDAP[0]	/* MoveDirectAbsPt */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      MDAP[1]	/* MoveDirectAbsPt */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      MDRP[00000]	/* MoveDirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      MDRP[11100]	/* MoveDirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      MIAP[0]	/* MoveIndirectAbsPt */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      MIAP[1]	/* MoveIndirectAbsPt */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      MSIRP[1]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      SDPVTL[1]	/* SetDualPVectorToLine */
      ENDF[ ]	/* EndFunctionDefinition */
      IDEF[ ]	/* InstructionDefinition */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      INSTR147[ ]
      SWAP[ ]	/* SwapTopStack */
      SDPVTL[0]	/* SetDualPVectorToLine */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      30
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      8
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHW[ ]	/* 1 value pushed */
      68
      SCVTCI[ ]	/* SetCVTCutIn */
      PUSHW[ ]	/* 2 values pushed */
      8 3
      SDS[ ]	/* SetDeltaShiftInGState */
      SDB[ ]	/* SetDeltaBaseInGState */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      31
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      32
      FDEF[ ]	/* FunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      31
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      33
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      MD[0]	/* MeasureDistance */
      ABS[ ]	/* Absolute */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[00]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[00]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      MDAP[1]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      ROUND[01]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      ROUND[01]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      34
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[10]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[10]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      MDAP[1]	/* MoveDirectAbsPt */
      MIRP[11101]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      35
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      128
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      192
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      36
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RDTG[ ]	/* RoundDownToGrid */
      ROUND[01]	/* Round */
      RTG[ ]	/* RoundToGrid */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      37
      FDEF[ ]	/* FunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      36
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      38
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      0
      EIF[ ]	/* EndIf */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      128
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      192
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      256
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      320
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHW[ ]	/* 1 value pushed */
      384
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      384
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      39
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      40
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      9
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 2 values pushed */
      1 1
      INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      PUSHW[ ]	/* 1 value pushed */
      68
      SCVTCI[ ]	/* SetCVTCutIn */
      PUSHW[ ]	/* 2 values pushed */
      9 3
      SDS[ ]	/* SetDeltaShiftInGState */
      SDB[ ]	/* SetDeltaBaseInGState */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      41
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      42
      FDEF[ ]	/* FunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      41
      LOOPCALL[ ]	/* LoopAndCallFunction */
      POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      43
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      MD[0]	/* MeasureDistance */
      ABS[ ]	/* Absolute */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[00]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[00]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      NEG[ ]	/* Negate */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      MDAP[1]	/* MoveDirectAbsPt */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      ROUND[01]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      ROUND[01]	/* Round */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      0
      EQ[ ]	/* Equal */
      IF[ ]	/* If */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      64
      NEG[ ]	/* Negate */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      44
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[10]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      PUSHB[ ]	/* 1 value pushed */
      4
      CINDEX[ ]	/* CopyXToTopStack */
      GC[0]	/* GetCoordOnPVector */
      DUP[ ]	/* DuplicateTopStack */
      ROUND[10]	/* Round */
      SUB[ ]	/* Subtract */
      ABS[ ]	/* Absolute */
      GT[ ]	/* GreaterThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      ROLL[ ]	/* RollTopThreeStack */
      EIF[ ]	/* EndIf */
      MDAP[1]	/* MoveDirectAbsPt */
      MIRP[11101]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      45
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      LTEQ[ ]	/* LessThenOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      128
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      64
      WCVTP[ ]	/* WriteCVTInPixels */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHB[ ]	/* 1 value pushed */
      192
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      192
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      46
      FDEF[ ]	/* FunctionDefinition */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      ROUND[01]	/* Round */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      DUP[ ]	/* DuplicateTopStack */
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RDTG[ ]	/* RoundDownToGrid */
      ROUND[01]	/* Round */
      RTG[ ]	/* RoundToGrid */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 1 value pushed */
      1
      ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      47
      FDEF[ ]	/* FunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      46
      LOOPCALL[ ]	/* LoopAndCallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      48
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      64
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      0
      EIF[ ]	/* EndIf */
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHB[ ]	/* 1 value pushed */
      128
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      192
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      256
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHB[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      320
      ROLL[ ]	/* RollTopThreeStack */
      ROLL[ ]	/* RollTopThreeStack */
      ELSE[ ]	/* Else */
      ROLL[ ]	/* RollTopThreeStack */
      SWAP[ ]	/* SwapTopStack */
      EIF[ ]	/* EndIf */
      DUP[ ]	/* DuplicateTopStack */
      PUSHW[ ]	/* 1 value pushed */
      3
      MINDEX[ ]	/* MoveXToTopStack */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      PUSHW[ ]	/* 1 value pushed */
      384
      LT[ ]	/* LessThan */
      IF[ ]	/* If */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      PUSHW[ ]	/* 1 value pushed */
      384
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      ELSE[ ]	/* Else */
      PUSHB[ ]	/* 1 value pushed */
      3
      CINDEX[ ]	/* CopyXToTopStack */
      RCVT[ ]	/* ReadCVT */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      SWAP[ ]	/* SwapTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      PUSHW[ ]	/* 1 value pushed */
      49
      FDEF[ ]	/* FunctionDefinition */
      MPPEM[ ]	/* MeasurePixelPerEm */
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
      RCVT[ ]	/* ReadCVT */
      WCVTP[ ]	/* WriteCVTInPixels */
      ELSE[ ]	/* Else */
      POP[ ]	/* PopTopStack */
      POP[ ]	/* PopTopStack */
      EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      PUSHW[ ]	/* 1 value pushed */
      40
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 3 values pushed */
      5 15 42
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 8 values pushed */
      18 85 73 57 41 25 0 48
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      19 94 73 57 41 25 0 48
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 8 values pushed */
      14 128 114 88 66 40 0 48
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      15 161 132 103 66 40 0 48
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      16 149 114 88 66 40 0 48
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 8 values pushed */
      17 138 114 88 66 40 0 48
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 3 values pushed */
      20 4 47
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 1 value pushed */
      13
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RDTG[ ]	/* RoundDownToGrid */
      ROUND[01]	/* Round */
      RTG[ ]	/* RoundToGrid */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHW[ ]	/* 1 value pushed */
      30
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 3 values pushed */
      2 3 32
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 8 values pushed */
      4 83 68 53 38 23 0 38
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 8 values pushed */
      3 153 125 97 70 42 0 38
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      PUSHW[ ]	/* 3 values pushed */
      5 4 37
      CALL[ ]	/* CallFunction */
      PUSHW[ ]	/* 1 value pushed */
      2
      DUP[ ]	/* DuplicateTopStack */
      RCVT[ ]	/* ReadCVT */
      RDTG[ ]	/* RoundDownToGrid */
      ROUND[01]	/* Round */
      RTG[ ]	/* RoundToGrid */
      WCVTP[ ]	/* WriteCVTInPixels */
      PUSHB[ ]	/* 3 values pushed */
      30 0 1
      PUSHW[ ]	/* 1 value pushed */
      511
      SCANCTRL[ ]	/* ScanConversionControl */
      SCANTYPE[ ]	/* ScanType */
      WS[ ]	/* WriteStore */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="0"/>
    <cv index="1" value="0"/>
    <cv index="2" value="21"/>
    <cv index="3" value="37"/>
    <cv index="4" value="68"/>
    <cv index="5" value="-91"/>
    <cv index="6" value="29"/>
    <cv index="7" value="-238"/>
    <cv index="8" value="0"/>
    <cv index="9" value="501"/>
    <cv index="10" value="0"/>
    <cv index="11" value="808"/>
    <cv index="12" value="40"/>
    <cv index="13" value="21"/>
    <cv index="14" value="44"/>
    <cv index="15" value="35"/>
    <cv index="16" value="38"/>
    <cv index="17" value="41"/>
    <cv index="18" value="67"/>
    <cv index="19" value="60"/>
    <cv index="20" value="0"/>
    <cv index="21" value="9"/>
    <cv index="22" value="-237"/>
    <cv index="23" value="0"/>
    <cv index="24" value="481"/>
    <cv index="25" value="15"/>
    <cv index="26" value="755"/>
    <cv index="27" value="30"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef"/><!-- contains no outline data -->

    <TTGlyph name="a" xMin="44" yMin="-9" xMax="478" yMax="495">
      <contour>
        <pt x="327" y="252" on="1"/>
        <pt x="217" y="219" on="0"/>
        <pt x="108" y="162" on="0"/>
        <pt x="108" y="118" on="1"/>
        <pt x="108" y="72" on="0"/>
        <pt x="155" y="39" on="0"/>
        <pt x="197" y="39" on="1"/>
        <pt x="234" y="39" on="0"/>
        <pt x="302" y="79" on="0"/>
        <pt x="327" y="106" on="1"/>
      </contour>
      <contour>
        <pt x="478" y="46" on="1"/>
        <pt x="456" y="25" on="0"/>
        <pt x="407" y="-9" on="0"/>
        <pt x="382" y="-9" on="1"/>
        <pt x="358" y="-9" on="0"/>
        <pt x="329" y="35" on="0"/>
        <pt x="327" y="77" on="1"/>
        <pt x="290" y="38" on="0"/>
        <pt x="200" y="-9" on="0"/>
        <pt x="151" y="-9" on="1"/>
        <pt x="106" y="-9" on="0"/>
        <pt x="44" y="50" on="0"/>
        <pt x="46" y="95" on="1"/>
        <pt x="47" y="132" on="0"/>
        <pt x="90" y="185" on="0"/>
        <pt x="128" y="205" on="1"/>
        <pt x="165" y="225" on="0"/>
        <pt x="267" y="259" on="0"/>
        <pt x="327" y="278" on="1"/>
        <pt x="327" y="347" on="1"/>
        <pt x="327" y="391" on="0"/>
        <pt x="286" y="448" on="0"/>
        <pt x="227" y="448" on="1"/>
        <pt x="185" y="448" on="0"/>
        <pt x="120" y="399" on="0"/>
        <pt x="119" y="364" on="1"/>
        <pt x="119" y="340" on="0"/>
        <pt x="100" y="318" on="0"/>
        <pt x="86" y="318" on="1"/>
        <pt x="74" y="318" on="0"/>
        <pt x="61" y="338" on="0"/>
        <pt x="61" y="354" on="1"/>
        <pt x="61" y="381" on="0"/>
        <pt x="112" y="431" on="0"/>
        <pt x="169" y="461" on="1"/>
        <pt x="202" y="479" on="0"/>
        <pt x="245" y="495" on="0"/>
        <pt x="269" y="495" on="1"/>
        <pt x="317" y="495" on="0"/>
        <pt x="388" y="437" on="0"/>
        <pt x="388" y="382" on="1"/>
        <pt x="388" y="109" on="1"/>
        <pt x="388" y="53" on="0"/>
        <pt x="437" y="37" on="0"/>
        <pt x="475" y="63" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            47
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            47 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            13 20
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            19
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            19 20
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          0 13 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          6
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          7 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199
          6 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          214 6 230 6 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 3 values pushed */
          16 13 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          47
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          32
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 32 233 32 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 32 24 32 40 32 56 32 72 32 88 32 104 32 120 32 136 32 152 32 168 32 184 32 200
          32 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 3 values pushed */
          54 13 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          3 22 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          50 29 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          6 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 134 3 150 3 166 3 182 3 198
          3 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          213 3 229 3 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 3 values pushed */
          41 22 3
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          35
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="b" xMin="40" yMin="-9" xMax="529" yMax="818">
      <contour>
        <pt x="174" y="818" on="1"/>
        <pt x="171" y="791" on="0"/>
        <pt x="169" y="730" on="0"/>
        <pt x="169" y="706" on="1"/>
        <pt x="169" y="403" on="1"/>
        <pt x="185" y="418" on="0"/>
        <pt x="228" y="450" on="0"/>
        <pt x="251" y="464" on="1"/>
        <pt x="274" y="478" on="0"/>
        <pt x="321" y="496" on="0"/>
        <pt x="341" y="496" on="1"/>
        <pt x="383" y="496" on="0"/>
        <pt x="453" y="458" on="0"/>
        <pt x="477" y="427" on="1"/>
        <pt x="502" y="396" on="0"/>
        <pt x="529" y="315" on="0"/>
        <pt x="529" y="272" on="1"/>
        <pt x="529" y="215" on="0"/>
        <pt x="492" y="113" on="0"/>
        <pt x="460" y="74" on="1"/>
        <pt x="427" y="36" on="0"/>
        <pt x="338" y="-9" on="0"/>
        <pt x="285" y="-9" on="1"/>
        <pt x="237" y="-9" on="0"/>
        <pt x="155" y="20" on="0"/>
        <pt x="133" y="33" on="1"/>
        <pt x="109" y="5" on="1"/>
        <pt x="91" y="13" on="1"/>
        <pt x="98" y="60" on="0"/>
        <pt x="108" y="157" on="0"/>
        <pt x="108" y="206" on="1"/>
        <pt x="108" y="668" on="1"/>
        <pt x="108" y="694" on="0"/>
        <pt x="103" y="725" on="0"/>
        <pt x="95" y="734" on="1"/>
        <pt x="88" y="742" on="0"/>
        <pt x="61" y="746" on="0"/>
        <pt x="40" y="746" on="1"/>
        <pt x="40" y="766" on="1"/>
        <pt x="72" y="772" on="0"/>
        <pt x="133" y="797" on="0"/>
        <pt x="156" y="818" on="1"/>
      </contour>
      <contour>
        <pt x="169" y="127" on="1"/>
        <pt x="169" y="80" on="0"/>
        <pt x="227" y="21" on="0"/>
        <pt x="290" y="21" on="1"/>
        <pt x="337" y="21" on="0"/>
        <pt x="405" y="58" on="0"/>
        <pt x="426" y="87" on="1"/>
        <pt x="448" y="117" on="0"/>
        <pt x="468" y="190" on="0"/>
        <pt x="468" y="227" on="1"/>
        <pt x="468" y="321" on="0"/>
        <pt x="385" y="445" on="0"/>
        <pt x="314" y="445" on="1"/>
        <pt x="277" y="445" on="0"/>
        <pt x="196" y="395" on="0"/>
        <pt x="169" y="367" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            38
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            38 26
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            10 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            22
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            22 20
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          4 22 38
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          37
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          7 45 23 45 39 45 55 45 71 45 87 45 103 45 119 45 135 45 151 45 167 45 183 45 199
          45 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          214 45 230 45 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          54
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 54 233 54 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 54 24 54 40 54 56 54 72 54 88 54 104 54 120 54 136 54 152 54 168 54 184 54 200
          54 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          58
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          218 51 234 51 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          9 51 25 51 41 51 57 51 73 51 89 51 105 51 121 51 137 51 153 51 169 51 185 51 201
          51 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          16
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 3 values pushed */
          4 30 16
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="c" xMin="42" yMin="-9" xMax="444" yMax="496">
      <contour>
        <pt x="444" y="102" on="1"/>
        <pt x="404" y="54" on="0"/>
        <pt x="301" y="-9" on="0"/>
        <pt x="244" y="-9" on="1"/>
        <pt x="204" y="-9" on="0"/>
        <pt x="131" y="29" on="0"/>
        <pt x="103" y="61" on="1"/>
        <pt x="75" y="92" on="0"/>
        <pt x="42" y="174" on="0"/>
        <pt x="42" y="217" on="1"/>
        <pt x="42" y="275" on="0"/>
        <pt x="80" y="377" on="0"/>
        <pt x="115" y="415" on="1"/>
        <pt x="149" y="452" on="0"/>
        <pt x="242" y="496" on="0"/>
        <pt x="297" y="496" on="1"/>
        <pt x="316" y="496" on="0"/>
        <pt x="362" y="488" on="0"/>
        <pt x="382" y="479" on="1"/>
        <pt x="402" y="471" on="0"/>
        <pt x="429" y="443" on="0"/>
        <pt x="429" y="423" on="1"/>
        <pt x="429" y="405" on="0"/>
        <pt x="414" y="381" on="0"/>
        <pt x="404" y="381" on="1"/>
        <pt x="395" y="381" on="0"/>
        <pt x="374" y="396" on="0"/>
        <pt x="360" y="420" on="1"/>
        <pt x="350" y="438" on="0"/>
        <pt x="302" y="464" on="0"/>
        <pt x="257" y="464" on="1"/>
        <pt x="218" y="464" on="0"/>
        <pt x="159" y="425" on="0"/>
        <pt x="140" y="395" on="1"/>
        <pt x="121" y="366" on="0"/>
        <pt x="102" y="296" on="0"/>
        <pt x="102" y="266" on="1"/>
        <pt x="102" y="224" on="0"/>
        <pt x="123" y="146" on="0"/>
        <pt x="146" y="117" on="1"/>
        <pt x="169" y="87" on="0"/>
        <pt x="239" y="52" on="0"/>
        <pt x="287" y="52" on="1"/>
        <pt x="333" y="52" on="0"/>
        <pt x="407" y="90" on="0"/>
        <pt x="431" y="113" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            15 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            3
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            3 20
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          30
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 30 233 30 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 30 24 30 40 30 56 30 72 30 88 30 104 30 120 30 136 30 152 30 168 30 184 30 200
          30 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          7 42 23 42 39 42 55 42 71 42 87 42 103 42 119 42 135 42 151 42 167 42 183 42 199
          42 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          214 42 230 42 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          36 9 43
          CALL[ ]	/* CallFunction */
          NPUSHW[ ]	/* 27 values pushed */
          6 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 150 36 166 36 182 36 198
          36 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          213 36 229 36 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="d" xMin="46" yMin="-16" xMax="545" yMax="818">
      <contour>
        <pt x="413" y="364" on="1"/>
        <pt x="413" y="393" on="0"/>
        <pt x="387" y="432" on="0"/>
        <pt x="369" y="443" on="1"/>
        <pt x="350" y="454" on="0"/>
        <pt x="306" y="464" on="0"/>
        <pt x="287" y="464" on="1"/>
        <pt x="255" y="464" on="0"/>
        <pt x="192" y="437" on="0"/>
        <pt x="168" y="410" on="1"/>
        <pt x="143" y="383" on="0"/>
        <pt x="113" y="302" on="0"/>
        <pt x="113" y="248" on="1"/>
        <pt x="113" y="160" on="0"/>
        <pt x="204" y="46" on="0"/>
        <pt x="286" y="46" on="1"/>
        <pt x="299" y="46" on="0"/>
        <pt x="343" y="57" on="0"/>
        <pt x="363" y="67" on="1"/>
        <pt x="383" y="77" on="0"/>
        <pt x="413" y="103" on="0"/>
        <pt x="413" y="118" on="1"/>
      </contour>
      <contour>
        <pt x="413" y="668" on="1"/>
        <pt x="413" y="694" on="0"/>
        <pt x="408" y="725" on="0"/>
        <pt x="400" y="734" on="1"/>
        <pt x="393" y="742" on="0"/>
        <pt x="366" y="746" on="0"/>
        <pt x="345" y="746" on="1"/>
        <pt x="345" y="766" on="1"/>
        <pt x="377" y="772" on="0"/>
        <pt x="438" y="797" on="0"/>
        <pt x="461" y="818" on="1"/>
        <pt x="479" y="818" on="1"/>
        <pt x="476" y="791" on="0"/>
        <pt x="474" y="730" on="0"/>
        <pt x="474" y="706" on="1"/>
        <pt x="474" y="99" on="1"/>
        <pt x="474" y="65" on="0"/>
        <pt x="509" y="52" on="0"/>
        <pt x="545" y="54" on="1"/>
        <pt x="545" y="34" on="1"/>
        <pt x="526" y="28" on="0"/>
        <pt x="455" y="0" on="0"/>
        <pt x="425" y="-13" on="1"/>
        <pt x="419" y="-16" on="0"/>
        <pt x="413" y="-11" on="0"/>
        <pt x="413" y="-5" on="1"/>
        <pt x="413" y="70" on="1"/>
        <pt x="372" y="31" on="0"/>
        <pt x="285" y="-8" on="0"/>
        <pt x="243" y="-8" on="1"/>
        <pt x="199" y="-8" on="0"/>
        <pt x="126" y="31" on="0"/>
        <pt x="100" y="64" on="1"/>
        <pt x="74" y="96" on="0"/>
        <pt x="46" y="181" on="0"/>
        <pt x="46" y="226" on="1"/>
        <pt x="46" y="280" on="0"/>
        <pt x="86" y="378" on="0"/>
        <pt x="121" y="415" on="1"/>
        <pt x="155" y="452" on="0"/>
        <pt x="247" y="496" on="0"/>
        <pt x="299" y="496" on="1"/>
        <pt x="323" y="496" on="0"/>
        <pt x="376" y="485" on="0"/>
        <pt x="413" y="468" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            29 26
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            63
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            63 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            44
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            44 20
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            47
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            47 20
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            51
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            51 20
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          40 41 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          63
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          6
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 6 233 6 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 6 24 6 40 6 56 6 72 6 88 6 104 6 120 6 136 6 152 6 168 6 184 6 200
          6 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          15
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          7 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199
          15 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          214 15 230 15 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 3 values pushed */
          48 44 29
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 3 values pushed */
          66 63 6
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          67
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          21
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          67
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          12
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198
          12 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          213 12 229 12 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          37
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          33
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          33
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 3 values pushed */
          48 57 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 3 values pushed */
          66 57 33
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="e" xMin="41" yMin="-9" xMax="424" yMax="496">
      <contour>
        <pt x="102" y="304" on="1"/>
        <pt x="99" y="289" on="0"/>
        <pt x="99" y="255" on="0"/>
        <pt x="101" y="228" on="1"/>
        <pt x="106" y="152" on="0"/>
        <pt x="190" y="49" on="0"/>
        <pt x="263" y="49" on="1"/>
        <pt x="313" y="49" on="0"/>
        <pt x="386" y="88" on="0"/>
        <pt x="410" y="117" on="1"/>
        <pt x="424" y="108" on="1"/>
        <pt x="396" y="58" on="0"/>
        <pt x="301" y="-9" on="0"/>
        <pt x="242" y="-9" on="1"/>
        <pt x="199" y="-9" on="0"/>
        <pt x="126" y="27" on="0"/>
        <pt x="99" y="59" on="1"/>
        <pt x="72" y="91" on="0"/>
        <pt x="41" y="177" on="0"/>
        <pt x="41" y="228" on="1"/>
        <pt x="41" y="291" on="0"/>
        <pt x="73" y="391" on="0"/>
        <pt x="100" y="425" on="1"/>
        <pt x="128" y="460" on="0"/>
        <pt x="203" y="496" on="0"/>
        <pt x="246" y="496" on="1"/>
        <pt x="276" y="496" on="0"/>
        <pt x="336" y="476" on="0"/>
        <pt x="360" y="456" on="1"/>
        <pt x="384" y="435" on="0"/>
        <pt x="414" y="372" on="0"/>
        <pt x="415" y="329" on="1"/>
        <pt x="415" y="317" on="0"/>
        <pt x="409" y="306" on="0"/>
        <pt x="397" y="304" on="1"/>
      </contour>
      <contour>
        <pt x="316" y="336" on="1"/>
        <pt x="334" y="336" on="0"/>
        <pt x="350" y="347" on="0"/>
        <pt x="350" y="362" on="1"/>
        <pt x="350" y="378" on="0"/>
        <pt x="335" y="414" on="0"/>
        <pt x="322" y="429" on="1"/>
        <pt x="308" y="444" on="0"/>
        <pt x="268" y="464" on="0"/>
        <pt x="242" y="464" on="1"/>
        <pt x="185" y="464" on="0"/>
        <pt x="116" y="393" on="0"/>
        <pt x="105" y="336" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            25
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            25 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            13
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            13 20
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          47 0 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          6
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          7 6 23 6 39 6 55 6 71 6 87 6 103 6 119 6 135 6 151 6 167 6 183 6 199
          6 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          214 6 230 6 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 44 233 44 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 44 24 44 40 44 56 44 72 44 88 44 104 44 120 44 136 44 152 44 168 44 184 44 200
          44 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          3
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          6 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 134 3 150 3 166 3 182 3 198
          3 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          213 3 229 3 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 5 values pushed */
          218 38 234 38 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          9 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201
          38 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          31
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          9
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          47
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          47
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="f" xMin="36" yMin="8" xMax="374" yMax="824">
      <contour>
        <pt x="319" y="468" on="1"/>
        <pt x="319" y="424" on="1"/>
        <pt x="183" y="424" on="1"/>
        <pt x="183" y="101" on="1"/>
        <pt x="183" y="57" on="0"/>
        <pt x="229" y="33" on="0"/>
        <pt x="282" y="33" on="1"/>
        <pt x="282" y="8" on="1"/>
        <pt x="256" y="9" on="0"/>
        <pt x="191" y="10" on="0"/>
        <pt x="157" y="10" on="1"/>
        <pt x="124" y="10" on="0"/>
        <pt x="60" y="9" on="0"/>
        <pt x="36" y="8" on="1"/>
        <pt x="36" y="33" on="1"/>
        <pt x="81" y="33" on="0"/>
        <pt x="122" y="65" on="0"/>
        <pt x="122" y="103" on="1"/>
        <pt x="122" y="424" on="1"/>
        <pt x="46" y="424" on="1"/>
        <pt x="46" y="444" on="1"/>
        <pt x="72" y="447" on="0"/>
        <pt x="122" y="474" on="0"/>
        <pt x="122" y="509" on="1"/>
        <pt x="122" y="536" on="0"/>
        <pt x="132" y="604" on="0"/>
        <pt x="143" y="638" on="1"/>
        <pt x="153" y="671" on="0"/>
        <pt x="184" y="732" on="0"/>
        <pt x="205" y="752" on="1"/>
        <pt x="244" y="792" on="0"/>
        <pt x="313" y="824" on="0"/>
        <pt x="325" y="824" on="1"/>
        <pt x="348" y="824" on="0"/>
        <pt x="374" y="803" on="0"/>
        <pt x="374" y="782" on="1"/>
        <pt x="374" y="764" on="0"/>
        <pt x="345" y="746" on="0"/>
        <pt x="334" y="746" on="1"/>
        <pt x="326" y="746" on="0"/>
        <pt x="316" y="749" on="0"/>
        <pt x="309" y="751" on="1"/>
        <pt x="303" y="753" on="0"/>
        <pt x="283" y="757" on="0"/>
        <pt x="267" y="757" on="1"/>
        <pt x="244" y="757" on="0"/>
        <pt x="213" y="731" on="0"/>
        <pt x="202" y="712" on="1"/>
        <pt x="192" y="693" on="0"/>
        <pt x="183" y="651" on="0"/>
        <pt x="183" y="635" on="1"/>
        <pt x="183" y="468" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          14 10 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          32 38 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          0 1 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          6
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          10
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          1
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          3 17 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          17
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="g" xMin="26" yMin="-237" xMax="489" yMax="496">
      <contour>
        <pt x="487" y="421" on="1"/>
        <pt x="382" y="425" on="1"/>
        <pt x="392" y="413" on="0"/>
        <pt x="409" y="359" on="0"/>
        <pt x="409" y="340" on="1"/>
        <pt x="409" y="261" on="0"/>
        <pt x="306" y="176" on="0"/>
        <pt x="222" y="176" on="1"/>
        <pt x="210" y="176" on="0"/>
        <pt x="181" y="177" on="0"/>
        <pt x="166" y="181" on="1"/>
        <pt x="154" y="172" on="0"/>
        <pt x="137" y="159" on="0"/>
        <pt x="132" y="153" on="1"/>
        <pt x="126" y="147" on="0"/>
        <pt x="122" y="133" on="0"/>
        <pt x="122" y="124" on="1"/>
        <pt x="122" y="118" on="0"/>
        <pt x="124" y="99" on="0"/>
        <pt x="132" y="90" on="1"/>
        <pt x="140" y="81" on="0"/>
        <pt x="174" y="68" on="0"/>
        <pt x="206" y="68" on="1"/>
        <pt x="225" y="68" on="0"/>
        <pt x="262" y="67" on="0"/>
        <pt x="279" y="67" on="1"/>
        <pt x="297" y="67" on="0"/>
        <pt x="329" y="67" on="0"/>
        <pt x="346" y="67" on="1"/>
        <pt x="409" y="67" on="0"/>
        <pt x="489" y="11" on="0"/>
        <pt x="489" y="-50" on="1"/>
        <pt x="489" y="-87" on="0"/>
        <pt x="447" y="-154" on="0"/>
        <pt x="410" y="-180" on="1"/>
        <pt x="374" y="-206" on="0"/>
        <pt x="274" y="-237" on="0"/>
        <pt x="217" y="-237" on="1"/>
        <pt x="169" y="-237" on="0"/>
        <pt x="97" y="-213" on="0"/>
        <pt x="73" y="-195" on="1"/>
        <pt x="49" y="-177" on="0"/>
        <pt x="26" y="-133" on="0"/>
        <pt x="26" y="-110" on="1"/>
        <pt x="26" y="-58" on="0"/>
        <pt x="99" y="6" on="0"/>
        <pt x="143" y="19" on="1"/>
        <pt x="89" y="31" on="0"/>
        <pt x="54" y="101" on="0"/>
        <pt x="65" y="139" on="1"/>
        <pt x="86" y="151" on="0"/>
        <pt x="130" y="182" on="0"/>
        <pt x="139" y="191" on="1"/>
        <pt x="102" y="210" on="0"/>
        <pt x="49" y="277" on="0"/>
        <pt x="49" y="332" on="1"/>
        <pt x="49" y="402" on="0"/>
        <pt x="146" y="496" on="0"/>
        <pt x="239" y="496" on="1"/>
        <pt x="260" y="496" on="0"/>
        <pt x="310" y="487" on="0"/>
        <pt x="330" y="482" on="1"/>
        <pt x="351" y="474" on="0"/>
        <pt x="401" y="463" on="0"/>
        <pt x="437" y="463" on="1"/>
        <pt x="444" y="463" on="0"/>
        <pt x="454" y="462" on="0"/>
        <pt x="459" y="463" on="1"/>
        <pt x="464" y="463" on="0"/>
        <pt x="476" y="464" on="0"/>
        <pt x="487" y="466" on="1"/>
      </contour>
      <contour>
        <pt x="80" y="-95" on="1"/>
        <pt x="80" y="-149" on="0"/>
        <pt x="172" y="-204" on="0"/>
        <pt x="233" y="-204" on="1"/>
        <pt x="274" y="-204" on="0"/>
        <pt x="347" y="-186" on="0"/>
        <pt x="375" y="-170" on="1"/>
        <pt x="402" y="-154" on="0"/>
        <pt x="434" y="-110" on="0"/>
        <pt x="434" y="-82" on="1"/>
        <pt x="434" y="-57" on="0"/>
        <pt x="407" y="-22" on="0"/>
        <pt x="385" y="-12" on="1"/>
        <pt x="362" y="-1" on="0"/>
        <pt x="303" y="8" on="0"/>
        <pt x="270" y="8" on="1"/>
        <pt x="177" y="8" on="0"/>
        <pt x="80" y="-49" on="0"/>
      </contour>
      <contour>
        <pt x="118" y="343" on="1"/>
        <pt x="118" y="286" on="0"/>
        <pt x="174" y="202" on="0"/>
        <pt x="230" y="202" on="1"/>
        <pt x="294" y="202" on="0"/>
        <pt x="347" y="278" on="0"/>
        <pt x="347" y="329" on="1"/>
        <pt x="347" y="353" on="0"/>
        <pt x="333" y="404" on="0"/>
        <pt x="319" y="424" on="1"/>
        <pt x="305" y="444" on="0"/>
        <pt x="259" y="470" on="0"/>
        <pt x="227" y="470" on="1"/>
        <pt x="198" y="470" on="0"/>
        <pt x="156" y="446" on="0"/>
        <pt x="143" y="428" on="1"/>
        <pt x="130" y="409" on="0"/>
        <pt x="118" y="364" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            58
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            58 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            37
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            37 22
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          25 86 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          92 7 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          58
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          64
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 64 233 64 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 64 24 64 40 64 56 64 72 64 88 64 104 64 120 64 136 64 152 64 168 64 184 64 200
          64 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          98
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 3 values pushed */
          1 64 98
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          22
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          28
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 3 values pushed */
          46 86 25
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 3 values pushed */
          52 7 92
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          64
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          67
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          67
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          70
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          70
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          37
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          74
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 27 values pushed */
          7 74 23 74 39 74 55 74 71 74 87 74 103 74 119 74 135 74 151 74 167 74 183 74 199
          74 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          214 74 230 74 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          70
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          101
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          71 43 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          4 95 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          31 80 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          NPUSHW[ ]	/* 5 values pushed */
          218 95 234 95 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          9 95 25 95 41 95 57 95 73 95 89 95 105 95 121 95 137 95 153 95 169 95 185 95 201
          95 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 3 values pushed */
          1 95 4
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          NPUSHW[ ]	/* 27 values pushed */
          6 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 166 71 182 71 198
          71 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          213 71 229 71 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 3 values pushed */
          55 43 71
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          55
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          89
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          16
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 3 values pushed */
          46 43 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 3 values pushed */
          52 43 31
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          NPUSHW[ ]	/* 5 values pushed */
          218 80 234 80 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          9 80 25 80 41 80 57 80 73 80 89 80 105 80 121 80 137 80 153 80 169 80 185 80 201
          80 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="h" xMin="30" yMin="8" xMax="545" yMax="818">
      <contour>
        <pt x="101" y="668" on="1"/>
        <pt x="101" y="694" on="0"/>
        <pt x="96" y="725" on="0"/>
        <pt x="89" y="734" on="1"/>
        <pt x="82" y="742" on="0"/>
        <pt x="55" y="746" on="0"/>
        <pt x="34" y="746" on="1"/>
        <pt x="34" y="766" on="1"/>
        <pt x="66" y="772" on="0"/>
        <pt x="127" y="797" on="0"/>
        <pt x="150" y="818" on="1"/>
        <pt x="168" y="818" on="1"/>
        <pt x="165" y="791" on="0"/>
        <pt x="163" y="730" on="0"/>
        <pt x="163" y="706" on="1"/>
        <pt x="163" y="386" on="1"/>
        <pt x="178" y="403" on="0"/>
        <pt x="217" y="441" on="0"/>
        <pt x="239" y="458" on="1"/>
        <pt x="262" y="474" on="0"/>
        <pt x="313" y="496" on="0"/>
        <pt x="340" y="496" on="1"/>
        <pt x="402" y="496" on="0"/>
        <pt x="472" y="404" on="0"/>
        <pt x="472" y="335" on="1"/>
        <pt x="472" y="111" on="1"/>
        <pt x="472" y="88" on="0"/>
        <pt x="475" y="58" on="0"/>
        <pt x="482" y="49" on="1"/>
        <pt x="489" y="40" on="0"/>
        <pt x="519" y="33" on="0"/>
        <pt x="545" y="33" on="1"/>
        <pt x="545" y="8" on="1"/>
        <pt x="531" y="8" on="0"/>
        <pt x="506" y="8" on="0"/>
        <pt x="494" y="9" on="1"/>
        <pt x="482" y="9" on="0"/>
        <pt x="456" y="10" on="0"/>
        <pt x="441" y="10" on="1"/>
        <pt x="426" y="10" on="0"/>
        <pt x="401" y="9" on="0"/>
        <pt x="389" y="9" on="1"/>
        <pt x="377" y="9" on="0"/>
        <pt x="352" y="8" on="0"/>
        <pt x="338" y="8" on="1"/>
        <pt x="338" y="33" on="1"/>
        <pt x="360" y="33" on="0"/>
        <pt x="389" y="37" on="0"/>
        <pt x="397" y="45" on="1"/>
        <pt x="405" y="53" on="0"/>
        <pt x="411" y="84" on="0"/>
        <pt x="411" y="111" on="1"/>
        <pt x="411" y="273" on="1"/>
        <pt x="411" y="322" on="0"/>
        <pt x="400" y="385" on="0"/>
        <pt x="387" y="404" on="1"/>
        <pt x="375" y="423" on="0"/>
        <pt x="334" y="438" on="0"/>
        <pt x="304" y="438" on="1"/>
        <pt x="267" y="438" on="0"/>
        <pt x="187" y="383" on="0"/>
        <pt x="163" y="350" on="1"/>
        <pt x="163" y="111" on="1"/>
        <pt x="163" y="64" on="0"/>
        <pt x="188" y="33" on="0"/>
        <pt x="236" y="33" on="1"/>
        <pt x="236" y="8" on="1"/>
        <pt x="221" y="8" on="0"/>
        <pt x="197" y="8" on="0"/>
        <pt x="185" y="9" on="1"/>
        <pt x="173" y="9" on="0"/>
        <pt x="148" y="10" on="0"/>
        <pt x="134" y="10" on="1"/>
        <pt x="119" y="10" on="0"/>
        <pt x="94" y="9" on="0"/>
        <pt x="82" y="9" on="1"/>
        <pt x="69" y="9" on="0"/>
        <pt x="44" y="8" on="0"/>
        <pt x="30" y="8" on="1"/>
        <pt x="30" y="33" on="1"/>
        <pt x="75" y="33" on="0"/>
        <pt x="101" y="63" on="0"/>
        <pt x="101" y="111" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            7 26
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            21
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            21 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          31 32 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          6
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          35
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          35
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          38
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          21
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 58 233 58 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 58 24 58 40 58 56 58 72 58 88 58 104 58 120 58 136 58 152 58 168 58 184 58 200
          58 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          65
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          66
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          69
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          72
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          75
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          75
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          78
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          31
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          79
          MDRP[10000]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          83
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          83
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          25
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          61
          MDRP[10000]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="i" xMin="36" yMin="8" xMax="241" yMax="764">
      <contour>
        <pt x="169" y="100" on="1"/>
        <pt x="169" y="57" on="0"/>
        <pt x="197" y="33" on="0"/>
        <pt x="241" y="33" on="1"/>
        <pt x="241" y="8" on="1"/>
        <pt x="227" y="8" on="0"/>
        <pt x="203" y="8" on="0"/>
        <pt x="191" y="9" on="1"/>
        <pt x="179" y="9" on="0"/>
        <pt x="154" y="10" on="0"/>
        <pt x="140" y="10" on="1"/>
        <pt x="125" y="10" on="0"/>
        <pt x="100" y="9" on="0"/>
        <pt x="88" y="9" on="1"/>
        <pt x="75" y="9" on="0"/>
        <pt x="50" y="8" on="0"/>
        <pt x="36" y="8" on="1"/>
        <pt x="36" y="33" on="1"/>
        <pt x="80" y="33" on="0"/>
        <pt x="108" y="57" on="0"/>
        <pt x="108" y="100" on="1"/>
        <pt x="108" y="345" on="1"/>
        <pt x="108" y="372" on="0"/>
        <pt x="104" y="404" on="0"/>
        <pt x="98" y="413" on="1"/>
        <pt x="92" y="422" on="0"/>
        <pt x="68" y="428" on="0"/>
        <pt x="47" y="428" on="1"/>
        <pt x="47" y="449" on="1"/>
        <pt x="79" y="454" on="0"/>
        <pt x="132" y="474" on="0"/>
        <pt x="155" y="495" on="1"/>
        <pt x="173" y="495" on="1"/>
        <pt x="170" y="468" on="0"/>
        <pt x="169" y="407" on="0"/>
        <pt x="169" y="383" on="1"/>
      </contour>
      <contour>
        <pt x="87" y="714" on="1"/>
        <pt x="87" y="734" on="0"/>
        <pt x="116" y="764" on="0"/>
        <pt x="136" y="764" on="1"/>
        <pt x="156" y="764" on="0"/>
        <pt x="186" y="734" on="0"/>
        <pt x="186" y="714" on="1"/>
        <pt x="186" y="694" on="0"/>
        <pt x="156" y="665" on="0"/>
        <pt x="136" y="665" on="1"/>
        <pt x="116" y="665" on="0"/>
        <pt x="87" y="694" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            31
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            31 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            39
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            39 26
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          3 4 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          28 27 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          7
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          7
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          13
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          16
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          3
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          39
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 45 233 45 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200
          45 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          42 36 43
          CALL[ ]	/* CallFunction */
          NPUSHW[ ]	/* 27 values pushed */
          6 42 22 42 38 42 54 42 70 42 86 42 102 42 118 42 134 42 150 42 166 42 182 42 198
          42 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 5 values pushed */
          213 42 229 42 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 3 values pushed */
          20 36 42
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          32
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="j" xMin="16" yMin="-231" xMax="188" yMax="764">
      <contour>
        <pt x="108" y="345" on="1"/>
        <pt x="108" y="372" on="0"/>
        <pt x="104" y="404" on="0"/>
        <pt x="98" y="413" on="1"/>
        <pt x="92" y="422" on="0"/>
        <pt x="68" y="428" on="0"/>
        <pt x="47" y="428" on="1"/>
        <pt x="47" y="449" on="1"/>
        <pt x="79" y="454" on="0"/>
        <pt x="132" y="474" on="0"/>
        <pt x="155" y="495" on="1"/>
        <pt x="173" y="495" on="1"/>
        <pt x="170" y="468" on="0"/>
        <pt x="169" y="407" on="0"/>
        <pt x="169" y="383" on="1"/>
        <pt x="169" y="-24" on="1"/>
        <pt x="169" y="-74" on="0"/>
        <pt x="145" y="-145" on="0"/>
        <pt x="125" y="-168" on="1"/>
        <pt x="105" y="-193" on="0"/>
        <pt x="52" y="-222" on="0"/>
        <pt x="23" y="-231" on="1"/>
        <pt x="16" y="-213" on="1"/>
        <pt x="70" y="-186" on="0"/>
        <pt x="108" y="-106" on="0"/>
        <pt x="108" y="-35" on="1"/>
      </contour>
      <contour>
        <pt x="89" y="714" on="1"/>
        <pt x="89" y="734" on="0"/>
        <pt x="118" y="764" on="0"/>
        <pt x="138" y="764" on="1"/>
        <pt x="158" y="764" on="0"/>
        <pt x="188" y="734" on="0"/>
        <pt x="188" y="714" on="1"/>
        <pt x="188" y="694" on="0"/>
        <pt x="158" y="665" on="0"/>
        <pt x="138" y="665" on="1"/>
        <pt x="118" y="665" on="0"/>
        <pt x="89" y="694" on="0"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            10 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            29
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            29 26
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          7 6 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          29
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          35
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 35 233 35 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 35 24 35 40 35 56 35 72 35 88 35 104 35 120 35 136 35 152 35 168 35 184 35 200
          35 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          32 26 43
          CALL[ ]	/* CallFunction */
          NPUSHW[ ]	/* 5 values pushed */
          218 26 234 26 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          9 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201
          26 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 3 values pushed */
          0 26 32
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="k" xMin="30" yMin="8" xMax="545" yMax="818">
      <contour>
        <pt x="329" y="381" on="1"/>
        <pt x="375" y="420" on="0"/>
        <pt x="373" y="455" on="0"/>
        <pt x="327" y="454" on="1"/>
        <pt x="327" y="481" on="1"/>
        <pt x="341" y="479" on="0"/>
        <pt x="394" y="478" on="0"/>
        <pt x="423" y="478" on="1"/>
        <pt x="452" y="478" on="0"/>
        <pt x="503" y="479" on="0"/>
        <pt x="516" y="481" on="1"/>
        <pt x="516" y="454" on="1"/>
        <pt x="495" y="454" on="0"/>
        <pt x="462" y="444" on="0"/>
        <pt x="447" y="436" on="1"/>
        <pt x="431" y="428" on="0"/>
        <pt x="402" y="407" on="0"/>
        <pt x="387" y="395" on="1"/>
        <pt x="244" y="277" on="1"/>
        <pt x="424" y="80" on="1"/>
        <pt x="455" y="46" on="0"/>
        <pt x="513" y="32" on="0"/>
        <pt x="545" y="31" on="1"/>
        <pt x="545" y="8" on="1"/>
        <pt x="533" y="8" on="0"/>
        <pt x="497" y="9" on="0"/>
        <pt x="477" y="9" on="1"/>
        <pt x="458" y="9" on="0"/>
        <pt x="421" y="8" on="0"/>
        <pt x="411" y="8" on="1"/>
        <pt x="406" y="13" on="0"/>
        <pt x="397" y="24" on="0"/>
        <pt x="392" y="29" on="1"/>
        <pt x="388" y="34" on="0"/>
        <pt x="378" y="45" on="0"/>
        <pt x="374" y="51" on="1"/>
        <pt x="203" y="243" on="1"/>
        <pt x="163" y="210" on="1"/>
        <pt x="163" y="110" on="1"/>
        <pt x="163" y="59" on="0"/>
        <pt x="191" y="33" on="0"/>
        <pt x="236" y="33" on="1"/>
        <pt x="236" y="8" on="1"/>
        <pt x="220" y="9" on="0"/>
        <pt x="163" y="10" on="0"/>
        <pt x="133" y="10" on="1"/>
        <pt x="102" y="10" on="0"/>
        <pt x="45" y="9" on="0"/>
        <pt x="30" y="8" on="1"/>
        <pt x="30" y="33" on="1"/>
        <pt x="74" y="33" on="0"/>
        <pt x="101" y="59" on="0"/>
        <pt x="101" y="110" on="1"/>
        <pt x="101" y="668" on="1"/>
        <pt x="101" y="694" on="0"/>
        <pt x="96" y="725" on="0"/>
        <pt x="89" y="734" on="1"/>
        <pt x="82" y="742" on="0"/>
        <pt x="55" y="746" on="0"/>
        <pt x="34" y="746" on="1"/>
        <pt x="34" y="766" on="1"/>
        <pt x="66" y="772" on="0"/>
        <pt x="127" y="797" on="0"/>
        <pt x="150" y="818" on="1"/>
        <pt x="168" y="818" on="1"/>
        <pt x="165" y="791" on="0"/>
        <pt x="163" y="730" on="0"/>
        <pt x="163" y="706" on="1"/>
        <pt x="163" y="242" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            60
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            60 26
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            4
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            4 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            7 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            10
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            10 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          22 26 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          4
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          3
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          42
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          49
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          60
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          59
          MDRP[11100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          38 52 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          11 35 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          64
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          64
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          38
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          67
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 3 values pushed */
          68 52 11
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="l" xMin="36" yMin="8" xMax="241" yMax="818">
      <contour>
        <pt x="108" y="668" on="1"/>
        <pt x="108" y="694" on="0"/>
        <pt x="103" y="725" on="0"/>
        <pt x="95" y="734" on="1"/>
        <pt x="88" y="742" on="0"/>
        <pt x="61" y="746" on="0"/>
        <pt x="40" y="746" on="1"/>
        <pt x="40" y="766" on="1"/>
        <pt x="72" y="772" on="0"/>
        <pt x="133" y="797" on="0"/>
        <pt x="156" y="818" on="1"/>
        <pt x="174" y="818" on="1"/>
        <pt x="171" y="791" on="0"/>
        <pt x="169" y="730" on="0"/>
        <pt x="169" y="706" on="1"/>
        <pt x="169" y="110" on="1"/>
        <pt x="169" y="68" on="0"/>
        <pt x="197" y="33" on="0"/>
        <pt x="241" y="33" on="1"/>
        <pt x="241" y="8" on="1"/>
        <pt x="219" y="8" on="0"/>
        <pt x="164" y="9" on="0"/>
        <pt x="137" y="9" on="1"/>
        <pt x="109" y="9" on="0"/>
        <pt x="56" y="9" on="0"/>
        <pt x="36" y="8" on="1"/>
        <pt x="36" y="33" on="1"/>
        <pt x="81" y="33" on="0"/>
        <pt x="108" y="64" on="0"/>
        <pt x="108" y="110" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            7
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            7 26
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          26 22 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          7
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          6
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          18
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          22
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          19
          MDAP[1]	/* MoveDirectAbsPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          14 0 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          11
          MDAP[1]	/* MoveDirectAbsPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="m" xMin="28" yMin="8" xMax="836" yMax="496">
      <contour>
        <pt x="167" y="495" on="1"/>
        <pt x="164" y="468" on="0"/>
        <pt x="163" y="414" on="0"/>
        <pt x="163" y="402" on="1"/>
        <pt x="184" y="417" on="0"/>
        <pt x="231" y="451" on="0"/>
        <pt x="255" y="464" on="1"/>
        <pt x="280" y="478" on="0"/>
        <pt x="330" y="496" on="0"/>
        <pt x="355" y="496" on="1"/>
        <pt x="391" y="496" on="0"/>
        <pt x="448" y="455" on="0"/>
        <pt x="462" y="404" on="1"/>
        <pt x="504" y="437" on="0"/>
        <pt x="602" y="496" on="0"/>
        <pt x="652" y="496" on="1"/>
        <pt x="682" y="496" on="0"/>
        <pt x="725" y="471" on="0"/>
        <pt x="739" y="450" on="1"/>
        <pt x="753" y="429" on="0"/>
        <pt x="767" y="374" on="0"/>
        <pt x="767" y="345" on="1"/>
        <pt x="767" y="107" on="1"/>
        <pt x="767" y="65" on="0"/>
        <pt x="794" y="33" on="0"/>
        <pt x="836" y="33" on="1"/>
        <pt x="836" y="8" on="1"/>
        <pt x="795" y="9" on="0"/>
        <pt x="680" y="10" on="0"/>
        <pt x="636" y="8" on="1"/>
        <pt x="636" y="33" on="1"/>
        <pt x="679" y="33" on="0"/>
        <pt x="706" y="65" on="0"/>
        <pt x="706" y="107" on="1"/>
        <pt x="706" y="308" on="1"/>
        <pt x="706" y="335" on="0"/>
        <pt x="700" y="384" on="0"/>
        <pt x="690" y="402" on="1"/>
        <pt x="680" y="420" on="0"/>
        <pt x="641" y="442" on="0"/>
        <pt x="607" y="442" on="1"/>
        <pt x="588" y="442" on="0"/>
        <pt x="547" y="427" on="0"/>
        <pt x="527" y="416" on="1"/>
        <pt x="508" y="406" on="0"/>
        <pt x="475" y="382" on="0"/>
        <pt x="465" y="374" on="1"/>
        <pt x="465" y="107" on="1"/>
        <pt x="465" y="65" on="0"/>
        <pt x="494" y="33" on="0"/>
        <pt x="538" y="33" on="1"/>
        <pt x="538" y="8" on="1"/>
        <pt x="516" y="8" on="0"/>
        <pt x="463" y="9" on="0"/>
        <pt x="436" y="9" on="1"/>
        <pt x="408" y="9" on="0"/>
        <pt x="355" y="9" on="0"/>
        <pt x="334" y="8" on="1"/>
        <pt x="334" y="33" on="1"/>
        <pt x="376" y="33" on="0"/>
        <pt x="403" y="65" on="0"/>
        <pt x="403" y="107" on="1"/>
        <pt x="403" y="308" on="1"/>
        <pt x="403" y="335" on="0"/>
        <pt x="398" y="384" on="0"/>
        <pt x="388" y="402" on="1"/>
        <pt x="378" y="420" on="0"/>
        <pt x="340" y="442" on="0"/>
        <pt x="306" y="442" on="1"/>
        <pt x="291" y="442" on="0"/>
        <pt x="254" y="429" on="0"/>
        <pt x="234" y="419" on="1"/>
        <pt x="214" y="408" on="0"/>
        <pt x="177" y="383" on="0"/>
        <pt x="163" y="370" on="1"/>
        <pt x="163" y="107" on="1"/>
        <pt x="163" y="65" on="0"/>
        <pt x="190" y="33" on="0"/>
        <pt x="233" y="33" on="1"/>
        <pt x="233" y="8" on="1"/>
        <pt x="190" y="9" on="0"/>
        <pt x="73" y="10" on="0"/>
        <pt x="28" y="8" on="1"/>
        <pt x="28" y="33" on="1"/>
        <pt x="73" y="33" on="0"/>
        <pt x="101" y="65" on="0"/>
        <pt x="101" y="107" on="1"/>
        <pt x="101" y="345" on="1"/>
        <pt x="101" y="372" on="0"/>
        <pt x="98" y="404" on="0"/>
        <pt x="92" y="413" on="1"/>
        <pt x="86" y="422" on="0"/>
        <pt x="62" y="428" on="0"/>
        <pt x="41" y="428" on="1"/>
        <pt x="41" y="449" on="1"/>
        <pt x="73" y="454" on="0"/>
        <pt x="126" y="474" on="0"/>
        <pt x="148" y="495" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            0 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            9
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            9 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            15
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            15 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          25 26 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          29
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          30
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          15
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          40
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 40 233 40 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 40 24 40 40 40 56 40 72 40 88 40 104 40 120 40 136 40 152 40 168 40 184 40 200
          40 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          50
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          40
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          68
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          78
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          79
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          26
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          82
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          25
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          83
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          68
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          94
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          94
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          93
          MDRP[11100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 3 values pushed */
          75 86 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          47 61 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 3 values pushed */
          22 33 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          75
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          75
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 3 values pushed */
          12 61 47
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          IP[ ]	/* InterpolatePts */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

    <TTGlyph name="n" xMin="30" yMin="8" xMax="545" yMax="496">
      <contour>
        <pt x="167" y="495" on="1"/>
        <pt x="164" y="468" on="0"/>
        <pt x="163" y="416" on="0"/>
        <pt x="163" y="403" on="1"/>
        <pt x="208" y="436" on="0"/>
        <pt x="312" y="496" on="0"/>
        <pt x="360" y="496" on="1"/>
        <pt x="420" y="496" on="0"/>
        <pt x="472" y="409" on="0"/>
        <pt x="472" y="347" on="1"/>
        <pt x="472" y="110" on="1"/>
        <pt x="472" y="68" on="0"/>
        <pt x="500" y="33" on="0"/>
        <pt x="545" y="33" on="1"/>
        <pt x="545" y="8" on="1"/>
        <pt x="531" y="8" on="0"/>
        <pt x="506" y="8" on="0"/>
        <pt x="494" y="9" on="1"/>
        <pt x="482" y="9" on="0"/>
        <pt x="457" y="10" on="0"/>
        <pt x="443" y="10" on="1"/>
        <pt x="428" y="10" on="0"/>
        <pt x="403" y="9" on="0"/>
        <pt x="391" y="9" on="1"/>
        <pt x="379" y="9" on="0"/>
        <pt x="354" y="8" on="0"/>
        <pt x="340" y="8" on="1"/>
        <pt x="340" y="33" on="1"/>
        <pt x="383" y="33" on="0"/>
        <pt x="411" y="68" on="0"/>
        <pt x="411" y="110" on="1"/>
        <pt x="411" y="348" on="1"/>
        <pt x="411" y="398" on="0"/>
        <pt x="365" y="442" on="0"/>
        <pt x="312" y="442" on="1"/>
        <pt x="297" y="441" on="0"/>
        <pt x="257" y="428" on="0"/>
        <pt x="237" y="419" on="1"/>
        <pt x="216" y="409" on="0"/>
        <pt x="177" y="385" on="0"/>
        <pt x="163" y="373" on="1"/>
        <pt x="163" y="110" on="1"/>
        <pt x="163" y="68" on="0"/>
        <pt x="191" y="33" on="0"/>
        <pt x="236" y="33" on="1"/>
        <pt x="236" y="8" on="1"/>
        <pt x="221" y="8" on="0"/>
        <pt x="197" y="8" on="0"/>
        <pt x="185" y="9" on="1"/>
        <pt x="173" y="9" on="0"/>
        <pt x="148" y="10" on="0"/>
        <pt x="134" y="10" on="1"/>
        <pt x="119" y="10" on="0"/>
        <pt x="94" y="9" on="0"/>
        <pt x="82" y="9" on="1"/>
        <pt x="69" y="9" on="0"/>
        <pt x="44" y="8" on="0"/>
        <pt x="30" y="8" on="1"/>
        <pt x="30" y="33" on="1"/>
        <pt x="74" y="33" on="0"/>
        <pt x="101" y="68" on="0"/>
        <pt x="101" y="110" on="1"/>
        <pt x="101" y="345" on="1"/>
        <pt x="101" y="372" on="0"/>
        <pt x="98" y="404" on="0"/>
        <pt x="92" y="413" on="1"/>
        <pt x="86" y="422" on="0"/>
        <pt x="62" y="428" on="0"/>
        <pt x="41" y="428" on="1"/>
        <pt x="41" y="449" on="1"/>
        <pt x="73" y="454" on="0"/>
        <pt x="126" y="474" on="0"/>
        <pt x="148" y="495" on="1"/>
      </contour>
      <instructions>
        <assembly>
          PUSHW[ ]	/* 1 value pushed */
          40
          CALL[ ]	/* CallFunction */
          SVTCA[0]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            0
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            0 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 1 value pushed */
          13
          RCVT[ ]	/* ReadCVT */
          IF[ ]	/* If */
            PUSHW[ ]	/* 1 value pushed */
            6
            MDAP[1]	/* MoveDirectAbsPt */
          ELSE[ ]	/* Else */
            PUSHW[ ]	/* 2 values pushed */
            6 24
            MIAP[0]	/* MoveIndirectAbsPt */
          EIF[ ]	/* EndIf */
          PUSHW[ ]	/* 3 values pushed */
          13 14 43
          CALL[ ]	/* CallFunction */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          17
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          17
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          20
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          20
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          23
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          23
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          26
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          27
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          6
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          34
          MDRP[11100]	/* MoveDirectRelPt */
          NPUSHW[ ]	/* 5 values pushed */
          217 34 233 34 2
          DELTAP1[ ]	/* DeltaExceptionP1 */
          NPUSHW[ ]	/* 27 values pushed */
          8 34 24 34 40 34 56 34 72 34 88 34 104 34 120 34 136 34 152 34 168 34 184 34 200
          34 13
          DELTAP1[ ]	/* DeltaExceptionP1 */
          PUSHW[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          44
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          45
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          48
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          51
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          54
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          54
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          14
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          57
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          13
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          58
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          34
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          69
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          69
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          68
          MDRP[11100]	/* MoveDirectRelPt */
          SVTCA[1]	/* SetFPVectorToAxis */
          PUSHW[ ]	/* 1 value pushed */
          73
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          30
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          73
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          61
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          61
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          MDRP[11100]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          0
          MDAP[1]	/* MoveDirectAbsPt */
          PUSHW[ ]	/* 1 value pushed */
          41
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          3
          MDRP[10000]	/* MoveDirectRelPt */
          PUSHW[ ]	/* 1 value pushed */
          30
          SRP0[ ]	/* SetRefPoint0 */
          PUSHW[ ]	/* 1 value pushed */
          10
          MDRP[11100]	/* MoveDirectRelPt */
          IUP[0]	/* InterpolateUntPts */
          IUP[1]	/* InterpolateUntPts */
        </assembly>
      </instructions>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright © 2010 NHN Corporation. All rights reserved. Font designed by FONTRIX.
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      NanumMyeongjo
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
  </name>

  <post>
    <formatType value="3.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-260"/>
    <underlineThickness value="50"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="15"/>
  </gasp>

</ttFont>
