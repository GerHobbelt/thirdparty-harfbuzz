<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.25">

  <GlyphOrder>
    <!-- The 'id' attribute is only for humans; it is ignored when parsed. -->
    <GlyphID id="0" name=".notdef"/>
    <GlyphID id="1" name="glyph00001"/>
    <GlyphID id="2" name="glyph00002"/>
    <GlyphID id="3" name="glyph00003"/>
    <GlyphID id="4" name="glyph00004"/>
    <GlyphID id="5" name="glyph00005"/>
    <GlyphID id="6" name="glyph00006"/>
    <GlyphID id="7" name="glyph00007"/>
    <GlyphID id="8" name="glyph00008"/>
    <GlyphID id="9" name="glyph00009"/>
    <GlyphID id="10" name="glyph00010"/>
    <GlyphID id="11" name="glyph00011"/>
    <GlyphID id="12" name="glyph00012"/>
    <GlyphID id="13" name="glyph00013"/>
    <GlyphID id="14" name="glyph00014"/>
    <GlyphID id="15" name="glyph00015"/>
    <GlyphID id="16" name="glyph00016"/>
    <GlyphID id="17" name="glyph00017"/>
    <GlyphID id="18" name="glyph00018"/>
    <GlyphID id="19" name="glyph00019"/>
    <GlyphID id="20" name="glyph00020"/>
    <GlyphID id="21" name="glyph00021"/>
    <GlyphID id="22" name="glyph00022"/>
    <GlyphID id="23" name="glyph00023"/>
    <GlyphID id="24" name="glyph00024"/>
    <GlyphID id="25" name="glyph00025"/>
    <GlyphID id="26" name="glyph00026"/>
    <GlyphID id="27" name="glyph00027"/>
    <GlyphID id="28" name="glyph00028"/>
    <GlyphID id="29" name="glyph00029"/>
    <GlyphID id="30" name="glyph00030"/>
    <GlyphID id="31" name="glyph00031"/>
    <GlyphID id="32" name="glyph00032"/>
    <GlyphID id="33" name="glyph00033"/>
    <GlyphID id="34" name="glyph00034"/>
    <GlyphID id="35" name="glyph00035"/>
    <GlyphID id="36" name="glyph00036"/>
    <GlyphID id="37" name="glyph00037"/>
    <GlyphID id="38" name="glyph00038"/>
    <GlyphID id="39" name="glyph00039"/>
    <GlyphID id="40" name="glyph00040"/>
    <GlyphID id="41" name="glyph00041"/>
    <GlyphID id="42" name="glyph00042"/>
    <GlyphID id="43" name="glyph00043"/>
    <GlyphID id="44" name="glyph00044"/>
    <GlyphID id="45" name="glyph00045"/>
    <GlyphID id="46" name="glyph00046"/>
    <GlyphID id="47" name="glyph00047"/>
    <GlyphID id="48" name="glyph00048"/>
    <GlyphID id="49" name="glyph00049"/>
    <GlyphID id="50" name="glyph00050"/>
    <GlyphID id="51" name="glyph00051"/>
    <GlyphID id="52" name="glyph00052"/>
    <GlyphID id="53" name="uni1789"/>
    <GlyphID id="54" name="glyph00054"/>
    <GlyphID id="55" name="glyph00055"/>
    <GlyphID id="56" name="glyph00056"/>
    <GlyphID id="57" name="glyph00057"/>
    <GlyphID id="58" name="glyph00058"/>
    <GlyphID id="59" name="glyph00059"/>
    <GlyphID id="60" name="glyph00060"/>
    <GlyphID id="61" name="glyph00061"/>
    <GlyphID id="62" name="glyph00062"/>
    <GlyphID id="63" name="uni1793"/>
    <GlyphID id="64" name="uni1794"/>
    <GlyphID id="65" name="glyph00065"/>
    <GlyphID id="66" name="glyph00066"/>
    <GlyphID id="67" name="glyph00067"/>
    <GlyphID id="68" name="uni1798"/>
    <GlyphID id="69" name="glyph00069"/>
    <GlyphID id="70" name="glyph00070"/>
    <GlyphID id="71" name="glyph00071"/>
    <GlyphID id="72" name="glyph00072"/>
    <GlyphID id="73" name="glyph00073"/>
    <GlyphID id="74" name="glyph00074"/>
    <GlyphID id="75" name="glyph00075"/>
    <GlyphID id="76" name="glyph00076"/>
    <GlyphID id="77" name="glyph00077"/>
    <GlyphID id="78" name="glyph00078"/>
    <GlyphID id="79" name="glyph00079"/>
    <GlyphID id="80" name="glyph00080"/>
    <GlyphID id="81" name="glyph00081"/>
    <GlyphID id="82" name="glyph00082"/>
    <GlyphID id="83" name="glyph00083"/>
    <GlyphID id="84" name="glyph00084"/>
    <GlyphID id="85" name="glyph00085"/>
    <GlyphID id="86" name="glyph00086"/>
    <GlyphID id="87" name="glyph00087"/>
    <GlyphID id="88" name="glyph00088"/>
    <GlyphID id="89" name="glyph00089"/>
    <GlyphID id="90" name="glyph00090"/>
    <GlyphID id="91" name="glyph00091"/>
    <GlyphID id="92" name="glyph00092"/>
    <GlyphID id="93" name="glyph00093"/>
    <GlyphID id="94" name="glyph00094"/>
    <GlyphID id="95" name="glyph00095"/>
    <GlyphID id="96" name="uni17B6"/>
    <GlyphID id="97" name="glyph00097"/>
    <GlyphID id="98" name="glyph00098"/>
    <GlyphID id="99" name="glyph00099"/>
    <GlyphID id="100" name="glyph00100"/>
    <GlyphID id="101" name="uni17BB"/>
    <GlyphID id="102" name="glyph00102"/>
    <GlyphID id="103" name="glyph00103"/>
    <GlyphID id="104" name="uni17BE"/>
    <GlyphID id="105" name="glyph00105"/>
    <GlyphID id="106" name="glyph00106"/>
    <GlyphID id="107" name="glyph00107"/>
    <GlyphID id="108" name="glyph00108"/>
    <GlyphID id="109" name="glyph00109"/>
    <GlyphID id="110" name="glyph00110"/>
    <GlyphID id="111" name="glyph00111"/>
    <GlyphID id="112" name="uni17C6"/>
    <GlyphID id="113" name="glyph00113"/>
    <GlyphID id="114" name="glyph00114"/>
    <GlyphID id="115" name="glyph00115"/>
    <GlyphID id="116" name="glyph00116"/>
    <GlyphID id="117" name="glyph00117"/>
    <GlyphID id="118" name="glyph00118"/>
    <GlyphID id="119" name="glyph00119"/>
    <GlyphID id="120" name="glyph00120"/>
    <GlyphID id="121" name="glyph00121"/>
    <GlyphID id="122" name="glyph00122"/>
    <GlyphID id="123" name="glyph00123"/>
    <GlyphID id="124" name="glyph00124"/>
    <GlyphID id="125" name="glyph00125"/>
    <GlyphID id="126" name="glyph00126"/>
    <GlyphID id="127" name="glyph00127"/>
    <GlyphID id="128" name="glyph00128"/>
    <GlyphID id="129" name="glyph00129"/>
    <GlyphID id="130" name="glyph00130"/>
    <GlyphID id="131" name="glyph00131"/>
    <GlyphID id="132" name="glyph00132"/>
    <GlyphID id="133" name="glyph00133"/>
    <GlyphID id="134" name="glyph00134"/>
    <GlyphID id="135" name="glyph00135"/>
    <GlyphID id="136" name="glyph00136"/>
    <GlyphID id="137" name="glyph00137"/>
    <GlyphID id="138" name="glyph00138"/>
    <GlyphID id="139" name="glyph00139"/>
    <GlyphID id="140" name="glyph00140"/>
    <GlyphID id="141" name="glyph00141"/>
    <GlyphID id="142" name="glyph00142"/>
    <GlyphID id="143" name="glyph00143"/>
    <GlyphID id="144" name="glyph00144"/>
    <GlyphID id="145" name="glyph00145"/>
    <GlyphID id="146" name="glyph00146"/>
    <GlyphID id="147" name="glyph00147"/>
    <GlyphID id="148" name="glyph00148"/>
    <GlyphID id="149" name="glyph00149"/>
    <GlyphID id="150" name="glyph00150"/>
    <GlyphID id="151" name="glyph00151"/>
    <GlyphID id="152" name="glyph00152"/>
    <GlyphID id="153" name="glyph00153"/>
    <GlyphID id="154" name="glyph00154"/>
    <GlyphID id="155" name="glyph00155"/>
    <GlyphID id="156" name="glyph00156"/>
    <GlyphID id="157" name="glyph00157"/>
    <GlyphID id="158" name="glyph00158"/>
    <GlyphID id="159" name="glyph00159"/>
    <GlyphID id="160" name="glyph00160"/>
    <GlyphID id="161" name="glyph00161"/>
    <GlyphID id="162" name="glyph00162"/>
    <GlyphID id="163" name="glyph00163"/>
    <GlyphID id="164" name="glyph00164"/>
    <GlyphID id="165" name="glyph00165"/>
    <GlyphID id="166" name="glyph00166"/>
    <GlyphID id="167" name="glyph00167"/>
    <GlyphID id="168" name="glyph00168"/>
    <GlyphID id="169" name="glyph00169"/>
    <GlyphID id="170" name="glyph00170"/>
    <GlyphID id="171" name="glyph00171"/>
    <GlyphID id="172" name="glyph00172"/>
    <GlyphID id="173" name="glyph00173"/>
    <GlyphID id="174" name="glyph00174"/>
    <GlyphID id="175" name="glyph00175"/>
    <GlyphID id="176" name="glyph00176"/>
    <GlyphID id="177" name="glyph00177"/>
    <GlyphID id="178" name="glyph00178"/>
    <GlyphID id="179" name="glyph00179"/>
    <GlyphID id="180" name="glyph00180"/>
    <GlyphID id="181" name="glyph00181"/>
    <GlyphID id="182" name="glyph00182"/>
    <GlyphID id="183" name="glyph00183"/>
    <GlyphID id="184" name="glyph00184"/>
    <GlyphID id="185" name="glyph00185"/>
    <GlyphID id="186" name="glyph00186"/>
    <GlyphID id="187" name="glyph00187"/>
    <GlyphID id="188" name="glyph00188"/>
    <GlyphID id="189" name="glyph00189"/>
    <GlyphID id="190" name="glyph00190"/>
    <GlyphID id="191" name="glyph00191"/>
    <GlyphID id="192" name="glyph00192"/>
    <GlyphID id="193" name="glyph00193"/>
    <GlyphID id="194" name="glyph00194"/>
    <GlyphID id="195" name="glyph00195"/>
    <GlyphID id="196" name="glyph00196"/>
    <GlyphID id="197" name="glyph00197"/>
    <GlyphID id="198" name="glyph00198"/>
    <GlyphID id="199" name="glyph00199"/>
    <GlyphID id="200" name="glyph00200"/>
    <GlyphID id="201" name="glyph00201"/>
    <GlyphID id="202" name="glyph00202"/>
    <GlyphID id="203" name="glyph00203"/>
    <GlyphID id="204" name="glyph00204"/>
    <GlyphID id="205" name="glyph00205"/>
    <GlyphID id="206" name="glyph00206"/>
    <GlyphID id="207" name="glyph00207"/>
    <GlyphID id="208" name="glyph00208"/>
    <GlyphID id="209" name="glyph00209"/>
    <GlyphID id="210" name="glyph00210"/>
    <GlyphID id="211" name="glyph00211"/>
    <GlyphID id="212" name="glyph00212"/>
    <GlyphID id="213" name="glyph00213"/>
    <GlyphID id="214" name="glyph00214"/>
    <GlyphID id="215" name="glyph00215"/>
    <GlyphID id="216" name="glyph00216"/>
    <GlyphID id="217" name="glyph00217"/>
    <GlyphID id="218" name="glyph00218"/>
    <GlyphID id="219" name="glyph00219"/>
    <GlyphID id="220" name="glyph00220"/>
    <GlyphID id="221" name="glyph00221"/>
    <GlyphID id="222" name="glyph00222"/>
    <GlyphID id="223" name="glyph00223"/>
    <GlyphID id="224" name="glyph00224"/>
    <GlyphID id="225" name="glyph00225"/>
    <GlyphID id="226" name="glyph00226"/>
    <GlyphID id="227" name="glyph00227"/>
    <GlyphID id="228" name="glyph00228"/>
    <GlyphID id="229" name="glyph00229"/>
    <GlyphID id="230" name="glyph00230"/>
    <GlyphID id="231" name="glyph00231"/>
    <GlyphID id="232" name="glyph00232"/>
    <GlyphID id="233" name="glyph00233"/>
    <GlyphID id="234" name="glyph00234"/>
    <GlyphID id="235" name="glyph00235"/>
    <GlyphID id="236" name="glyph00236"/>
    <GlyphID id="237" name="glyph00237"/>
    <GlyphID id="238" name="glyph00238"/>
    <GlyphID id="239" name="glyph00239"/>
    <GlyphID id="240" name="glyph00240"/>
  </GlyphOrder>

  <head>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="1.0"/>
    <fontRevision value="2.0"/>
    <checkSumAdjustment value="0x50c78794"/>
    <magicNumber value="0x5f0f3cf5"/>
    <flags value="00000000 00011111"/>
    <unitsPerEm value="2048"/>
    <created value="Mon May 17 19:56:38 2010"/>
    <modified value="Thu Apr  1 21:27:51 2021"/>
    <xMin value="-2475"/>
    <yMin value="-1200"/>
    <xMax value="5125"/>
    <yMax value="2283"/>
    <macStyle value="00000000 00000000"/>
    <lowestRecPPEM value="8"/>
    <fontDirectionHint value="2"/>
    <indexToLocFormat value="0"/>
    <glyphDataFormat value="0"/>
  </head>

  <hhea>
    <tableVersion value="0x00010000"/>
    <ascent value="2300"/>
    <descent value="-1200"/>
    <lineGap value="0"/>
    <advanceWidthMax value="5425"/>
    <minLeftSideBearing value="-2475"/>
    <minRightSideBearing value="-525"/>
    <xMaxExtent value="5125"/>
    <caretSlopeRise value="1"/>
    <caretSlopeRun value="0"/>
    <caretOffset value="0"/>
    <reserved0 value="0"/>
    <reserved1 value="0"/>
    <reserved2 value="0"/>
    <reserved3 value="0"/>
    <metricDataFormat value="0"/>
    <numberOfHMetrics value="241"/>
  </hhea>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="241"/>
    <maxPoints value="154"/>
    <maxContours value="6"/>
    <maxCompositePoints value="0"/>
    <maxCompositeContours value="0"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="16"/>
    <maxStorage value="47"/>
    <maxFunctionDefs value="90"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="543"/>
    <maxSizeOfInstructions value="1797"/>
    <maxComponentElements value="0"/>
    <maxComponentDepth value="0"/>
  </maxp>

  <OS_2>
    <!-- The fields 'usFirstCharIndex' and 'usLastCharIndex'
         will be recalculated by the compiler -->
    <version value="2"/>
    <xAvgCharWidth value="1110"/>
    <usWeightClass value="400"/>
    <usWidthClass value="5"/>
    <fsType value="00000000 00001000"/>
    <ySubscriptXSize value="1434"/>
    <ySubscriptYSize value="1331"/>
    <ySubscriptXOffset value="0"/>
    <ySubscriptYOffset value="286"/>
    <ySuperscriptXSize value="1434"/>
    <ySuperscriptYSize value="1331"/>
    <ySuperscriptXOffset value="0"/>
    <ySuperscriptYOffset value="976"/>
    <yStrikeoutSize value="102"/>
    <yStrikeoutPosition value="498"/>
    <sFamilyClass value="0"/>
    <panose>
      <bFamilyType value="2"/>
      <bSerifStyle value="11"/>
      <bWeight value="6"/>
      <bProportion value="6"/>
      <bContrast value="3"/>
      <bStrokeVariation value="8"/>
      <bArmStyle value="4"/>
      <bLetterForm value="2"/>
      <bMidline value="2"/>
      <bXHeight value="4"/>
    </panose>
    <ulUnicodeRange1 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange2 value="00000000 00000000 00000000 00000000"/>
    <ulUnicodeRange3 value="00000000 00000001 00000000 00000000"/>
    <ulUnicodeRange4 value="00000000 00000000 00000000 00000000"/>
    <achVendID value="HL  "/>
    <fsSelection value="00000000 01000000"/>
    <usFirstCharIndex value="6025"/>
    <usLastCharIndex value="6086"/>
    <sTypoAscender value="2300"/>
    <sTypoDescender value="-1200"/>
    <sTypoLineGap value="132"/>
    <usWinAscent value="2300"/>
    <usWinDescent value="1200"/>
    <ulCodePageRange1 value="00100000 00000000 00000001 00010001"/>
    <ulCodePageRange2 value="01000001 00000000 00000000 00000000"/>
    <sxHeight value="1098"/>
    <sCapHeight value="1462"/>
    <usDefaultChar value="0"/>
    <usBreakChar value="32"/>
    <usMaxContext value="2"/>
  </OS_2>

  <hmtx>
    <mtx name=".notdef" width="2048" lsb="0"/>
    <mtx name="glyph00001" width="0" lsb="0"/>
    <mtx name="glyph00002" width="0" lsb="0"/>
    <mtx name="glyph00003" width="0" lsb="0"/>
    <mtx name="glyph00004" width="0" lsb="0"/>
    <mtx name="glyph00005" width="0" lsb="0"/>
    <mtx name="glyph00006" width="0" lsb="0"/>
    <mtx name="glyph00007" width="0" lsb="0"/>
    <mtx name="glyph00008" width="0" lsb="0"/>
    <mtx name="glyph00009" width="0" lsb="0"/>
    <mtx name="glyph00010" width="0" lsb="0"/>
    <mtx name="glyph00011" width="0" lsb="0"/>
    <mtx name="glyph00012" width="0" lsb="0"/>
    <mtx name="glyph00013" width="0" lsb="0"/>
    <mtx name="glyph00014" width="0" lsb="0"/>
    <mtx name="glyph00015" width="0" lsb="0"/>
    <mtx name="glyph00016" width="0" lsb="0"/>
    <mtx name="glyph00017" width="0" lsb="0"/>
    <mtx name="glyph00018" width="0" lsb="0"/>
    <mtx name="glyph00019" width="0" lsb="0"/>
    <mtx name="glyph00020" width="0" lsb="0"/>
    <mtx name="glyph00021" width="0" lsb="0"/>
    <mtx name="glyph00022" width="0" lsb="0"/>
    <mtx name="glyph00023" width="0" lsb="0"/>
    <mtx name="glyph00024" width="0" lsb="0"/>
    <mtx name="glyph00025" width="0" lsb="0"/>
    <mtx name="glyph00026" width="0" lsb="0"/>
    <mtx name="glyph00027" width="0" lsb="0"/>
    <mtx name="glyph00028" width="0" lsb="0"/>
    <mtx name="glyph00029" width="0" lsb="0"/>
    <mtx name="glyph00030" width="0" lsb="0"/>
    <mtx name="glyph00031" width="0" lsb="0"/>
    <mtx name="glyph00032" width="0" lsb="0"/>
    <mtx name="glyph00033" width="0" lsb="0"/>
    <mtx name="glyph00034" width="0" lsb="0"/>
    <mtx name="glyph00035" width="0" lsb="0"/>
    <mtx name="glyph00036" width="0" lsb="0"/>
    <mtx name="glyph00037" width="0" lsb="0"/>
    <mtx name="glyph00038" width="0" lsb="0"/>
    <mtx name="glyph00039" width="0" lsb="0"/>
    <mtx name="glyph00040" width="0" lsb="0"/>
    <mtx name="glyph00041" width="0" lsb="0"/>
    <mtx name="glyph00042" width="0" lsb="0"/>
    <mtx name="glyph00043" width="0" lsb="0"/>
    <mtx name="glyph00044" width="0" lsb="0"/>
    <mtx name="glyph00045" width="0" lsb="0"/>
    <mtx name="glyph00046" width="0" lsb="0"/>
    <mtx name="glyph00047" width="0" lsb="0"/>
    <mtx name="glyph00048" width="0" lsb="0"/>
    <mtx name="glyph00049" width="0" lsb="0"/>
    <mtx name="glyph00050" width="0" lsb="0"/>
    <mtx name="glyph00051" width="0" lsb="0"/>
    <mtx name="glyph00052" width="0" lsb="0"/>
    <mtx name="glyph00054" width="0" lsb="0"/>
    <mtx name="glyph00055" width="0" lsb="0"/>
    <mtx name="glyph00056" width="0" lsb="0"/>
    <mtx name="glyph00057" width="0" lsb="0"/>
    <mtx name="glyph00058" width="0" lsb="0"/>
    <mtx name="glyph00059" width="0" lsb="0"/>
    <mtx name="glyph00060" width="0" lsb="0"/>
    <mtx name="glyph00061" width="0" lsb="0"/>
    <mtx name="glyph00062" width="0" lsb="0"/>
    <mtx name="glyph00065" width="0" lsb="0"/>
    <mtx name="glyph00066" width="0" lsb="0"/>
    <mtx name="glyph00067" width="0" lsb="0"/>
    <mtx name="glyph00069" width="0" lsb="0"/>
    <mtx name="glyph00070" width="0" lsb="0"/>
    <mtx name="glyph00071" width="0" lsb="0"/>
    <mtx name="glyph00072" width="0" lsb="0"/>
    <mtx name="glyph00073" width="0" lsb="0"/>
    <mtx name="glyph00074" width="0" lsb="0"/>
    <mtx name="glyph00075" width="0" lsb="0"/>
    <mtx name="glyph00076" width="0" lsb="0"/>
    <mtx name="glyph00077" width="0" lsb="0"/>
    <mtx name="glyph00078" width="0" lsb="0"/>
    <mtx name="glyph00079" width="0" lsb="0"/>
    <mtx name="glyph00080" width="0" lsb="0"/>
    <mtx name="glyph00081" width="0" lsb="0"/>
    <mtx name="glyph00082" width="0" lsb="0"/>
    <mtx name="glyph00083" width="0" lsb="0"/>
    <mtx name="glyph00084" width="0" lsb="0"/>
    <mtx name="glyph00085" width="0" lsb="0"/>
    <mtx name="glyph00086" width="0" lsb="0"/>
    <mtx name="glyph00087" width="0" lsb="0"/>
    <mtx name="glyph00088" width="0" lsb="0"/>
    <mtx name="glyph00089" width="0" lsb="0"/>
    <mtx name="glyph00090" width="0" lsb="0"/>
    <mtx name="glyph00091" width="0" lsb="0"/>
    <mtx name="glyph00092" width="0" lsb="0"/>
    <mtx name="glyph00093" width="0" lsb="0"/>
    <mtx name="glyph00094" width="0" lsb="0"/>
    <mtx name="glyph00095" width="0" lsb="0"/>
    <mtx name="glyph00097" width="0" lsb="0"/>
    <mtx name="glyph00098" width="0" lsb="0"/>
    <mtx name="glyph00099" width="0" lsb="0"/>
    <mtx name="glyph00100" width="0" lsb="0"/>
    <mtx name="glyph00102" width="0" lsb="0"/>
    <mtx name="glyph00103" width="0" lsb="0"/>
    <mtx name="glyph00105" width="0" lsb="0"/>
    <mtx name="glyph00106" width="0" lsb="0"/>
    <mtx name="glyph00107" width="0" lsb="0"/>
    <mtx name="glyph00108" width="0" lsb="0"/>
    <mtx name="glyph00109" width="0" lsb="0"/>
    <mtx name="glyph00110" width="0" lsb="0"/>
    <mtx name="glyph00111" width="0" lsb="0"/>
    <mtx name="glyph00113" width="0" lsb="0"/>
    <mtx name="glyph00114" width="0" lsb="0"/>
    <mtx name="glyph00115" width="0" lsb="0"/>
    <mtx name="glyph00116" width="0" lsb="0"/>
    <mtx name="glyph00117" width="0" lsb="0"/>
    <mtx name="glyph00118" width="0" lsb="0"/>
    <mtx name="glyph00119" width="0" lsb="0"/>
    <mtx name="glyph00120" width="0" lsb="0"/>
    <mtx name="glyph00121" width="0" lsb="0"/>
    <mtx name="glyph00122" width="0" lsb="0"/>
    <mtx name="glyph00123" width="0" lsb="0"/>
    <mtx name="glyph00124" width="0" lsb="0"/>
    <mtx name="glyph00125" width="0" lsb="0"/>
    <mtx name="glyph00126" width="0" lsb="0"/>
    <mtx name="glyph00127" width="0" lsb="0"/>
    <mtx name="glyph00128" width="0" lsb="0"/>
    <mtx name="glyph00129" width="0" lsb="0"/>
    <mtx name="glyph00130" width="0" lsb="0"/>
    <mtx name="glyph00131" width="0" lsb="0"/>
    <mtx name="glyph00132" width="0" lsb="0"/>
    <mtx name="glyph00133" width="0" lsb="0"/>
    <mtx name="glyph00134" width="0" lsb="0"/>
    <mtx name="glyph00135" width="0" lsb="0"/>
    <mtx name="glyph00136" width="0" lsb="0"/>
    <mtx name="glyph00137" width="0" lsb="0"/>
    <mtx name="glyph00138" width="0" lsb="0"/>
    <mtx name="glyph00139" width="0" lsb="0"/>
    <mtx name="glyph00140" width="0" lsb="0"/>
    <mtx name="glyph00141" width="0" lsb="0"/>
    <mtx name="glyph00142" width="0" lsb="0"/>
    <mtx name="glyph00143" width="0" lsb="0"/>
    <mtx name="glyph00144" width="0" lsb="0"/>
    <mtx name="glyph00145" width="0" lsb="0"/>
    <mtx name="glyph00146" width="0" lsb="0"/>
    <mtx name="glyph00147" width="0" lsb="0"/>
    <mtx name="glyph00148" width="0" lsb="0"/>
    <mtx name="glyph00149" width="0" lsb="0"/>
    <mtx name="glyph00150" width="0" lsb="0"/>
    <mtx name="glyph00151" width="0" lsb="0"/>
    <mtx name="glyph00152" width="0" lsb="0"/>
    <mtx name="glyph00153" width="0" lsb="0"/>
    <mtx name="glyph00154" width="0" lsb="0"/>
    <mtx name="glyph00155" width="0" lsb="0"/>
    <mtx name="glyph00156" width="0" lsb="0"/>
    <mtx name="glyph00157" width="0" lsb="0"/>
    <mtx name="glyph00158" width="0" lsb="0"/>
    <mtx name="glyph00159" width="0" lsb="0"/>
    <mtx name="glyph00160" width="0" lsb="0"/>
    <mtx name="glyph00161" width="0" lsb="0"/>
    <mtx name="glyph00162" width="0" lsb="0"/>
    <mtx name="glyph00163" width="0" lsb="0"/>
    <mtx name="glyph00164" width="0" lsb="0"/>
    <mtx name="glyph00165" width="0" lsb="0"/>
    <mtx name="glyph00166" width="0" lsb="0"/>
    <mtx name="glyph00167" width="0" lsb="0"/>
    <mtx name="glyph00168" width="0" lsb="0"/>
    <mtx name="glyph00169" width="0" lsb="0"/>
    <mtx name="glyph00170" width="0" lsb="0"/>
    <mtx name="glyph00171" width="0" lsb="0"/>
    <mtx name="glyph00172" width="0" lsb="0"/>
    <mtx name="glyph00173" width="0" lsb="0"/>
    <mtx name="glyph00174" width="0" lsb="0"/>
    <mtx name="glyph00175" width="0" lsb="0"/>
    <mtx name="glyph00176" width="0" lsb="0"/>
    <mtx name="glyph00177" width="0" lsb="-550"/>
    <mtx name="glyph00178" width="0" lsb="0"/>
    <mtx name="glyph00179" width="0" lsb="0"/>
    <mtx name="glyph00180" width="0" lsb="0"/>
    <mtx name="glyph00181" width="0" lsb="0"/>
    <mtx name="glyph00182" width="0" lsb="0"/>
    <mtx name="glyph00183" width="0" lsb="0"/>
    <mtx name="glyph00184" width="0" lsb="0"/>
    <mtx name="glyph00185" width="0" lsb="0"/>
    <mtx name="glyph00186" width="0" lsb="0"/>
    <mtx name="glyph00187" width="0" lsb="0"/>
    <mtx name="glyph00188" width="775" lsb="0"/>
    <mtx name="glyph00189" width="0" lsb="0"/>
    <mtx name="glyph00190" width="0" lsb="0"/>
    <mtx name="glyph00191" width="0" lsb="0"/>
    <mtx name="glyph00192" width="0" lsb="0"/>
    <mtx name="glyph00193" width="0" lsb="0"/>
    <mtx name="glyph00194" width="0" lsb="0"/>
    <mtx name="glyph00195" width="0" lsb="0"/>
    <mtx name="glyph00196" width="0" lsb="0"/>
    <mtx name="glyph00197" width="0" lsb="0"/>
    <mtx name="glyph00198" width="0" lsb="0"/>
    <mtx name="glyph00199" width="0" lsb="0"/>
    <mtx name="glyph00200" width="0" lsb="0"/>
    <mtx name="glyph00201" width="0" lsb="0"/>
    <mtx name="glyph00202" width="0" lsb="0"/>
    <mtx name="glyph00203" width="0" lsb="0"/>
    <mtx name="glyph00204" width="0" lsb="0"/>
    <mtx name="glyph00205" width="0" lsb="0"/>
    <mtx name="glyph00206" width="0" lsb="0"/>
    <mtx name="glyph00207" width="0" lsb="0"/>
    <mtx name="glyph00208" width="0" lsb="0"/>
    <mtx name="glyph00209" width="0" lsb="0"/>
    <mtx name="glyph00210" width="0" lsb="0"/>
    <mtx name="glyph00211" width="0" lsb="0"/>
    <mtx name="glyph00212" width="0" lsb="0"/>
    <mtx name="glyph00213" width="0" lsb="0"/>
    <mtx name="glyph00214" width="0" lsb="0"/>
    <mtx name="glyph00215" width="0" lsb="0"/>
    <mtx name="glyph00216" width="0" lsb="0"/>
    <mtx name="glyph00217" width="0" lsb="0"/>
    <mtx name="glyph00218" width="0" lsb="0"/>
    <mtx name="glyph00219" width="0" lsb="0"/>
    <mtx name="glyph00220" width="0" lsb="0"/>
    <mtx name="glyph00221" width="0" lsb="0"/>
    <mtx name="glyph00222" width="0" lsb="0"/>
    <mtx name="glyph00223" width="0" lsb="0"/>
    <mtx name="glyph00224" width="0" lsb="0"/>
    <mtx name="glyph00225" width="2325" lsb="300"/>
    <mtx name="glyph00226" width="0" lsb="0"/>
    <mtx name="glyph00227" width="0" lsb="0"/>
    <mtx name="glyph00228" width="0" lsb="0"/>
    <mtx name="glyph00229" width="0" lsb="0"/>
    <mtx name="glyph00230" width="0" lsb="0"/>
    <mtx name="glyph00231" width="0" lsb="0"/>
    <mtx name="glyph00232" width="0" lsb="0"/>
    <mtx name="glyph00233" width="0" lsb="0"/>
    <mtx name="glyph00234" width="0" lsb="0"/>
    <mtx name="glyph00235" width="1550" lsb="300"/>
    <mtx name="glyph00236" width="1550" lsb="200"/>
    <mtx name="glyph00237" width="0" lsb="0"/>
    <mtx name="glyph00238" width="0" lsb="0"/>
    <mtx name="glyph00239" width="0" lsb="0"/>
    <mtx name="glyph00240" width="1550" lsb="125"/>
    <mtx name="uni1789" width="2325" lsb="300"/>
    <mtx name="uni1793" width="1550" lsb="300"/>
    <mtx name="uni1794" width="1550" lsb="125"/>
    <mtx name="uni1798" width="1550" lsb="125"/>
    <mtx name="uni17B6" width="775" lsb="-398"/>
    <mtx name="uni17BB" width="0" lsb="-525"/>
    <mtx name="uni17BE" width="0" lsb="-1100"/>
    <mtx name="uni17C6" width="0" lsb="-900"/>
  </hmtx>

  <cmap>
    <tableVersion version="0"/>
    <cmap_format_4 platformID="0" platEncID="3" language="0">
      <map code="0x1789" name="uni1789"/><!-- KHMER LETTER NYO -->
      <map code="0x1793" name="uni1793"/><!-- KHMER LETTER NO -->
      <map code="0x1794" name="uni1794"/><!-- KHMER LETTER BA -->
      <map code="0x1798" name="uni1798"/><!-- KHMER LETTER MO -->
      <map code="0x17b6" name="uni17B6"/><!-- KHMER VOWEL SIGN AA -->
      <map code="0x17bb" name="uni17BB"/><!-- KHMER VOWEL SIGN U -->
      <map code="0x17be" name="uni17BE"/><!-- KHMER VOWEL SIGN OE -->
      <map code="0x17c6" name="uni17C6"/><!-- KHMER SIGN NIKAHIT -->
    </cmap_format_4>
    <cmap_format_4 platformID="3" platEncID="1" language="0">
      <map code="0x1789" name="uni1789"/><!-- KHMER LETTER NYO -->
      <map code="0x1793" name="uni1793"/><!-- KHMER LETTER NO -->
      <map code="0x1794" name="uni1794"/><!-- KHMER LETTER BA -->
      <map code="0x1798" name="uni1798"/><!-- KHMER LETTER MO -->
      <map code="0x17b6" name="uni17B6"/><!-- KHMER VOWEL SIGN AA -->
      <map code="0x17bb" name="uni17BB"/><!-- KHMER VOWEL SIGN U -->
      <map code="0x17be" name="uni17BE"/><!-- KHMER VOWEL SIGN OE -->
      <map code="0x17c6" name="uni17C6"/><!-- KHMER SIGN NIKAHIT -->
    </cmap_format_4>
  </cmap>

  <fpgm>
    <assembly>
      NPUSHB[ ]	/* 69 values pushed */
      89 88 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63
      62 61 60 59 58 57 56 55 54 53 49 48 47 46 45 44 40 39 38 37 36 35 34 33 31
      24 20 17 16 15 14 13 11 10 9 8 7 6 5 4 3 2 1 0
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        38
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        38
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        32
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        70
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        32
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        38
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        32
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        64
        SUB[ ]	/* Subtract */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        102
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        64
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        38
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        64
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        SCFS[ ]	/* SetCoordFromStackFP */
        SCFS[ ]	/* SetCoordFromStackFP */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        SRP0[ ]	/* SetRefPoint0 */
        DUP[ ]	/* DuplicateTopStack */
        ALIGNRP[ ]	/* AlignRelativePt */
        SVTCA[0]	/* SetFPVectorToAxis */
        ALIGNRP[ ]	/* AlignRelativePt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        205
        WCVTP[ ]	/* WriteCVTInPixels */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHW[ ]	/* 1 value pushed */
        346
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          141
          WCVTP[ ]	/* WriteCVTInPixels */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        237
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          77
          WCVTP[ ]	/* WriteCVTInPixels */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        MINDEX[ ]	/* MoveXToTopStack */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          13
          WCVTP[ ]	/* WriteCVTInPixels */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        RTG[ ]	/* RoundToGrid */
        ROUND[00]	/* Round */
        WCVTP[ ]	/* WriteCVTInPixels */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        70
        SROUND[ ]	/* SuperRound */
        ROUND[00]	/* Round */
        ROLL[ ]	/* RollTopThreeStack */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        11 10
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        RS[ ]	/* ReadStore */
        NEG[ ]	/* Negate */
        SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 2 values pushed */
        10 11
        RS[ ]	/* ReadStore */
        SWAP[ ]	/* SwapTopStack */
        RS[ ]	/* ReadStore */
        SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        40
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 2 values pushed */
        1 40
        MIAP[0]	/* MoveIndirectAbsPt */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        40
        SWAP[ ]	/* SwapTopStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        PUSHB[ ]	/* 2 values pushed */
        2 40
        RCVT[ ]	/* ReadCVT */
        MSIRP[0]	/* MoveStackIndirRelPt */
        PUSHB[ ]	/* 2 values pushed */
        2 0
        SFVTL[0]	/* SetFVectorToLine */
        GFV[ ]	/* GetFVector */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        RCVT[ ]	/* ReadCVT */
        SUB[ ]	/* Subtract */
        ABS[ ]	/* Absolute */
        PUSHB[ ]	/* 1 value pushed */
        80
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MD[0]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        14
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        0
        RS[ ]	/* ReadStore */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        7
        RS[ ]	/* ReadStore */
        NEG[ ]	/* Negate */
        SPVFS[ ]	/* SetPVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ROUND[01]	/* Round */
        PUSHB[ ]	/* 1 value pushed */
        64
        SUB[ ]	/* Subtract */
        PUSHB[ ]	/* 1 value pushed */
        0
        MAX[ ]	/* Maximum */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 2 values pushed */
        44 192
        ROLL[ ]	/* RollTopThreeStack */
        MIN[ ]	/* Minimum */
        PUSHW[ ]	/* 1 value pushed */
        4096
        DIV[ ]	/* Divide */
        ADD[ ]	/* Add */
        CALL[ ]	/* CallFunction */
        GPV[ ]	/* GetPVector */
        ABS[ ]	/* Absolute */
        SWAP[ ]	/* SwapTopStack */
        ABS[ ]	/* Absolute */
        SUB[ ]	/* Subtract */
        NOT[ ]	/* LogicalNot */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          3
          SUB[ ]	/* Subtract */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        ROLL[ ]	/* RollTopThreeStack */
        SPVTCA[1]	/* SetPVectorToAxis */
        RCVT[ ]	/* ReadCVT */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        SDPVTL[1]	/* SetDualPVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        17
        CALL[ ]	/* CallFunction */
        PUSHB[ ]	/* 1 value pushed */
        41
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        PUSHB[ ]	/* 1 value pushed */
        41
        ROFF[ ]	/* RoundOff */
        MIRP[00100]	/* MoveIndirectRelPt */
        RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        NEG[ ]	/* Negate */
        PUSHB[ ]	/* 1 value pushed */
        44
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        43
        SWAP[ ]	/* SwapTopStack */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          RCVT[ ]	/* ReadCVT */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        MIRP[10101]	/* MoveIndirectRelPt */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        MIRP[01101]	/* MoveIndirectRelPt */
        MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        MIRP[10101]	/* MoveIndirectRelPt */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        1
        SUB[ ]	/* Subtract */
        SWAP[ ]	/* SwapTopStack */
        MIRP[01101]	/* MoveIndirectRelPt */
        MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        6
        CINDEX[ ]	/* CopyXToTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        MIRP[10101]	/* MoveIndirectRelPt */
        SVTCA[0]	/* SetFPVectorToAxis */
        MIRP[01101]	/* MoveIndirectRelPt */
        MIRP[01100]	/* MoveIndirectRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        ROLL[ ]	/* RollTopThreeStack */
        ROLL[ ]	/* RollTopThreeStack */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        ADD[ ]	/* Add */
        ROLL[ ]	/* RollTopThreeStack */
        SUB[ ]	/* Subtract */
        PUSHW[ ]	/* 1 value pushed */
        -128
        DIV[ ]	/* Divide */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        SWAP[ ]	/* SwapTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 2 values pushed */
        12 12
        ROLL[ ]	/* RollTopThreeStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          PUSHW[ ]	/* 1 value pushed */
          -70
          MAX[ ]	/* Maximum */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 1 value pushed */
          70
          MIN[ ]	/* Minimum */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        16
        ADD[ ]	/* Add */
        ROUND[00]	/* Round */
        SVTCA[1]	/* SetFPVectorToAxis */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        GT[ ]	/* GreaterThan */
        MPPEM[ ]	/* MeasurePixelPerEm */
        PUSHB[ ]	/* 1 value pushed */
        19
        LTEQ[ ]	/* LessThenOrEqual */
        OR[ ]	/* LogicalOr */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[0]	/* GetCoordOnPVector */
          DUP[ ]	/* DuplicateTopStack */
          ROUND[00]	/* Round */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MIAP[1]	/* MoveIndirectAbsPt */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SRP1[ ]	/* SetRefPoint1 */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        GC[0]	/* GetCoordOnPVector */
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          2
          CINDEX[ ]	/* CopyXToTopStack */
          GC[0]	/* GetCoordOnPVector */
          DUP[ ]	/* DuplicateTopStack */
          ROUND[00]	/* Round */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MIAP[1]	/* MoveIndirectAbsPt */
          SWAP[ ]	/* SwapTopStack */
          POP[ ]	/* PopTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SRP1[ ]	/* SetRefPoint1 */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        7
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        6
        RS[ ]	/* ReadStore */
        SFVFS[ ]	/* SetFVectorFromStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        GPV[ ]	/* GetPVector */
        ABS[ ]	/* Absolute */
        SWAP[ ]	/* SwapTopStack */
        ABS[ ]	/* Absolute */
        MAX[ ]	/* Maximum */
        PUSHW[ ]	/* 1 value pushed */
        16384
        DIV[ ]	/* Divide */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        128
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          GPV[ ]	/* GetPVector */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          ABS[ ]	/* Absolute */
          MAX[ ]	/* Maximum */
          PUSHW[ ]	/* 1 value pushed */
          8192
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 3 values pushed */
          0 64 47
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        2
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        POP[ ]	/* PopTopStack */
        PUSHB[ ]	/* 1 value pushed */
        192
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          GPV[ ]	/* GetPVector */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          ABS[ ]	/* Absolute */
          MAX[ ]	/* Maximum */
          PUSHW[ ]	/* 1 value pushed */
          5461
          DIV[ ]	/* Divide */
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 3 values pushed */
          0 128 47
          CALL[ ]	/* CallFunction */
        EIF[ ]	/* EndIf */
        PUSHB[ ]	/* 1 value pushed */
        2
        ADD[ ]	/* Add */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        GPV[ ]	/* GetPVector */
        ABS[ ]	/* Absolute */
        SWAP[ ]	/* SwapTopStack */
        ABS[ ]	/* Absolute */
        MAX[ ]	/* Maximum */
        PUSHW[ ]	/* 1 value pushed */
        16384
        DIV[ ]	/* Divide */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          ROLL[ ]	/* RollTopThreeStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[01]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          64
          MAX[ ]	/* Maximum */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          128
          DIV[ ]	/* Divide */
          PUSHB[ ]	/* 1 value pushed */
          32
          SUB[ ]	/* Subtract */
          ROUND[10]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          14
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          SWAP[ ]	/* SwapTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MIRP[10110]	/* MoveIndirectRelPt */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          SWAP[ ]	/* SwapTopStack */
          ROLL[ ]	/* RollTopThreeStack */
          SRP2[ ]	/* SetRefPoint2 */
          SRP1[ ]	/* SetRefPoint1 */
          DUP[ ]	/* DuplicateTopStack */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          ABS[ ]	/* Absolute */
          ROUND[01]	/* Round */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          5
          MINDEX[ ]	/* MoveXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          MD[0]	/* MeasureDistance */
          ABS[ ]	/* Absolute */
          SWAP[ ]	/* SwapTopStack */
          SUB[ ]	/* Subtract */
          PUSHB[ ]	/* 1 value pushed */
          128
          DIV[ ]	/* Divide */
          PUSHB[ ]	/* 1 value pushed */
          32
          SUB[ ]	/* Subtract */
          ROUND[10]	/* Round */
          PUSHB[ ]	/* 1 value pushed */
          14
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          MIRP[10110]	/* MoveIndirectRelPt */
          ROLL[ ]	/* RollTopThreeStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          14
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 1 value pushed */
          14
          MIRP[10110]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          14
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 1 value pushed */
          14
          MIRP[01101]	/* MoveIndirectRelPt */
        ELSE[ ]	/* Else */
          ROLL[ ]	/* RollTopThreeStack */
          PUSHB[ ]	/* 1 value pushed */
          4
          MINDEX[ ]	/* MoveXToTopStack */
          SRP1[ ]	/* SetRefPoint1 */
          SRP2[ ]	/* SetRefPoint2 */
          DUP[ ]	/* DuplicateTopStack */
          IP[ ]	/* InterpolatePts */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          IP[ ]	/* InterpolatePts */
          MDAP[1]	/* MoveDirectAbsPt */
          MDAP[1]	/* MoveDirectAbsPt */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        SROUND[ ]	/* SuperRound */
        ROUND[00]	/* Round */
        RTG[ ]	/* RoundToGrid */
        PUSHB[ ]	/* 1 value pushed */
        128
        DIV[ ]	/* Divide */
        DUP[ ]	/* DuplicateTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        72
        CALL[ ]	/* CallFunction */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        0
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          64
          WCVTP[ ]	/* WriteCVTInPixels */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          PUSHB[ ]	/* 1 value pushed */
          64
          SUB[ ]	/* Subtract */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 2 values pushed */
        48 47
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        SUB[ ]	/* Subtract */
        ADD[ ]	/* Add */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        ROUND[01]	/* Round */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          47
          SWAP[ ]	/* SwapTopStack */
          WCVTF[ ]	/* WriteCVTInFUnits */
          PUSHB[ ]	/* 1 value pushed */
          20
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ROUND[01]	/* Round */
          GTEQ[ ]	/* GreaterThanOrEqual */
          IF[ ]	/* If */
            WCVTP[ ]	/* WriteCVTInPixels */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        PUSHB[ ]	/* 1 value pushed */
        20
        RS[ ]	/* ReadStore */
        PUSHB[ ]	/* 1 value pushed */
        0
        ADD[ ]	/* Add */
        MUL[ ]	/* Multiply */
        PUSHB[ ]	/* 1 value pushed */
        1
        ADD[ ]	/* Add */
        ROUND[01]	/* Round */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        47
        RCVT[ ]	/* ReadCVT */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        ROLL[ ]	/* RollTopThreeStack */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        SWAP[ ]	/* SwapTopStack */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          51 -32
          PUSHB[ ]	/* 2 values pushed */
          52 32
        ELSE[ ]	/* Else */
          PUSHB[ ]	/* 4 values pushed */
          51 0 52 0
        EIF[ ]	/* EndIf */
        WCVTP[ ]	/* WriteCVTInPixels */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        22
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          3
          MINDEX[ ]	/* MoveXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ROLL[ ]	/* RollTopThreeStack */
          IF[ ]	/* If */
            ABS[ ]	/* Absolute */
            FLOOR[ ]	/* Floor */
            PUSHB[ ]	/* 1 value pushed */
            31
            ADD[ ]	/* Add */
          ELSE[ ]	/* Else */
            ABS[ ]	/* Absolute */
            PUSHB[ ]	/* 1 value pushed */
            32
            ADD[ ]	/* Add */
            FLOOR[ ]	/* Floor */
            DUP[ ]	/* DuplicateTopStack */
            IF[ ]	/* If */
            ELSE[ ]	/* Else */
              POP[ ]	/* PopTopStack */
              PUSHB[ ]	/* 1 value pushed */
              64
            EIF[ ]	/* EndIf */
            PUSHB[ ]	/* 1 value pushed */
            1
            SUB[ ]	/* Subtract */
          EIF[ ]	/* EndIf */
          SWAP[ ]	/* SwapTopStack */
          IF[ ]	/* If */
            NEG[ ]	/* Negate */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          SWAP[ ]	/* SwapTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          41
          MIRP[00000]	/* MoveIndirectRelPt */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          MPPEM[ ]	/* MeasurePixelPerEm */
          GTEQ[ ]	/* GreaterThanOrEqual */
          SWAP[ ]	/* SwapTopStack */
          MPPEM[ ]	/* MeasurePixelPerEm */
          LTEQ[ ]	/* LessThenOrEqual */
          AND[ ]	/* LogicalAnd */
          IF[ ]	/* If */
            SHPIX[ ]	/* ShiftZoneByPixel */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            POP[ ]	/* PopTopStack */
          EIF[ ]	/* EndIf */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        22
        RS[ ]	/* ReadStore */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          RCVT[ ]	/* ReadCVT */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          32
          ADD[ ]	/* Add */
          FLOOR[ ]	/* Floor */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
          ELSE[ ]	/* Else */
            POP[ ]	/* PopTopStack */
            PUSHB[ ]	/* 1 value pushed */
            64
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          1
          SUB[ ]	/* Subtract */
          SWAP[ ]	/* SwapTopStack */
          IF[ ]	/* If */
          ELSE[ ]	/* Else */
            NEG[ ]	/* Negate */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          41
          SWAP[ ]	/* SwapTopStack */
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          CINDEX[ ]	/* CopyXToTopStack */
          SFVTL[0]	/* SetFVectorToLine */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            SPVTCA[0]	/* SetPVectorToAxis */
          ELSE[ ]	/* Else */
            SPVTCA[1]	/* SetPVectorToAxis */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[0]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          ALIGNRP[ ]	/* AlignRelativePt */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          SFVTL[0]	/* SetFVectorToLine */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          DUP[ ]	/* DuplicateTopStack */
          GC[0]	/* GetCoordOnPVector */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          ADD[ ]	/* Add */
          SWAP[ ]	/* SwapTopStack */
          WS[ ]	/* WriteStore */
          ALIGNRP[ ]	/* AlignRelativePt */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            SVTCA[1]	/* SetFPVectorToAxis */
          ELSE[ ]	/* Else */
            SVTCA[0]	/* SetFPVectorToAxis */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          41
          MIRP[00000]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          41
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          NEG[ ]	/* Negate */
          WCVTP[ ]	/* WriteCVTInPixels */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          SRP0[ ]	/* SetRefPoint0 */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          41
          MIRP[00000]	/* MoveIndirectRelPt */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          8
          CINDEX[ ]	/* CopyXToTopStack */
          SFVTL[0]	/* SetFVectorToLine */
          DUP[ ]	/* DuplicateTopStack */
          IF[ ]	/* If */
            SPVTCA[0]	/* SetPVectorToAxis */
          ELSE[ ]	/* Else */
            SPVTCA[1]	/* SetPVectorToAxis */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 1 value pushed */
          5
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          RS[ ]	/* ReadStore */
          SCFS[ ]	/* SetCoordFromStackFP */
          PUSHB[ ]	/* 1 value pushed */
          4
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          7
          CINDEX[ ]	/* CopyXToTopStack */
          SFVTL[0]	/* SetFVectorToLine */
          PUSHB[ ]	/* 1 value pushed */
          6
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          3
          CINDEX[ ]	/* CopyXToTopStack */
          PUSHB[ ]	/* 1 value pushed */
          1
          ADD[ ]	/* Add */
          RS[ ]	/* ReadStore */
          SCFS[ ]	/* SetCoordFromStackFP */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SPVTCA[0]	/* SetPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        5
        CINDEX[ ]	/* CopyXToTopStack */
        SFVTL[0]	/* SetFVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        RCVT[ ]	/* ReadCVT */
        SCFS[ ]	/* SetCoordFromStackFP */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SPVTCA[0]	/* SetPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        3
        CINDEX[ ]	/* CopyXToTopStack */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        4
        CINDEX[ ]	/* CopyXToTopStack */
        SFVTL[0]	/* SetFVectorToLine */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        RS[ ]	/* ReadStore */
        SCFS[ ]	/* SetCoordFromStackFP */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
        POP[ ]	/* PopTopStack */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        RCVT[ ]	/* ReadCVT */
        RTG[ ]	/* RoundToGrid */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        0
        LT[ ]	/* LessThan */
        DUP[ ]	/* DuplicateTopStack */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          NEG[ ]	/* Negate */
          SWAP[ ]	/* SwapTopStack */
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        ROUND[00]	/* Round */
        DUP[ ]	/* DuplicateTopStack */
        PUSHB[ ]	/* 1 value pushed */
        64
        LT[ ]	/* LessThan */
        IF[ ]	/* If */
          POP[ ]	/* PopTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
        EIF[ ]	/* EndIf */
        SWAP[ ]	/* SwapTopStack */
        IF[ ]	/* If */
          NEG[ ]	/* Negate */
        EIF[ ]	/* EndIf */
        ROLL[ ]	/* RollTopThreeStack */
        ADD[ ]	/* Add */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
          WCVTP[ ]	/* WriteCVTInPixels */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        POP[ ]	/* PopTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          70
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          71
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          72
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        2
        RS[ ]	/* ReadStore */
        EQ[ ]	/* Equal */
        IF[ ]	/* If */
          PUSHB[ ]	/* 1 value pushed */
          73
          CALL[ ]	/* CallFunction */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SFVTL[0]	/* SetFVectorToLine */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GTEQ[ ]	/* GreaterThanOrEqual */
        ROLL[ ]	/* RollTopThreeStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          SHPIX[ ]	/* ShiftZoneByPixel */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        MD[0]	/* MeasureDistance */
        PUSHB[ ]	/* 1 value pushed */
        0
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          DUP[ ]	/* DuplicateTopStack */
          PUSHB[ ]	/* 1 value pushed */
          64
          SHPIX[ ]	/* ShiftZoneByPixel */
          SRP1[ ]	/* SetRefPoint1 */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        SVTCA[1]	/* SetFPVectorToAxis */
        GC[0]	/* GetCoordOnPVector */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        ADD[ ]	/* Add */
        SWAP[ ]	/* SwapTopStack */
        GC[0]	/* GetCoordOnPVector */
        SUB[ ]	/* Subtract */
        SWAP[ ]	/* SwapTopStack */
        DUP[ ]	/* DuplicateTopStack */
        SRP0[ ]	/* SetRefPoint0 */
        DUP[ ]	/* DuplicateTopStack */
        GC[0]	/* GetCoordOnPVector */
        ROLL[ ]	/* RollTopThreeStack */
        SUB[ ]	/* Subtract */
        PUSHW[ ]	/* 1 value pushed */
        -128
        DIV[ ]	/* Divide */
        ROLL[ ]	/* RollTopThreeStack */
        PUSHB[ ]	/* 2 values pushed */
        64 64
        ROLL[ ]	/* RollTopThreeStack */
        WCVTF[ ]	/* WriteCVTInFUnits */
        RCVT[ ]	/* ReadCVT */
        ADD[ ]	/* Add */
        ROUND[00]	/* Round */
        MSIRP[0]	/* MoveStackIndirRelPt */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        DUP[ ]	/* DuplicateTopStack */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        MD[0]	/* MeasureDistance */
        ABS[ ]	/* Absolute */
        ROLL[ ]	/* RollTopThreeStack */
        SWAP[ ]	/* SwapTopStack */
        GTEQ[ ]	/* GreaterThanOrEqual */
        IF[ ]	/* If */
          ALIGNRP[ ]	/* AlignRelativePt */
        ELSE[ ]	/* Else */
          POP[ ]	/* PopTopStack */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        MPPEM[ ]	/* MeasurePixelPerEm */
        GT[ ]	/* GreaterThan */
        IF[ ]	/* If */
          RDTG[ ]	/* RoundDownToGrid */
        ELSE[ ]	/* Else */
          ROFF[ ]	/* RoundOff */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        18
        SVTCA[0]	/* SetFPVectorToAxis */
        MPPEM[ ]	/* MeasurePixelPerEm */
        SVTCA[1]	/* SetFPVectorToAxis */
        MPPEM[ ]	/* MeasurePixelPerEm */
        EQ[ ]	/* Equal */
        WS[ ]	/* WriteStore */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 2 values pushed */
        2 0
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 2 values pushed */
        35 1
        GETINFO[ ]	/* GetInfo */
        LTEQ[ ]	/* LessThenOrEqual */
        PUSHB[ ]	/* 2 values pushed */
        64 1
        GETINFO[ ]	/* GetInfo */
        GTEQ[ ]	/* GreaterThanOrEqual */
        AND[ ]	/* LogicalAnd */
        IF[ ]	/* If */
          PUSHW[ ]	/* 2 values pushed */
          4096 32
          GETINFO[ ]	/* GetInfo */
          EQ[ ]	/* Equal */
          IF[ ]	/* If */
            PUSHB[ ]	/* 3 values pushed */
            2 1 2
            RS[ ]	/* ReadStore */
            ADD[ ]	/* Add */
            WS[ ]	/* WriteStore */
          EIF[ ]	/* EndIf */
          PUSHB[ ]	/* 2 values pushed */
          36 1
          GETINFO[ ]	/* GetInfo */
          LTEQ[ ]	/* LessThenOrEqual */
          IF[ ]	/* If */
            PUSHW[ ]	/* 2 values pushed */
            8192 64
            GETINFO[ ]	/* GetInfo */
            EQ[ ]	/* Equal */
            IF[ ]	/* If */
              PUSHB[ ]	/* 3 values pushed */
              2 2 2
              RS[ ]	/* ReadStore */
              ADD[ ]	/* Add */
              WS[ ]	/* WriteStore */
              PUSHB[ ]	/* 2 values pushed */
              36 1
              GETINFO[ ]	/* GetInfo */
              EQ[ ]	/* Equal */
              IF[ ]	/* If */
                PUSHB[ ]	/* 3 values pushed */
                2 32 2
                RS[ ]	/* ReadStore */
                ADD[ ]	/* Add */
                WS[ ]	/* WriteStore */
                SVTCA[0]	/* SetFPVectorToAxis */
                MPPEM[ ]	/* MeasurePixelPerEm */
                SVTCA[1]	/* SetFPVectorToAxis */
                MPPEM[ ]	/* MeasurePixelPerEm */
                GT[ ]	/* GreaterThan */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 8 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
              ELSE[ ]	/* Else */
                PUSHW[ ]	/* 2 values pushed */
                16384 128
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 4 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHW[ ]	/* 2 values pushed */
                16384 128
                MUL[ ]	/* Multiply */
                PUSHW[ ]	/* 1 value pushed */
                256
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 8 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHW[ ]	/* 2 values pushed */
                16384 256
                MUL[ ]	/* Multiply */
                PUSHW[ ]	/* 1 value pushed */
                512
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 16 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
                PUSHW[ ]	/* 2 values pushed */
                16384 512
                MUL[ ]	/* Multiply */
                PUSHW[ ]	/* 1 value pushed */
                1024
                GETINFO[ ]	/* GetInfo */
                EQ[ ]	/* Equal */
                IF[ ]	/* If */
                  PUSHB[ ]	/* 3 values pushed */
                  2 64 2
                  RS[ ]	/* ReadStore */
                  ADD[ ]	/* Add */
                  WS[ ]	/* WriteStore */
                EIF[ ]	/* EndIf */
              EIF[ ]	/* EndIf */
            EIF[ ]	/* EndIf */
          EIF[ ]	/* EndIf */
        EIF[ ]	/* EndIf */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        RCVT[ ]	/* ReadCVT */
        RTG[ ]	/* RoundToGrid */
        ROUND[00]	/* Round */
        SWAP[ ]	/* SwapTopStack */
        MPPEM[ ]	/* MeasurePixelPerEm */
        LTEQ[ ]	/* LessThenOrEqual */
        IF[ ]	/* If */
          SWAP[ ]	/* SwapTopStack */
          DUP[ ]	/* DuplicateTopStack */
          RCVT[ ]	/* ReadCVT */
          DUP[ ]	/* DuplicateTopStack */
          ABS[ ]	/* Absolute */
          PUSHB[ ]	/* 1 value pushed */
          64
          LT[ ]	/* LessThan */
          IF[ ]	/* If */
            RUTG[ ]	/* RoundUpToGrid */
          EIF[ ]	/* EndIf */
          ROUND[00]	/* Round */
          ROLL[ ]	/* RollTopThreeStack */
          ADD[ ]	/* Add */
        EIF[ ]	/* EndIf */
        WCVTP[ ]	/* WriteCVTInPixels */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        PUSHB[ ]	/* 1 value pushed */
        0
        SZPS[ ]	/* SetZonePointerS */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        PUSHB[ ]	/* 1 value pushed */
        2
        CINDEX[ ]	/* CopyXToTopStack */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        MIAP[0]	/* MoveIndirectAbsPt */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        2
        SWAP[ ]	/* SwapTopStack */
        MIAP[0]	/* MoveIndirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        1 2
        SPVTL[0]	/* SetPVectorToLine */
        GPV[ ]	/* GetPVector */
        PUSHB[ ]	/* 1 value pushed */
        10
        SWAP[ ]	/* SwapTopStack */
        NEG[ ]	/* Negate */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        11
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        SVTCA[1]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        1
        SWAP[ ]	/* SwapTopStack */
        MIAP[1]	/* MoveIndirectAbsPt */
        SVTCA[0]	/* SetFPVectorToAxis */
        PUSHB[ ]	/* 1 value pushed */
        2
        SWAP[ ]	/* SwapTopStack */
        MIAP[1]	/* MoveIndirectAbsPt */
        PUSHB[ ]	/* 2 values pushed */
        1 2
        SPVTL[0]	/* SetPVectorToLine */
        GPV[ ]	/* GetPVector */
        PUSHB[ ]	/* 1 value pushed */
        6
        SWAP[ ]	/* SwapTopStack */
        NEG[ ]	/* Negate */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        7
        SWAP[ ]	/* SwapTopStack */
        WS[ ]	/* WriteStore */
        PUSHB[ ]	/* 1 value pushed */
        1
        SZPS[ ]	/* SetZonePointerS */
        SVTCA[1]	/* SetFPVectorToAxis */
      ENDF[ ]	/* EndFunctionDefinition */
      FDEF[ ]	/* FunctionDefinition */
        ROFF[ ]	/* RoundOff */
        ROLL[ ]	/* RollTopThreeStack */
        SRP0[ ]	/* SetRefPoint0 */
        RCVT[ ]	/* ReadCVT */
        SWAP[ ]	/* SwapTopStack */
        MIRP[10101]	/* MoveIndirectRelPt */
        RTG[ ]	/* RoundToGrid */
      ENDF[ ]	/* EndFunctionDefinition */
    </assembly>
  </fpgm>

  <prep>
    <assembly>
      NPUSHB[ ]	/* 16 values pushed */
      9 248 3 255 31 143 247 159 247 2 127 243 1 96 242 1
      PUSHW[ ]	/* 1 value pushed */
      -24
      NPUSHB[ ]	/* 43 values pushed */
      235 12 16 70 223 51 221 85 222 255 220 85 48 221 1 221 1 3 85 220 3 250 31 48 194
      1 111 192 239 192 2 252 182 24 31 48 183 1 96 183 128 183 2
      PUSHW[ ]	/* 1 value pushed */
      -64
      NPUSHB[ ]	/* 56 values pushed */
      183 15 19 70 231 177 1 31 175 47 175 63 175 3 79 175 95 175 111 175 3 64 175 15 19
      70 172 81 24 31 31 156 95 156 2 224 155 1 3 43 154 1 31 154 1 144 154 160 154 2
      115 154 131 154 2 5
      PUSHW[ ]	/* 1 value pushed */
      -22
      NPUSHB[ ]	/* 25 values pushed */
      154 9 11 70 175 151 191 151 2 3 43 150 1 31 150 1 159 150 175 150 2 124 150 1 5
      PUSHW[ ]	/* 1 value pushed */
      -22
      NPUSHB[ ]	/* 133 values pushed */
      150 9 11 70 47 146 63 146 79 146 3 64 146 12 15 70 47 145 1 159 145 1 135 134 24
      31 64 124 80 124 2 3 16 116 32 116 48 116 3 2 116 1 242 116 1 10 111 1 255 111
      1 169 111 1 151 111 1 117 111 133 111 2 75 111 1 10 110 1 255 110 1 169 110 1 151
      110 1 75 110 1 6 26 1 24 85 25 19 255 31 7 4 255 31 6 3 255 31 63 103 1
      31 103 47 103 63 103 255 103 4 64 102 80 102 160 102 176 102 4 63 101 1 15 101 175 101
      2 5 160 100 224 100 2 3
      PUSHW[ ]	/* 1 value pushed */
      -64
      NPUSHB[ ]	/* 79 values pushed */
      100 6 10 70 97 95 43 31 96 95 71 31 95 80 34 31 247 91 1 236 91 1 84 91 132
      91 2 73 91 1 59 91 1 249 90 1 239 90 1 107 90 1 75 90 1 59 90 1 6 19
      51 18 85 5 1 3 85 4 51 3 85 31 3 1 15 3 63 3 175 3 3 15 87 31 87
      47 87 3 3
      PUSHW[ ]	/* 1 value pushed */
      -64
      PUSHB[ ]	/* 4 values pushed */
      86 18 21 70
      PUSHW[ ]	/* 1 value pushed */
      -32
      PUSHB[ ]	/* 4 values pushed */
      86 7 11 70
      PUSHW[ ]	/* 1 value pushed */
      -64
      PUSHB[ ]	/* 4 values pushed */
      84 18 21 70
      PUSHW[ ]	/* 1 value pushed */
      -64
      NPUSHB[ ]	/* 109 values pushed */
      84 6 11 70 82 80 43 31 63 80 79 80 95 80 3 250 72 1 239 72 1 135 72 1 101
      72 1 86 72 1 58 72 1 250 71 1 239 71 1 135 71 1 59 71 1 6 28 27 255 31
      22 51 21 85 17 1 15 85 16 51 15 85 2 1 0 85 1 71 0 85 251 250 43 31 250
      27 18 31 15 15 1 31 15 207 15 2 15 15 255 15 2 6 111 0 127 0 175 0 239 0
      4 16 0 1 128 22 1 5 1
      PUSHW[ ]	/* 1 value pushed */
      400
      PUSHB[ ]	/* 2 values pushed */
      84 83
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHW[ ]	/* 1 value pushed */
      2047
      GT[ ]	/* GreaterThan */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      6
      LT[ ]	/* LessThan */
      OR[ ]	/* LogicalOr */
      PUSHB[ ]	/* 1 value pushed */
      1
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      37
      GTEQ[ ]	/* GreaterThanOrEqual */
      PUSHB[ ]	/* 1 value pushed */
      1
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      64
      LTEQ[ ]	/* LessThenOrEqual */
      AND[ ]	/* LogicalAnd */
      PUSHB[ ]	/* 1 value pushed */
      6
      GETINFO[ ]	/* GetInfo */
      PUSHB[ ]	/* 1 value pushed */
      0
      NEQ[ ]	/* NotEqual */
      AND[ ]	/* LogicalAnd */
      OR[ ]	/* LogicalOr */
      IF[ ]	/* If */
        PUSHB[ ]	/* 2 values pushed */
        1 1
        INSTCTRL[ ]	/* SetInstrExecControl */
      EIF[ ]	/* EndIf */
      SCANCTRL[ ]	/* ScanConversionControl */
      SCANTYPE[ ]	/* ScanType */
      SCANTYPE[ ]	/* ScanType */
      SVTCA[0]	/* SetFPVectorToAxis */
      WS[ ]	/* WriteStore */
      SCVTCI[ ]	/* SetCVTCutIn */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      50
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        96
        SCVTCI[ ]	/* SetCVTCutIn */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      100
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        64
        SCVTCI[ ]	/* SetCVTCutIn */
      EIF[ ]	/* EndIf */
      MPPEM[ ]	/* MeasurePixelPerEm */
      PUSHB[ ]	/* 1 value pushed */
      128
      GTEQ[ ]	/* GreaterThanOrEqual */
      IF[ ]	/* If */
        PUSHB[ ]	/* 1 value pushed */
        16
        SCVTCI[ ]	/* SetCVTCutIn */
        PUSHB[ ]	/* 2 values pushed */
        22 0
        WS[ ]	/* WriteStore */
      EIF[ ]	/* EndIf */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SDB[ ]	/* SetDeltaBaseInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC3[ ]	/* DeltaExceptionC3 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SDB[ ]	/* SetDeltaBaseInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[0]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[1]	/* SetFPVectorToAxis */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[0]	/* SetFPVectorToAxis */
      SDS[ ]	/* SetDeltaShiftInGState */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      SVTCA[1]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC2[ ]	/* DeltaExceptionC2 */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      CALL[ ]	/* CallFunction */
      CALL[ ]	/* CallFunction */
      SVTCA[1]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      DELTAC1[ ]	/* DeltaExceptionC1 */
      SVTCA[0]	/* SetFPVectorToAxis */
      CALL[ ]	/* CallFunction */
      RTG[ ]	/* RoundToGrid */
      SDB[ ]	/* SetDeltaBaseInGState */
    </assembly>
  </prep>

  <cvt>
    <cv index="0" value="1556"/>
    <cv index="1" value="11"/>
    <cv index="2" value="78"/>
    <cv index="3" value="1462"/>
    <cv index="4" value="23"/>
    <cv index="5" value="117"/>
    <cv index="6" value="1462"/>
    <cv index="7" value="1485"/>
    <cv index="8" value="0"/>
    <cv index="9" value="0"/>
    <cv index="10" value="0"/>
    <cv index="11" value="0"/>
    <cv index="12" value="0"/>
    <cv index="13" value="0"/>
    <cv index="14" value="0"/>
    <cv index="15" value="1098"/>
    <cv index="16" value="20"/>
    <cv index="17" value="143"/>
    <cv index="18" value="0"/>
    <cv index="19" value="-20"/>
    <cv index="20" value="0"/>
    <cv index="21" value="0"/>
    <cv index="22" value="-20"/>
    <cv index="23" value="0"/>
    <cv index="24" value="0"/>
    <cv index="25" value="-20"/>
    <cv index="26" value="0"/>
    <cv index="27" value="-492"/>
    <cv index="28" value="-512"/>
    <cv index="29" value="0"/>
    <cv index="30" value="0"/>
    <cv index="31" value="0"/>
    <cv index="32" value="0"/>
    <cv index="33" value="0"/>
    <cv index="34" value="0"/>
    <cv index="35" value="0"/>
    <cv index="36" value="0"/>
    <cv index="37" value="0"/>
    <cv index="38" value="0"/>
    <cv index="39" value="0"/>
    <cv index="40" value="0"/>
    <cv index="41" value="0"/>
    <cv index="42" value="0"/>
    <cv index="43" value="0"/>
    <cv index="44" value="0"/>
    <cv index="45" value="0"/>
    <cv index="46" value="0"/>
    <cv index="47" value="0"/>
    <cv index="48" value="0"/>
    <cv index="49" value="0"/>
    <cv index="50" value="0"/>
    <cv index="51" value="0"/>
    <cv index="52" value="0"/>
    <cv index="53" value="0"/>
    <cv index="54" value="0"/>
    <cv index="55" value="0"/>
    <cv index="56" value="0"/>
    <cv index="57" value="0"/>
    <cv index="58" value="0"/>
    <cv index="59" value="0"/>
    <cv index="60" value="0"/>
    <cv index="61" value="0"/>
    <cv index="62" value="0"/>
    <cv index="63" value="0"/>
    <cv index="64" value="0"/>
    <cv index="65" value="0"/>
    <cv index="66" value="0"/>
    <cv index="67" value="2048"/>
    <cv index="68" value="0"/>
    <cv index="69" value="0"/>
    <cv index="70" value="172"/>
    <cv index="71" value="182"/>
    <cv index="72" value="188"/>
    <cv index="73" value="0"/>
    <cv index="74" value="213"/>
    <cv index="75" value="0"/>
    <cv index="76" value="0"/>
    <cv index="77" value="0"/>
    <cv index="78" value="85"/>
    <cv index="79" value="131"/>
    <cv index="80" value="151"/>
    <cv index="81" value="159"/>
    <cv index="82" value="125"/>
    <cv index="83" value="229"/>
    <cv index="84" value="174"/>
    <cv index="85" value="174"/>
    <cv index="86" value="113"/>
    <cv index="87" value="113"/>
    <cv index="88" value="0"/>
    <cv index="89" value="0"/>
    <cv index="90" value="186"/>
    <cv index="91" value="197"/>
    <cv index="92" value="186"/>
    <cv index="93" value="0"/>
    <cv index="94" value="0"/>
    <cv index="95" value="164"/>
    <cv index="96" value="159"/>
    <cv index="97" value="140"/>
    <cv index="98" value="0"/>
    <cv index="99" value="0"/>
    <cv index="100" value="199"/>
    <cv index="101" value="199"/>
    <cv index="102" value="125"/>
    <cv index="103" value="125"/>
    <cv index="104" value="0"/>
    <cv index="105" value="0"/>
    <cv index="106" value="0"/>
    <cv index="107" value="0"/>
    <cv index="108" value="0"/>
    <cv index="109" value="0"/>
    <cv index="110" value="176"/>
    <cv index="111" value="185"/>
    <cv index="112" value="138"/>
    <cv index="113" value="0"/>
    <cv index="114" value="0"/>
    <cv index="115" value="155"/>
    <cv index="116" value="166"/>
    <cv index="117" value="143"/>
    <cv index="118" value="119"/>
    <cv index="119" value="0"/>
    <cv index="120" value="0"/>
    <cv index="121" value="0"/>
    <cv index="122" value="0"/>
    <cv index="123" value="0"/>
    <cv index="124" value="150"/>
    <cv index="125" value="0"/>
    <cv index="126" value="0"/>
    <cv index="127" value="0"/>
    <cv index="128" value="0"/>
    <cv index="129" value="0"/>
    <cv index="130" value="105"/>
    <cv index="131" value="110"/>
    <cv index="132" value="144"/>
    <cv index="133" value="180"/>
    <cv index="134" value="193"/>
    <cv index="135" value="213"/>
    <cv index="136" value="0"/>
    <cv index="137" value="0"/>
    <cv index="138" value="0"/>
    <cv index="139" value="0"/>
    <cv index="140" value="102"/>
    <cv index="141" value="111"/>
    <cv index="142" value="120"/>
    <cv index="143" value="150"/>
    <cv index="144" value="192"/>
    <cv index="145" value="213"/>
    <cv index="146" value="327"/>
    <cv index="147" value="0"/>
    <cv index="148" value="0"/>
    <cv index="149" value="0"/>
    <cv index="150" value="254"/>
    <cv index="151" value="314"/>
    <cv index="152" value="197"/>
    <cv index="153" value="120"/>
    <cv index="154" value="254"/>
    <cv index="155" value="278"/>
    <cv index="156" value="502"/>
    <cv index="157" value="0"/>
    <cv index="158" value="0"/>
    <cv index="159" value="0"/>
    <cv index="160" value="0"/>
    <cv index="161" value="0"/>
    <cv index="162" value="0"/>
    <cv index="163" value="0"/>
    <cv index="164" value="0"/>
    <cv index="165" value="0"/>
    <cv index="166" value="0"/>
    <cv index="167" value="0"/>
    <cv index="168" value="238"/>
    <cv index="169" value="0"/>
    <cv index="170" value="150"/>
    <cv index="171" value="136"/>
    <cv index="172" value="174"/>
    <cv index="173" value="150"/>
    <cv index="174" value="137"/>
    <cv index="175" value="268"/>
    <cv index="176" value="150"/>
    <cv index="177" value="280"/>
    <cv index="178" value="0"/>
    <cv index="179" value="797"/>
    <cv index="180" value="148"/>
    <cv index="181" value="602"/>
    <cv index="182" value="130"/>
    <cv index="183" value="918"/>
    <cv index="184" value="0"/>
    <cv index="185" value="168"/>
    <cv index="186" value="140"/>
    <cv index="187" value="0"/>
    <cv index="188" value="0"/>
    <cv index="189" value="633"/>
    <cv index="190" value="217"/>
    <cv index="191" value="180"/>
    <cv index="192" value="266"/>
    <cv index="193" value="0"/>
    <cv index="194" value="387"/>
    <cv index="195" value="109"/>
    <cv index="196" value="127"/>
    <cv index="197" value="160"/>
    <cv index="198" value="0"/>
    <cv index="199" value="0"/>
    <cv index="200" value="109"/>
    <cv index="201" value="136"/>
    <cv index="202" value="0"/>
    <cv index="203" value="0"/>
    <cv index="204" value="0"/>
    <cv index="205" value="0"/>
    <cv index="206" value="0"/>
    <cv index="207" value="0"/>
    <cv index="208" value="0"/>
    <cv index="209" value="0"/>
    <cv index="210" value="147"/>
    <cv index="211" value="160"/>
    <cv index="212" value="0"/>
    <cv index="213" value="130"/>
    <cv index="214" value="137"/>
    <cv index="215" value="0"/>
    <cv index="216" value="0"/>
    <cv index="217" value="0"/>
    <cv index="218" value="0"/>
    <cv index="219" value="0"/>
    <cv index="220" value="1462"/>
    <cv index="221" value="-876"/>
    <cv index="222" value="17"/>
    <cv index="223" value="-17"/>
    <cv index="224" value="131"/>
    <cv index="225" value="143"/>
    <cv index="226" value="0"/>
    <cv index="227" value="0"/>
    <cv index="228" value="109"/>
    <cv index="229" value="123"/>
    <cv index="230" value="0"/>
    <cv index="231" value="0"/>
    <cv index="232" value="0"/>
    <cv index="233" value="0"/>
    <cv index="234" value="0"/>
    <cv index="235" value="188"/>
    <cv index="236" value="426"/>
    <cv index="237" value="852"/>
    <cv index="238" value="0"/>
    <cv index="239" value="0"/>
    <cv index="240" value="188"/>
    <cv index="241" value="182"/>
    <cv index="242" value="471"/>
    <cv index="243" value="405"/>
    <cv index="244" value="0"/>
    <cv index="245" value="150"/>
    <cv index="246" value="256"/>
    <cv index="247" value="174"/>
    <cv index="248" value="1462"/>
    <cv index="249" value="-324"/>
    <cv index="250" value="-401"/>
    <cv index="251" value="-381"/>
    <cv index="252" value="111"/>
    <cv index="253" value="685"/>
  </cvt>

  <loca>
    <!-- The 'loca' table will be calculated by the compiler -->
  </loca>

  <glyf>

    <!-- The xMin, yMin, xMax and yMax values
         will be recalculated by the compiler. -->

    <TTGlyph name=".notdef"/><!-- contains no outline data -->

    <TTGlyph name="glyph00001"/><!-- contains no outline data -->

    <TTGlyph name="glyph00002"/><!-- contains no outline data -->

    <TTGlyph name="glyph00003"/><!-- contains no outline data -->

    <TTGlyph name="glyph00004"/><!-- contains no outline data -->

    <TTGlyph name="glyph00005"/><!-- contains no outline data -->

    <TTGlyph name="glyph00006"/><!-- contains no outline data -->

    <TTGlyph name="glyph00007"/><!-- contains no outline data -->

    <TTGlyph name="glyph00008"/><!-- contains no outline data -->

    <TTGlyph name="glyph00009"/><!-- contains no outline data -->

    <TTGlyph name="glyph00010"/><!-- contains no outline data -->

    <TTGlyph name="glyph00011"/><!-- contains no outline data -->

    <TTGlyph name="glyph00012"/><!-- contains no outline data -->

    <TTGlyph name="glyph00013"/><!-- contains no outline data -->

    <TTGlyph name="glyph00014"/><!-- contains no outline data -->

    <TTGlyph name="glyph00015"/><!-- contains no outline data -->

    <TTGlyph name="glyph00016"/><!-- contains no outline data -->

    <TTGlyph name="glyph00017"/><!-- contains no outline data -->

    <TTGlyph name="glyph00018"/><!-- contains no outline data -->

    <TTGlyph name="glyph00019"/><!-- contains no outline data -->

    <TTGlyph name="glyph00020"/><!-- contains no outline data -->

    <TTGlyph name="glyph00021"/><!-- contains no outline data -->

    <TTGlyph name="glyph00022"/><!-- contains no outline data -->

    <TTGlyph name="glyph00023"/><!-- contains no outline data -->

    <TTGlyph name="glyph00024"/><!-- contains no outline data -->

    <TTGlyph name="glyph00025"/><!-- contains no outline data -->

    <TTGlyph name="glyph00026"/><!-- contains no outline data -->

    <TTGlyph name="glyph00027"/><!-- contains no outline data -->

    <TTGlyph name="glyph00028"/><!-- contains no outline data -->

    <TTGlyph name="glyph00029"/><!-- contains no outline data -->

    <TTGlyph name="glyph00030"/><!-- contains no outline data -->

    <TTGlyph name="glyph00031"/><!-- contains no outline data -->

    <TTGlyph name="glyph00032"/><!-- contains no outline data -->

    <TTGlyph name="glyph00033"/><!-- contains no outline data -->

    <TTGlyph name="glyph00034"/><!-- contains no outline data -->

    <TTGlyph name="glyph00035"/><!-- contains no outline data -->

    <TTGlyph name="glyph00036"/><!-- contains no outline data -->

    <TTGlyph name="glyph00037"/><!-- contains no outline data -->

    <TTGlyph name="glyph00038"/><!-- contains no outline data -->

    <TTGlyph name="glyph00039"/><!-- contains no outline data -->

    <TTGlyph name="glyph00040"/><!-- contains no outline data -->

    <TTGlyph name="glyph00041"/><!-- contains no outline data -->

    <TTGlyph name="glyph00042"/><!-- contains no outline data -->

    <TTGlyph name="glyph00043"/><!-- contains no outline data -->

    <TTGlyph name="glyph00044"/><!-- contains no outline data -->

    <TTGlyph name="glyph00045"/><!-- contains no outline data -->

    <TTGlyph name="glyph00046"/><!-- contains no outline data -->

    <TTGlyph name="glyph00047"/><!-- contains no outline data -->

    <TTGlyph name="glyph00048"/><!-- contains no outline data -->

    <TTGlyph name="glyph00049"/><!-- contains no outline data -->

    <TTGlyph name="glyph00050"/><!-- contains no outline data -->

    <TTGlyph name="glyph00051"/><!-- contains no outline data -->

    <TTGlyph name="glyph00052"/><!-- contains no outline data -->

    <TTGlyph name="glyph00054"/><!-- contains no outline data -->

    <TTGlyph name="glyph00055"/><!-- contains no outline data -->

    <TTGlyph name="glyph00056"/><!-- contains no outline data -->

    <TTGlyph name="glyph00057"/><!-- contains no outline data -->

    <TTGlyph name="glyph00058"/><!-- contains no outline data -->

    <TTGlyph name="glyph00059"/><!-- contains no outline data -->

    <TTGlyph name="glyph00060"/><!-- contains no outline data -->

    <TTGlyph name="glyph00061"/><!-- contains no outline data -->

    <TTGlyph name="glyph00062"/><!-- contains no outline data -->

    <TTGlyph name="glyph00065"/><!-- contains no outline data -->

    <TTGlyph name="glyph00066"/><!-- contains no outline data -->

    <TTGlyph name="glyph00067"/><!-- contains no outline data -->

    <TTGlyph name="glyph00069"/><!-- contains no outline data -->

    <TTGlyph name="glyph00070"/><!-- contains no outline data -->

    <TTGlyph name="glyph00071"/><!-- contains no outline data -->

    <TTGlyph name="glyph00072"/><!-- contains no outline data -->

    <TTGlyph name="glyph00073"/><!-- contains no outline data -->

    <TTGlyph name="glyph00074"/><!-- contains no outline data -->

    <TTGlyph name="glyph00075"/><!-- contains no outline data -->

    <TTGlyph name="glyph00076"/><!-- contains no outline data -->

    <TTGlyph name="glyph00077"/><!-- contains no outline data -->

    <TTGlyph name="glyph00078"/><!-- contains no outline data -->

    <TTGlyph name="glyph00079"/><!-- contains no outline data -->

    <TTGlyph name="glyph00080"/><!-- contains no outline data -->

    <TTGlyph name="glyph00081"/><!-- contains no outline data -->

    <TTGlyph name="glyph00082"/><!-- contains no outline data -->

    <TTGlyph name="glyph00083"/><!-- contains no outline data -->

    <TTGlyph name="glyph00084"/><!-- contains no outline data -->

    <TTGlyph name="glyph00085"/><!-- contains no outline data -->

    <TTGlyph name="glyph00086"/><!-- contains no outline data -->

    <TTGlyph name="glyph00087"/><!-- contains no outline data -->

    <TTGlyph name="glyph00088"/><!-- contains no outline data -->

    <TTGlyph name="glyph00089"/><!-- contains no outline data -->

    <TTGlyph name="glyph00090"/><!-- contains no outline data -->

    <TTGlyph name="glyph00091"/><!-- contains no outline data -->

    <TTGlyph name="glyph00092"/><!-- contains no outline data -->

    <TTGlyph name="glyph00093"/><!-- contains no outline data -->

    <TTGlyph name="glyph00094"/><!-- contains no outline data -->

    <TTGlyph name="glyph00095"/><!-- contains no outline data -->

    <TTGlyph name="glyph00097"/><!-- contains no outline data -->

    <TTGlyph name="glyph00098"/><!-- contains no outline data -->

    <TTGlyph name="glyph00099"/><!-- contains no outline data -->

    <TTGlyph name="glyph00100"/><!-- contains no outline data -->

    <TTGlyph name="glyph00102"/><!-- contains no outline data -->

    <TTGlyph name="glyph00103"/><!-- contains no outline data -->

    <TTGlyph name="glyph00105"/><!-- contains no outline data -->

    <TTGlyph name="glyph00106"/><!-- contains no outline data -->

    <TTGlyph name="glyph00107"/><!-- contains no outline data -->

    <TTGlyph name="glyph00108"/><!-- contains no outline data -->

    <TTGlyph name="glyph00109"/><!-- contains no outline data -->

    <TTGlyph name="glyph00110"/><!-- contains no outline data -->

    <TTGlyph name="glyph00111"/><!-- contains no outline data -->

    <TTGlyph name="glyph00113"/><!-- contains no outline data -->

    <TTGlyph name="glyph00114"/><!-- contains no outline data -->

    <TTGlyph name="glyph00115"/><!-- contains no outline data -->

    <TTGlyph name="glyph00116"/><!-- contains no outline data -->

    <TTGlyph name="glyph00117"/><!-- contains no outline data -->

    <TTGlyph name="glyph00118"/><!-- contains no outline data -->

    <TTGlyph name="glyph00119"/><!-- contains no outline data -->

    <TTGlyph name="glyph00120"/><!-- contains no outline data -->

    <TTGlyph name="glyph00121"/><!-- contains no outline data -->

    <TTGlyph name="glyph00122"/><!-- contains no outline data -->

    <TTGlyph name="glyph00123"/><!-- contains no outline data -->

    <TTGlyph name="glyph00124"/><!-- contains no outline data -->

    <TTGlyph name="glyph00125"/><!-- contains no outline data -->

    <TTGlyph name="glyph00126"/><!-- contains no outline data -->

    <TTGlyph name="glyph00127"/><!-- contains no outline data -->

    <TTGlyph name="glyph00128"/><!-- contains no outline data -->

    <TTGlyph name="glyph00129"/><!-- contains no outline data -->

    <TTGlyph name="glyph00130"/><!-- contains no outline data -->

    <TTGlyph name="glyph00131"/><!-- contains no outline data -->

    <TTGlyph name="glyph00132"/><!-- contains no outline data -->

    <TTGlyph name="glyph00133"/><!-- contains no outline data -->

    <TTGlyph name="glyph00134"/><!-- contains no outline data -->

    <TTGlyph name="glyph00135"/><!-- contains no outline data -->

    <TTGlyph name="glyph00136"/><!-- contains no outline data -->

    <TTGlyph name="glyph00137"/><!-- contains no outline data -->

    <TTGlyph name="glyph00138"/><!-- contains no outline data -->

    <TTGlyph name="glyph00139"/><!-- contains no outline data -->

    <TTGlyph name="glyph00140"/><!-- contains no outline data -->

    <TTGlyph name="glyph00141"/><!-- contains no outline data -->

    <TTGlyph name="glyph00142"/><!-- contains no outline data -->

    <TTGlyph name="glyph00143"/><!-- contains no outline data -->

    <TTGlyph name="glyph00144"/><!-- contains no outline data -->

    <TTGlyph name="glyph00145"/><!-- contains no outline data -->

    <TTGlyph name="glyph00146"/><!-- contains no outline data -->

    <TTGlyph name="glyph00147"/><!-- contains no outline data -->

    <TTGlyph name="glyph00148"/><!-- contains no outline data -->

    <TTGlyph name="glyph00149"/><!-- contains no outline data -->

    <TTGlyph name="glyph00150"/><!-- contains no outline data -->

    <TTGlyph name="glyph00151"/><!-- contains no outline data -->

    <TTGlyph name="glyph00152"/><!-- contains no outline data -->

    <TTGlyph name="glyph00153"/><!-- contains no outline data -->

    <TTGlyph name="glyph00154"/><!-- contains no outline data -->

    <TTGlyph name="glyph00155"/><!-- contains no outline data -->

    <TTGlyph name="glyph00156"/><!-- contains no outline data -->

    <TTGlyph name="glyph00157"/><!-- contains no outline data -->

    <TTGlyph name="glyph00158"/><!-- contains no outline data -->

    <TTGlyph name="glyph00159"/><!-- contains no outline data -->

    <TTGlyph name="glyph00160"/><!-- contains no outline data -->

    <TTGlyph name="glyph00161"/><!-- contains no outline data -->

    <TTGlyph name="glyph00162"/><!-- contains no outline data -->

    <TTGlyph name="glyph00163"/><!-- contains no outline data -->

    <TTGlyph name="glyph00164"/><!-- contains no outline data -->

    <TTGlyph name="glyph00165"/><!-- contains no outline data -->

    <TTGlyph name="glyph00166"/><!-- contains no outline data -->

    <TTGlyph name="glyph00167"/><!-- contains no outline data -->

    <TTGlyph name="glyph00168"/><!-- contains no outline data -->

    <TTGlyph name="glyph00169"/><!-- contains no outline data -->

    <TTGlyph name="glyph00170"/><!-- contains no outline data -->

    <TTGlyph name="glyph00171"/><!-- contains no outline data -->

    <TTGlyph name="glyph00172"/><!-- contains no outline data -->

    <TTGlyph name="glyph00173"/><!-- contains no outline data -->

    <TTGlyph name="glyph00174"/><!-- contains no outline data -->

    <TTGlyph name="glyph00175"/><!-- contains no outline data -->

    <TTGlyph name="glyph00176"/><!-- contains no outline data -->

    <TTGlyph name="glyph00177" xMin="-550" yMin="-1200" xMax="-375" yMax="-800">
      <contour>
        <pt x="-525" y="-1200" on="1"/>
        <pt x="-525" y="-900" on="1"/>
        <pt x="-525" y="-866" on="0"/>
        <pt x="-550" y="-866" on="1"/>
        <pt x="-550" y="-833" on="0"/>
        <pt x="-522" y="-816" on="1"/>
        <pt x="-494" y="-800" on="0"/>
        <pt x="-457" y="-800" on="1"/>
        <pt x="-431" y="-800" on="0"/>
        <pt x="-403" y="-816" on="1"/>
        <pt x="-375" y="-833" on="0"/>
        <pt x="-375" y="-866" on="1"/>
        <pt x="-375" y="-1200" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="glyph00178"/><!-- contains no outline data -->

    <TTGlyph name="glyph00179"/><!-- contains no outline data -->

    <TTGlyph name="glyph00180"/><!-- contains no outline data -->

    <TTGlyph name="glyph00181"/><!-- contains no outline data -->

    <TTGlyph name="glyph00182"/><!-- contains no outline data -->

    <TTGlyph name="glyph00183"/><!-- contains no outline data -->

    <TTGlyph name="glyph00184"/><!-- contains no outline data -->

    <TTGlyph name="glyph00185"/><!-- contains no outline data -->

    <TTGlyph name="glyph00186"/><!-- contains no outline data -->

    <TTGlyph name="glyph00187"/><!-- contains no outline data -->

    <TTGlyph name="glyph00188"/><!-- contains no outline data -->

    <TTGlyph name="glyph00189"/><!-- contains no outline data -->

    <TTGlyph name="glyph00190"/><!-- contains no outline data -->

    <TTGlyph name="glyph00191"/><!-- contains no outline data -->

    <TTGlyph name="glyph00192"/><!-- contains no outline data -->

    <TTGlyph name="glyph00193"/><!-- contains no outline data -->

    <TTGlyph name="glyph00194"/><!-- contains no outline data -->

    <TTGlyph name="glyph00195"/><!-- contains no outline data -->

    <TTGlyph name="glyph00196"/><!-- contains no outline data -->

    <TTGlyph name="glyph00197"/><!-- contains no outline data -->

    <TTGlyph name="glyph00198"/><!-- contains no outline data -->

    <TTGlyph name="glyph00199"/><!-- contains no outline data -->

    <TTGlyph name="glyph00200"/><!-- contains no outline data -->

    <TTGlyph name="glyph00201"/><!-- contains no outline data -->

    <TTGlyph name="glyph00202"/><!-- contains no outline data -->

    <TTGlyph name="glyph00203"/><!-- contains no outline data -->

    <TTGlyph name="glyph00204"/><!-- contains no outline data -->

    <TTGlyph name="glyph00205"/><!-- contains no outline data -->

    <TTGlyph name="glyph00206"/><!-- contains no outline data -->

    <TTGlyph name="glyph00207"/><!-- contains no outline data -->

    <TTGlyph name="glyph00208"/><!-- contains no outline data -->

    <TTGlyph name="glyph00209"/><!-- contains no outline data -->

    <TTGlyph name="glyph00210"/><!-- contains no outline data -->

    <TTGlyph name="glyph00211"/><!-- contains no outline data -->

    <TTGlyph name="glyph00212"/><!-- contains no outline data -->

    <TTGlyph name="glyph00213"/><!-- contains no outline data -->

    <TTGlyph name="glyph00214"/><!-- contains no outline data -->

    <TTGlyph name="glyph00215"/><!-- contains no outline data -->

    <TTGlyph name="glyph00216"/><!-- contains no outline data -->

    <TTGlyph name="glyph00217"/><!-- contains no outline data -->

    <TTGlyph name="glyph00218"/><!-- contains no outline data -->

    <TTGlyph name="glyph00219"/><!-- contains no outline data -->

    <TTGlyph name="glyph00220"/><!-- contains no outline data -->

    <TTGlyph name="glyph00221"/><!-- contains no outline data -->

    <TTGlyph name="glyph00222"/><!-- contains no outline data -->

    <TTGlyph name="glyph00223"/><!-- contains no outline data -->

    <TTGlyph name="glyph00224"/><!-- contains no outline data -->

    <TTGlyph name="glyph00225" xMin="300" yMin="-600" xMax="2800" yMax="1400">
      <contour>
        <pt x="2625" y="0" on="1"/>
        <pt x="2625" y="1072" on="1"/>
        <pt x="2235" y="1249" on="1"/>
        <pt x="2002" y="1145" on="1"/>
        <pt x="2025" y="1132" on="1"/>
        <pt x="2025" y="0" on="1"/>
        <pt x="1850" y="0" on="1"/>
        <pt x="1850" y="1032" on="1"/>
        <pt x="1475" y="1241" on="1"/>
        <pt x="1250" y="1116" on="1"/>
        <pt x="1250" y="0" on="1"/>
        <pt x="1075" y="0" on="1"/>
        <pt x="1075" y="1155" on="1"/>
        <pt x="957" y="1260" on="1"/>
        <pt x="776" y="1082" on="1"/>
        <pt x="594" y="1260" on="1"/>
        <pt x="475" y="1156" on="1"/>
        <pt x="475" y="475" on="1"/>
        <pt x="525" y="475" on="1"/>
        <pt x="612" y="475" on="0"/>
        <pt x="656" y="438" on="1"/>
        <pt x="700" y="400" on="0"/>
        <pt x="700" y="325" on="1"/>
        <pt x="700" y="274" on="0"/>
        <pt x="680" y="228" on="1"/>
        <pt x="660" y="182" on="0"/>
        <pt x="620" y="143" on="1"/>
        <pt x="475" y="0" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="300" y="1134" on="1"/>
        <pt x="597" y="1400" on="1"/>
        <pt x="776" y="1225" on="1"/>
        <pt x="954" y="1400" on="1"/>
        <pt x="1182" y="1192" on="1"/>
        <pt x="1550" y="1400" on="1"/>
        <pt x="1894" y="1205" on="1"/>
        <pt x="2325" y="1400" on="1"/>
        <pt x="2800" y="1185" on="1"/>
        <pt x="2800" y="0" on="1"/>
      </contour>
      <contour>
        <pt x="2025" y="-300" on="1"/>
        <pt x="2025" y="-450" on="0"/>
        <pt x="1936" y="-525" on="1"/>
        <pt x="1847" y="-600" on="0"/>
        <pt x="1668" y="-600" on="1"/>
        <pt x="1500" y="-600" on="0"/>
        <pt x="1371" y="-562" on="1"/>
        <pt x="1242" y="-525" on="0"/>
        <pt x="1153" y="-450" on="1"/>
        <pt x="1034" y="-350" on="0"/>
        <pt x="910" y="-300" on="1"/>
        <pt x="786" y="-250" on="0"/>
        <pt x="657" y="-250" on="1"/>
        <pt x="553" y="-250" on="0"/>
        <pt x="464" y="-272" on="1"/>
        <pt x="374" y="-295" on="0"/>
        <pt x="300" y="-340" on="1"/>
        <pt x="300" y="-290" on="1"/>
        <pt x="300" y="-240" on="0"/>
        <pt x="374" y="-195" on="0"/>
        <pt x="464" y="-172" on="1"/>
        <pt x="553" y="-150" on="0"/>
        <pt x="657" y="-150" on="1"/>
        <pt x="859" y="-150" on="0"/>
        <pt x="1027" y="-206" on="1"/>
        <pt x="1195" y="-262" on="0"/>
        <pt x="1329" y="-375" on="1"/>
        <pt x="1403" y="-438" on="0"/>
        <pt x="1488" y="-469" on="1"/>
        <pt x="1573" y="-500" on="0"/>
        <pt x="1668" y="-500" on="1"/>
        <pt x="1759" y="-500" on="0"/>
        <pt x="1805" y="-450" on="1"/>
        <pt x="1851" y="-400" on="0"/>
        <pt x="1851" y="-300" on="1"/>
        <pt x="1851" y="-250" on="0"/>
        <pt x="1819" y="-225" on="1"/>
        <pt x="1788" y="-200" on="0"/>
        <pt x="1726" y="-200" on="1"/>
        <pt x="1726" y="-150" on="0"/>
        <pt x="1757" y="-125" on="1"/>
        <pt x="1788" y="-100" on="0"/>
        <pt x="1851" y="-100" on="1"/>
        <pt x="1938" y="-100" on="0"/>
        <pt x="1981" y="-150" on="1"/>
        <pt x="2025" y="-200" on="0"/>
      </contour>
      <contour>
        <pt x="475" y="141" on="1"/>
        <pt x="541" y="206" on="1"/>
        <pt x="570" y="236" on="0"/>
        <pt x="585" y="265" on="1"/>
        <pt x="600" y="295" on="0"/>
        <pt x="600" y="325" on="1"/>
        <pt x="600" y="350" on="0"/>
        <pt x="581" y="362" on="1"/>
        <pt x="562" y="375" on="0"/>
        <pt x="525" y="375" on="1"/>
        <pt x="475" y="375" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="glyph00226"/><!-- contains no outline data -->

    <TTGlyph name="glyph00227"/><!-- contains no outline data -->

    <TTGlyph name="glyph00228"/><!-- contains no outline data -->

    <TTGlyph name="glyph00229"/><!-- contains no outline data -->

    <TTGlyph name="glyph00230"/><!-- contains no outline data -->

    <TTGlyph name="glyph00231"/><!-- contains no outline data -->

    <TTGlyph name="glyph00232"/><!-- contains no outline data -->

    <TTGlyph name="glyph00233"/><!-- contains no outline data -->

    <TTGlyph name="glyph00234"/><!-- contains no outline data -->

    <TTGlyph name="glyph00235" xMin="300" yMin="0" xMax="2025" yMax="1400">
      <contour>
        <pt x="300" y="1167" on="1"/>
        <pt x="300" y="1283" on="0"/>
        <pt x="419" y="1342" on="1"/>
        <pt x="538" y="1400" on="0"/>
        <pt x="775" y="1400" on="1"/>
        <pt x="1012" y="1400" on="0"/>
        <pt x="1131" y="1342" on="1"/>
        <pt x="1199" y="1308" on="0"/>
        <pt x="1228" y="1254" on="1"/>
        <pt x="1550" y="1400" on="1"/>
        <pt x="2025" y="1185" on="1"/>
        <pt x="2025" y="0" on="1"/>
        <pt x="1850" y="0" on="1"/>
        <pt x="1850" y="1072" on="1"/>
        <pt x="1460" y="1249" on="1"/>
        <pt x="1250" y="1155" on="1"/>
        <pt x="1250" y="924" on="1"/>
        <pt x="1250" y="874" on="0"/>
        <pt x="1206" y="850" on="1"/>
        <pt x="1162" y="825" on="0"/>
        <pt x="1075" y="825" on="1"/>
        <pt x="988" y="825" on="0"/>
        <pt x="944" y="869" on="1"/>
        <pt x="900" y="912" on="0"/>
        <pt x="900" y="1000" on="1"/>
        <pt x="900" y="1062" on="0"/>
        <pt x="944" y="1094" on="1"/>
        <pt x="988" y="1125" on="0"/>
        <pt x="1075" y="1125" on="1"/>
        <pt x="1075" y="1167" on="1"/>
        <pt x="1075" y="1234" on="0"/>
        <pt x="1000" y="1267" on="1"/>
        <pt x="924" y="1300" on="0"/>
        <pt x="775" y="1300" on="1"/>
        <pt x="625" y="1300" on="0"/>
        <pt x="550" y="1267" on="1"/>
        <pt x="475" y="1234" on="0"/>
        <pt x="475" y="1167" on="1"/>
        <pt x="475" y="933" on="1"/>
        <pt x="475" y="834" on="0"/>
        <pt x="550" y="808" on="1"/>
        <pt x="1250" y="568" on="1"/>
        <pt x="1250" y="233" on="1"/>
        <pt x="1250" y="117" on="0"/>
        <pt x="1176" y="58" on="1"/>
        <pt x="1102" y="0" on="0"/>
        <pt x="953" y="0" on="1"/>
        <pt x="864" y="0" on="0"/>
        <pt x="792" y="39" on="1"/>
        <pt x="719" y="78" on="0"/>
        <pt x="664" y="156" on="1"/>
        <pt x="630" y="203" on="0"/>
        <pt x="583" y="227" on="1"/>
        <pt x="536" y="250" on="0"/>
        <pt x="475" y="250" on="1"/>
        <pt x="475" y="0" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="300" y="583" on="1"/>
        <pt x="475" y="583" on="1"/>
        <pt x="475" y="350" on="1"/>
        <pt x="565" y="350" on="0"/>
        <pt x="632" y="319" on="1"/>
        <pt x="700" y="288" on="0"/>
        <pt x="745" y="225" on="1"/>
        <pt x="790" y="163" on="0"/>
        <pt x="842" y="132" on="1"/>
        <pt x="894" y="101" on="0"/>
        <pt x="953" y="101" on="1"/>
        <pt x="1014" y="101" on="0"/>
        <pt x="1045" y="134" on="1"/>
        <pt x="1076" y="167" on="0"/>
        <pt x="1076" y="233" on="1"/>
        <pt x="1076" y="523" on="1"/>
        <pt x="523" y="712" on="1"/>
        <pt x="411" y="750" on="0"/>
        <pt x="356" y="806" on="1"/>
        <pt x="300" y="861" on="0"/>
        <pt x="300" y="933" on="1"/>
      </contour>
      <contour>
        <pt x="1075" y="1025" on="1"/>
        <pt x="1038" y="1025" on="0"/>
        <pt x="1019" y="1019" on="1"/>
        <pt x="1000" y="1012" on="0"/>
        <pt x="1000" y="1000" on="1"/>
        <pt x="1000" y="962" on="0"/>
        <pt x="1019" y="944" on="1"/>
        <pt x="1038" y="925" on="0"/>
        <pt x="1075" y="925" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="glyph00236" xMin="200" yMin="-201" xMax="2025" yMax="1400">
      <contour>
        <pt x="1850" y="0" on="1"/>
        <pt x="1850" y="1064" on="1"/>
        <pt x="1371" y="1239" on="1"/>
        <pt x="1115" y="1075" on="1"/>
        <pt x="1081" y="1076" on="1"/>
        <pt x="593" y="1256" on="1"/>
        <pt x="372" y="1152" on="1"/>
        <pt x="475" y="1050" on="1"/>
        <pt x="475" y="250" on="1"/>
        <pt x="475" y="175" on="0"/>
        <pt x="525" y="138" on="1"/>
        <pt x="575" y="100" on="0"/>
        <pt x="675" y="100" on="1"/>
        <pt x="875" y="100" on="1"/>
        <pt x="975" y="100" on="0"/>
        <pt x="1025" y="138" on="1"/>
        <pt x="1075" y="175" on="0"/>
        <pt x="1075" y="250" on="1"/>
        <pt x="1075" y="925" on="1"/>
        <pt x="1250" y="925" on="1"/>
        <pt x="1250" y="-55" on="1"/>
        <pt x="1250" y="-126" on="0"/>
        <pt x="1219" y="-163" on="1"/>
        <pt x="1188" y="-201" on="0"/>
        <pt x="1126" y="-201" on="1"/>
        <pt x="1063" y="-201" on="0"/>
        <pt x="1032" y="-176" on="1"/>
        <pt x="1000" y="-151" on="0"/>
        <pt x="1000" y="-100" on="1"/>
        <pt x="1038" y="-100" on="0"/>
        <pt x="1057" y="-88" on="1"/>
        <pt x="1076" y="-76" on="0"/>
        <pt x="1076" y="-51" on="1"/>
        <pt x="1076" y="25" on="1"/>
        <pt x="994" y="0" on="0"/>
        <pt x="875" y="0" on="1"/>
        <pt x="675" y="0" on="1"/>
        <pt x="488" y="0" on="0"/>
        <pt x="394" y="62" on="1"/>
        <pt x="300" y="125" on="0"/>
        <pt x="300" y="250" on="1"/>
        <pt x="300" y="1050" on="1"/>
        <pt x="200" y="1129" on="1"/>
        <pt x="200" y="1184" on="1"/>
        <pt x="663" y="1400" on="1"/>
        <pt x="708" y="1400" on="1"/>
        <pt x="1169" y="1228" on="1"/>
        <pt x="1439" y="1400" on="1"/>
        <pt x="2025" y="1185" on="1"/>
        <pt x="2025" y="0" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="glyph00237"/><!-- contains no outline data -->

    <TTGlyph name="glyph00238"/><!-- contains no outline data -->

    <TTGlyph name="glyph00239"/><!-- contains no outline data -->

    <TTGlyph name="glyph00240" xMin="125" yMin="0" xMax="2025" yMax="1400">
      <contour>
        <pt x="475" y="600" on="1"/>
        <pt x="475" y="250" on="1"/>
        <pt x="475" y="175" on="0"/>
        <pt x="537" y="138" on="1"/>
        <pt x="600" y="100" on="0"/>
        <pt x="725" y="100" on="1"/>
        <pt x="825" y="100" on="1"/>
        <pt x="950" y="100" on="0"/>
        <pt x="1013" y="138" on="1"/>
        <pt x="1075" y="175" on="0"/>
        <pt x="1075" y="250" on="1"/>
        <pt x="1075" y="600" on="1"/>
      </contour>
      <contour>
        <pt x="900" y="1037" on="1"/>
        <pt x="900" y="1101" on="1"/>
        <pt x="1358" y="1400" on="1"/>
        <pt x="2025" y="1185" on="1"/>
        <pt x="2025" y="0" on="1"/>
        <pt x="1850" y="0" on="1"/>
        <pt x="1850" y="1057" on="1"/>
        <pt x="1292" y="1237" on="1"/>
        <pt x="1038" y="1070" on="1"/>
        <pt x="1250" y="934" on="1"/>
        <pt x="1250" y="250" on="1"/>
        <pt x="1250" y="125" on="0"/>
        <pt x="1144" y="62" on="1"/>
        <pt x="1037" y="0" on="0"/>
        <pt x="825" y="0" on="1"/>
        <pt x="725" y="0" on="1"/>
        <pt x="512" y="0" on="0"/>
        <pt x="406" y="62" on="1"/>
        <pt x="300" y="125" on="0"/>
        <pt x="300" y="250" on="1"/>
        <pt x="300" y="926" on="1"/>
        <pt x="125" y="1037" on="1"/>
        <pt x="125" y="1101" on="1"/>
        <pt x="358" y="1400" on="1"/>
        <pt x="497" y="1314" on="1"/>
        <pt x="558" y="1275" on="0"/>
        <pt x="600" y="1275" on="1"/>
        <pt x="650" y="1275" on="1"/>
        <pt x="567" y="1125" on="0"/>
        <pt x="517" y="1125" on="1"/>
        <pt x="468" y="1125" on="0"/>
        <pt x="414" y="1159" on="1"/>
        <pt x="335" y="1208" on="1"/>
        <pt x="238" y="1084" on="1"/>
        <pt x="475" y="934" on="1"/>
        <pt x="475" y="700" on="1"/>
        <pt x="1075" y="700" on="1"/>
        <pt x="1075" y="926" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni1789" xMin="300" yMin="-600" xMax="2025" yMax="1400">
      <contour>
        <pt x="2025" y="-300" on="1"/>
        <pt x="2025" y="-450" on="0"/>
        <pt x="1936" y="-525" on="1"/>
        <pt x="1847" y="-600" on="0"/>
        <pt x="1668" y="-600" on="1"/>
        <pt x="1500" y="-600" on="0"/>
        <pt x="1371" y="-562" on="1"/>
        <pt x="1242" y="-525" on="0"/>
        <pt x="1153" y="-450" on="1"/>
        <pt x="1034" y="-350" on="0"/>
        <pt x="910" y="-300" on="1"/>
        <pt x="786" y="-250" on="0"/>
        <pt x="657" y="-250" on="1"/>
        <pt x="553" y="-250" on="0"/>
        <pt x="464" y="-272" on="1"/>
        <pt x="374" y="-295" on="0"/>
        <pt x="300" y="-340" on="1"/>
        <pt x="300" y="-290" on="1"/>
        <pt x="300" y="-240" on="0"/>
        <pt x="374" y="-195" on="0"/>
        <pt x="464" y="-172" on="1"/>
        <pt x="553" y="-150" on="0"/>
        <pt x="657" y="-150" on="1"/>
        <pt x="859" y="-150" on="0"/>
        <pt x="1027" y="-206" on="1"/>
        <pt x="1195" y="-262" on="0"/>
        <pt x="1329" y="-375" on="1"/>
        <pt x="1403" y="-438" on="0"/>
        <pt x="1488" y="-469" on="1"/>
        <pt x="1573" y="-500" on="0"/>
        <pt x="1668" y="-500" on="1"/>
        <pt x="1759" y="-500" on="0"/>
        <pt x="1805" y="-450" on="1"/>
        <pt x="1851" y="-400" on="0"/>
        <pt x="1851" y="-300" on="1"/>
        <pt x="1851" y="-250" on="0"/>
        <pt x="1819" y="-225" on="1"/>
        <pt x="1788" y="-200" on="0"/>
        <pt x="1726" y="-200" on="1"/>
        <pt x="1726" y="-150" on="0"/>
        <pt x="1757" y="-125" on="1"/>
        <pt x="1788" y="-100" on="0"/>
        <pt x="1851" y="-100" on="1"/>
        <pt x="1938" y="-100" on="0"/>
        <pt x="1981" y="-150" on="1"/>
        <pt x="2025" y="-200" on="0"/>
      </contour>
      <contour>
        <pt x="475" y="141" on="1"/>
        <pt x="541" y="206" on="1"/>
        <pt x="570" y="236" on="0"/>
        <pt x="585" y="265" on="1"/>
        <pt x="600" y="295" on="0"/>
        <pt x="600" y="325" on="1"/>
        <pt x="600" y="350" on="0"/>
        <pt x="581" y="362" on="1"/>
        <pt x="562" y="375" on="0"/>
        <pt x="525" y="375" on="1"/>
        <pt x="475" y="375" on="1"/>
      </contour>
      <contour>
        <pt x="2025" y="0" on="1"/>
        <pt x="1850" y="0" on="1"/>
        <pt x="1850" y="1032" on="1"/>
        <pt x="1475" y="1241" on="1"/>
        <pt x="1250" y="1116" on="1"/>
        <pt x="1250" y="0" on="1"/>
        <pt x="1075" y="0" on="1"/>
        <pt x="1075" y="1155" on="1"/>
        <pt x="957" y="1260" on="1"/>
        <pt x="776" y="1082" on="1"/>
        <pt x="594" y="1260" on="1"/>
        <pt x="475" y="1156" on="1"/>
        <pt x="475" y="475" on="1"/>
        <pt x="525" y="475" on="1"/>
        <pt x="612" y="475" on="0"/>
        <pt x="656" y="438" on="1"/>
        <pt x="700" y="400" on="0"/>
        <pt x="700" y="325" on="1"/>
        <pt x="700" y="274" on="0"/>
        <pt x="680" y="228" on="1"/>
        <pt x="660" y="182" on="0"/>
        <pt x="620" y="143" on="1"/>
        <pt x="475" y="0" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="300" y="1134" on="1"/>
        <pt x="597" y="1400" on="1"/>
        <pt x="776" y="1225" on="1"/>
        <pt x="954" y="1400" on="1"/>
        <pt x="1182" y="1192" on="1"/>
        <pt x="1550" y="1400" on="1"/>
        <pt x="2025" y="1132" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni1793" xMin="300" yMin="0" xMax="1250" yMax="1400">
      <contour>
        <pt x="1075" y="1025" on="1"/>
        <pt x="1038" y="1025" on="0"/>
        <pt x="1019" y="1019" on="1"/>
        <pt x="1000" y="1012" on="0"/>
        <pt x="1000" y="1000" on="1"/>
        <pt x="1000" y="962" on="0"/>
        <pt x="1019" y="944" on="1"/>
        <pt x="1038" y="925" on="0"/>
        <pt x="1075" y="925" on="1"/>
      </contour>
      <contour>
        <pt x="300" y="1167" on="1"/>
        <pt x="300" y="1283" on="0"/>
        <pt x="419" y="1342" on="1"/>
        <pt x="538" y="1400" on="0"/>
        <pt x="775" y="1400" on="1"/>
        <pt x="1012" y="1400" on="0"/>
        <pt x="1131" y="1342" on="1"/>
        <pt x="1250" y="1283" on="0"/>
        <pt x="1250" y="1167" on="1"/>
        <pt x="1250" y="924" on="1"/>
        <pt x="1250" y="874" on="0"/>
        <pt x="1206" y="850" on="1"/>
        <pt x="1162" y="825" on="0"/>
        <pt x="1075" y="825" on="1"/>
        <pt x="988" y="825" on="0"/>
        <pt x="944" y="869" on="1"/>
        <pt x="900" y="912" on="0"/>
        <pt x="900" y="1000" on="1"/>
        <pt x="900" y="1062" on="0"/>
        <pt x="944" y="1094" on="1"/>
        <pt x="988" y="1125" on="0"/>
        <pt x="1075" y="1125" on="1"/>
        <pt x="1075" y="1167" on="1"/>
        <pt x="1075" y="1234" on="0"/>
        <pt x="1000" y="1267" on="1"/>
        <pt x="924" y="1300" on="0"/>
        <pt x="775" y="1300" on="1"/>
        <pt x="625" y="1300" on="0"/>
        <pt x="550" y="1267" on="1"/>
        <pt x="475" y="1234" on="0"/>
        <pt x="475" y="1167" on="1"/>
        <pt x="475" y="933" on="1"/>
        <pt x="475" y="834" on="0"/>
        <pt x="550" y="808" on="1"/>
        <pt x="1250" y="568" on="1"/>
        <pt x="1250" y="233" on="1"/>
        <pt x="1250" y="117" on="0"/>
        <pt x="1176" y="58" on="1"/>
        <pt x="1102" y="0" on="0"/>
        <pt x="953" y="0" on="1"/>
        <pt x="864" y="0" on="0"/>
        <pt x="792" y="39" on="1"/>
        <pt x="719" y="78" on="0"/>
        <pt x="664" y="156" on="1"/>
        <pt x="630" y="203" on="0"/>
        <pt x="583" y="227" on="1"/>
        <pt x="536" y="250" on="0"/>
        <pt x="475" y="250" on="1"/>
        <pt x="475" y="0" on="1"/>
        <pt x="300" y="0" on="1"/>
        <pt x="300" y="583" on="1"/>
        <pt x="475" y="583" on="1"/>
        <pt x="475" y="350" on="1"/>
        <pt x="565" y="350" on="0"/>
        <pt x="632" y="319" on="1"/>
        <pt x="700" y="288" on="0"/>
        <pt x="745" y="225" on="1"/>
        <pt x="790" y="163" on="0"/>
        <pt x="842" y="132" on="1"/>
        <pt x="894" y="101" on="0"/>
        <pt x="953" y="101" on="1"/>
        <pt x="1014" y="101" on="0"/>
        <pt x="1045" y="134" on="1"/>
        <pt x="1076" y="167" on="0"/>
        <pt x="1076" y="233" on="1"/>
        <pt x="1076" y="523" on="1"/>
        <pt x="523" y="712" on="1"/>
        <pt x="411" y="750" on="0"/>
        <pt x="356" y="806" on="1"/>
        <pt x="300" y="861" on="0"/>
        <pt x="300" y="933" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni1794" xMin="125" yMin="0" xMax="1425" yMax="1400">
      <contour>
        <pt x="825" y="0" on="1"/>
        <pt x="725" y="0" on="1"/>
        <pt x="512" y="0" on="0"/>
        <pt x="406" y="62" on="1"/>
        <pt x="300" y="125" on="0"/>
        <pt x="300" y="250" on="1"/>
        <pt x="300" y="926" on="1"/>
        <pt x="125" y="1037" on="1"/>
        <pt x="125" y="1101" on="1"/>
        <pt x="358" y="1400" on="1"/>
        <pt x="497" y="1314" on="1"/>
        <pt x="558" y="1275" on="0"/>
        <pt x="600" y="1275" on="1"/>
        <pt x="650" y="1275" on="1"/>
        <pt x="567" y="1125" on="0"/>
        <pt x="517" y="1125" on="1"/>
        <pt x="468" y="1125" on="0"/>
        <pt x="414" y="1159" on="1"/>
        <pt x="335" y="1208" on="1"/>
        <pt x="238" y="1084" on="1"/>
        <pt x="475" y="934" on="1"/>
        <pt x="475" y="250" on="1"/>
        <pt x="475" y="175" on="0"/>
        <pt x="537" y="138" on="1"/>
        <pt x="600" y="100" on="0"/>
        <pt x="725" y="100" on="1"/>
        <pt x="825" y="100" on="1"/>
        <pt x="950" y="100" on="0"/>
        <pt x="1013" y="138" on="1"/>
        <pt x="1075" y="175" on="0"/>
        <pt x="1075" y="250" on="1"/>
        <pt x="1075" y="926" on="1"/>
        <pt x="900" y="1037" on="1"/>
        <pt x="900" y="1101" on="1"/>
        <pt x="1133" y="1400" on="1"/>
        <pt x="1272" y="1314" on="1"/>
        <pt x="1333" y="1275" on="0"/>
        <pt x="1375" y="1275" on="1"/>
        <pt x="1425" y="1275" on="1"/>
        <pt x="1342" y="1125" on="0"/>
        <pt x="1292" y="1125" on="1"/>
        <pt x="1243" y="1125" on="0"/>
        <pt x="1189" y="1159" on="1"/>
        <pt x="1110" y="1208" on="1"/>
        <pt x="1013" y="1084" on="1"/>
        <pt x="1250" y="934" on="1"/>
        <pt x="1250" y="250" on="1"/>
        <pt x="1250" y="125" on="0"/>
        <pt x="1144" y="62" on="1"/>
        <pt x="1037" y="0" on="0"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni1798" xMin="125" yMin="0" xMax="1425" yMax="1400">
      <contour>
        <pt x="825" y="0" on="1"/>
        <pt x="725" y="0" on="1"/>
        <pt x="512" y="0" on="0"/>
        <pt x="406" y="62" on="1"/>
        <pt x="300" y="125" on="0"/>
        <pt x="300" y="250" on="1"/>
        <pt x="300" y="926" on="1"/>
        <pt x="125" y="1037" on="1"/>
        <pt x="125" y="1101" on="1"/>
        <pt x="358" y="1400" on="1"/>
        <pt x="497" y="1314" on="1"/>
        <pt x="558" y="1275" on="0"/>
        <pt x="600" y="1275" on="1"/>
        <pt x="650" y="1275" on="1"/>
        <pt x="567" y="1125" on="0"/>
        <pt x="517" y="1125" on="1"/>
        <pt x="468" y="1125" on="0"/>
        <pt x="414" y="1159" on="1"/>
        <pt x="335" y="1208" on="1"/>
        <pt x="238" y="1084" on="1"/>
        <pt x="475" y="934" on="1"/>
        <pt x="475" y="700" on="1"/>
        <pt x="1075" y="700" on="1"/>
        <pt x="1075" y="926" on="1"/>
        <pt x="900" y="1037" on="1"/>
        <pt x="900" y="1101" on="1"/>
        <pt x="1133" y="1400" on="1"/>
        <pt x="1272" y="1314" on="1"/>
        <pt x="1333" y="1275" on="0"/>
        <pt x="1375" y="1275" on="1"/>
        <pt x="1425" y="1275" on="1"/>
        <pt x="1342" y="1125" on="0"/>
        <pt x="1292" y="1125" on="1"/>
        <pt x="1243" y="1125" on="0"/>
        <pt x="1189" y="1159" on="1"/>
        <pt x="1110" y="1208" on="1"/>
        <pt x="1013" y="1084" on="1"/>
        <pt x="1250" y="934" on="1"/>
        <pt x="1250" y="250" on="1"/>
        <pt x="1250" y="125" on="0"/>
        <pt x="1144" y="62" on="1"/>
        <pt x="1037" y="0" on="0"/>
      </contour>
      <contour>
        <pt x="475" y="600" on="1"/>
        <pt x="475" y="250" on="1"/>
        <pt x="475" y="175" on="0"/>
        <pt x="537" y="138" on="1"/>
        <pt x="600" y="100" on="0"/>
        <pt x="725" y="100" on="1"/>
        <pt x="825" y="100" on="1"/>
        <pt x="950" y="100" on="0"/>
        <pt x="1013" y="138" on="1"/>
        <pt x="1075" y="175" on="0"/>
        <pt x="1075" y="250" on="1"/>
        <pt x="1075" y="600" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni17B6" xMin="-398" yMin="0" xMax="475" yMax="1400">
      <contour>
        <pt x="300" y="0" on="1"/>
        <pt x="300" y="1072" on="1"/>
        <pt x="-90" y="1249" on="1"/>
        <pt x="-300" y="1155" on="1"/>
        <pt x="-398" y="1220" on="1"/>
        <pt x="0" y="1400" on="1"/>
        <pt x="475" y="1185" on="1"/>
        <pt x="475" y="0" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni17BB" xMin="-525" yMin="-750" xMax="-300" yMax="-150">
      <contour>
        <pt x="-475" y="-750" on="1"/>
        <pt x="-475" y="-300" on="1"/>
        <pt x="-475" y="-275" on="0"/>
        <pt x="-488" y="-262" on="1"/>
        <pt x="-500" y="-250" on="0"/>
        <pt x="-525" y="-250" on="1"/>
        <pt x="-525" y="-200" on="0"/>
        <pt x="-497" y="-175" on="1"/>
        <pt x="-469" y="-150" on="0"/>
        <pt x="-412" y="-150" on="1"/>
        <pt x="-356" y="-150" on="0"/>
        <pt x="-328" y="-175" on="1"/>
        <pt x="-300" y="-200" on="0"/>
        <pt x="-300" y="-250" on="1"/>
        <pt x="-300" y="-750" on="1"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni17BE" xMin="-1100" yMin="1650" xMax="-300" yMax="2050">
      <contour>
        <pt x="-1100" y="1754" on="1"/>
        <pt x="-1100" y="1884" on="0"/>
        <pt x="-1029" y="1949" on="1"/>
        <pt x="-957" y="2014" on="0"/>
        <pt x="-814" y="2014" on="1"/>
        <pt x="-730" y="2014" on="0"/>
        <pt x="-630" y="1970" on="1"/>
        <pt x="-531" y="1926" on="0"/>
        <pt x="-414" y="1840" on="1"/>
        <pt x="-414" y="2050" on="1"/>
        <pt x="-300" y="2050" on="1"/>
        <pt x="-300" y="1650" on="1"/>
        <pt x="-929" y="1650" on="1"/>
        <pt x="-1014" y="1650" on="0"/>
        <pt x="-1057" y="1676" on="1"/>
        <pt x="-1100" y="1702" on="0"/>
      </contour>
      <contour>
        <pt x="-814" y="1857" on="1"/>
        <pt x="-871" y="1857" on="0"/>
        <pt x="-900" y="1832" on="1"/>
        <pt x="-929" y="1805" on="0"/>
        <pt x="-929" y="1754" on="1"/>
        <pt x="-483" y="1754" on="1"/>
        <pt x="-551" y="1805" on="0"/>
        <pt x="-634" y="1832" on="1"/>
        <pt x="-716" y="1857" on="0"/>
      </contour>
      <instructions/>
    </TTGlyph>

    <TTGlyph name="uni17C6" xMin="-900" yMin="1600" xMax="-450" yMax="2050">
      <contour>
        <pt x="-775" y="1825" on="1"/>
        <pt x="-775" y="1775" on="0"/>
        <pt x="-750" y="1750" on="1"/>
        <pt x="-725" y="1725" on="0"/>
        <pt x="-675" y="1725" on="1"/>
        <pt x="-625" y="1725" on="0"/>
        <pt x="-600" y="1750" on="1"/>
        <pt x="-575" y="1775" on="0"/>
        <pt x="-575" y="1825" on="1"/>
        <pt x="-575" y="1875" on="0"/>
        <pt x="-600" y="1900" on="1"/>
        <pt x="-625" y="1925" on="0"/>
        <pt x="-675" y="1925" on="1"/>
        <pt x="-725" y="1925" on="0"/>
        <pt x="-750" y="1900" on="1"/>
        <pt x="-775" y="1875" on="0"/>
      </contour>
      <contour>
        <pt x="-450" y="1825" on="1"/>
        <pt x="-450" y="1712" on="0"/>
        <pt x="-506" y="1656" on="1"/>
        <pt x="-562" y="1600" on="0"/>
        <pt x="-675" y="1600" on="1"/>
        <pt x="-788" y="1600" on="0"/>
        <pt x="-844" y="1656" on="1"/>
        <pt x="-900" y="1712" on="0"/>
        <pt x="-900" y="1825" on="1"/>
        <pt x="-900" y="1938" on="0"/>
        <pt x="-844" y="1994" on="1"/>
        <pt x="-788" y="2050" on="0"/>
        <pt x="-675" y="2050" on="1"/>
        <pt x="-562" y="2050" on="0"/>
        <pt x="-506" y="1994" on="1"/>
        <pt x="-450" y="1938" on="0"/>
      </contour>
      <instructions/>
    </TTGlyph>

  </glyf>

  <name>
    <namerecord nameID="0" platformID="3" platEncID="1" langID="0x409">
      Copyright (c) 2013, Danh Hong (khmertype.org)
    </namerecord>
    <namerecord nameID="1" platformID="3" platEncID="1" langID="0x409">
      Khmer
    </namerecord>
    <namerecord nameID="2" platformID="3" platEncID="1" langID="0x409">
      Regular
    </namerecord>
    <namerecord nameID="3" platformID="3" platEncID="1" langID="0x409">
      Khmer:Version 2.00
    </namerecord>
    <namerecord nameID="4" platformID="3" platEncID="1" langID="0x409">
      Khmer
    </namerecord>
    <namerecord nameID="5" platformID="3" platEncID="1" langID="0x409">
      Version 2.00 February 8, 2013
    </namerecord>
    <namerecord nameID="6" platformID="3" platEncID="1" langID="0x409">
      Khmer
    </namerecord>
  </name>

  <post>
    <formatType value="3.0"/>
    <italicAngle value="0.0"/>
    <underlinePosition value="-154"/>
    <underlineThickness value="102"/>
    <isFixedPitch value="0"/>
    <minMemType42 value="0"/>
    <maxMemType42 value="0"/>
    <minMemType1 value="0"/>
    <maxMemType1 value="0"/>
  </post>

  <gasp>
    <gaspRange rangeMaxPPEM="5" rangeGaspBehavior="2"/>
    <gaspRange rangeMaxPPEM="65535" rangeGaspBehavior="3"/>
  </gasp>

  <GDEF>
    <Version value="0x00010000"/>
    <GlyphClassDef>
      <ClassDef glyph=".notdef" class="1"/>
      <ClassDef glyph="glyph00177" class="1"/>
      <ClassDef glyph="glyph00188" class="1"/>
      <ClassDef glyph="glyph00225" class="1"/>
      <ClassDef glyph="glyph00235" class="1"/>
      <ClassDef glyph="glyph00236" class="1"/>
      <ClassDef glyph="glyph00240" class="1"/>
      <ClassDef glyph="uni1789" class="1"/>
      <ClassDef glyph="uni1793" class="1"/>
      <ClassDef glyph="uni1794" class="1"/>
      <ClassDef glyph="uni1798" class="1"/>
      <ClassDef glyph="uni17B6" class="1"/>
      <ClassDef glyph="uni17BB" class="1"/>
      <ClassDef glyph="uni17BE" class="1"/>
      <ClassDef glyph="uni17C6" class="1"/>
    </GlyphClassDef>
  </GDEF>

  <GPOS>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=0 -->
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=0 -->
    </FeatureList>
    <LookupList>
      <!-- LookupCount=0 -->
    </LookupList>
  </GPOS>

  <GSUB>
    <Version value="0x00010000"/>
    <ScriptList>
      <!-- ScriptCount=1 -->
      <ScriptRecord index="0">
        <ScriptTag value="khmr"/>
        <Script>
          <DefaultLangSys>
            <ReqFeatureIndex value="65535"/>
            <!-- FeatureCount=3 -->
            <FeatureIndex index="0" value="0"/>
            <FeatureIndex index="1" value="1"/>
            <FeatureIndex index="2" value="2"/>
          </DefaultLangSys>
          <!-- LangSysCount=0 -->
        </Script>
      </ScriptRecord>
    </ScriptList>
    <FeatureList>
      <!-- FeatureCount=3 -->
      <FeatureRecord index="0">
        <FeatureTag value="blwf"/>
        <Feature>
          <!-- LookupCount=2 -->
          <LookupListIndex index="0" value="1"/>
          <LookupListIndex index="1" value="2"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="1">
        <FeatureTag value="clig"/>
        <Feature>
          <!-- LookupCount=3 -->
          <LookupListIndex index="0" value="0"/>
          <LookupListIndex index="1" value="1"/>
          <LookupListIndex index="2" value="2"/>
        </Feature>
      </FeatureRecord>
      <FeatureRecord index="2">
        <FeatureTag value="pref"/>
        <Feature>
          <!-- LookupCount=0 -->
        </Feature>
      </FeatureRecord>
    </FeatureList>
    <LookupList>
      <!-- LookupCount=6 -->
      <Lookup index="0">
        <LookupType value="6"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=2 -->
        <ChainContextSubst index="0" Format="3">
          <!-- BacktrackGlyphCount=0 -->
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="uni1789"/>
            <Glyph value="uni1793"/>
            <Glyph value="uni1794"/>
            <Glyph value="uni1798"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=1 -->
          <LookAheadCoverage index="0">
            <Glyph value="uni17B6"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="3"/>
          </SubstLookupRecord>
        </ChainContextSubst>
        <ChainContextSubst index="1" Format="3">
          <!-- BacktrackGlyphCount=0 -->
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="uni1789"/>
            <Glyph value="uni1793"/>
            <Glyph value="uni1794"/>
            <Glyph value="uni1798"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=2 -->
          <LookAheadCoverage index="0">
            <Glyph value="uni17BB"/>
          </LookAheadCoverage>
          <LookAheadCoverage index="1">
            <Glyph value="uni17B6"/>
          </LookAheadCoverage>
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="3"/>
          </SubstLookupRecord>
        </ChainContextSubst>
      </Lookup>
      <Lookup index="1">
        <LookupType value="6"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <ChainContextSubst index="0" Format="3">
          <!-- BacktrackGlyphCount=1 -->
          <BacktrackCoverage index="0">
            <Glyph value="uni1789"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="uni17BB"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=0 -->
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="4"/>
          </SubstLookupRecord>
        </ChainContextSubst>
      </Lookup>
      <Lookup index="2">
        <LookupType value="6"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=2 -->
        <ChainContextSubst index="0" Format="3">
          <!-- BacktrackGlyphCount=1 -->
          <BacktrackCoverage index="0">
            <Glyph value="glyph00225"/>
            <Glyph value="glyph00235"/>
            <Glyph value="glyph00236"/>
            <Glyph value="glyph00240"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="uni17B6"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=0 -->
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="5"/>
          </SubstLookupRecord>
        </ChainContextSubst>
        <ChainContextSubst index="1" Format="3">
          <!-- BacktrackGlyphCount=2 -->
          <BacktrackCoverage index="0">
            <Glyph value="uni17BB"/>
          </BacktrackCoverage>
          <BacktrackCoverage index="1">
            <Glyph value="glyph00225"/>
            <Glyph value="glyph00235"/>
            <Glyph value="glyph00236"/>
            <Glyph value="glyph00240"/>
          </BacktrackCoverage>
          <!-- InputGlyphCount=1 -->
          <InputCoverage index="0">
            <Glyph value="uni17B6"/>
          </InputCoverage>
          <!-- LookAheadGlyphCount=0 -->
          <!-- SubstCount=1 -->
          <SubstLookupRecord index="0">
            <SequenceIndex value="0"/>
            <LookupListIndex value="5"/>
          </SubstLookupRecord>
        </ChainContextSubst>
      </Lookup>
      <Lookup index="3">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="uni1789" out="glyph00225"/>
          <Substitution in="uni1793" out="glyph00235"/>
          <Substitution in="uni1794" out="glyph00236"/>
          <Substitution in="uni1798" out="glyph00240"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="4">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="uni17BB" out="glyph00177"/>
        </SingleSubst>
      </Lookup>
      <Lookup index="5">
        <LookupType value="1"/>
        <LookupFlag value="0"/>
        <!-- SubTableCount=1 -->
        <SingleSubst index="0">
          <Substitution in="uni17B6" out="glyph00188"/>
        </SingleSubst>
      </Lookup>
    </LookupList>
  </GSUB>

</ttFont>
